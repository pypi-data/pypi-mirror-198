[tool.poetry]
name = "cfn_kafka_admin"
version = "0.4.5.post0"
description = "AWS CloudFormation Resources to manage Kafka"
authors = ["johnpreston <john@compose-x.io>"]
license = "MPL-2.0"
classifiers = [
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]
readme = "README.rst"
[tool.poetry.urls]
"Source" = "https://github.com/compose-x/cfn-kafka-admin"
"Bug Tracker" = "https://github.com/compose-x/cfn-kafka-admin/issues"

[tool.poetry.dependencies]
python = "^3.8"
compose-x-common = "^0.5.0"
jsonschema = "^4.5.1"
importlib-resources = "^5.7.1"
PyYAML = "^6.0"
troposphere = "^4.0.1"
kafka-schema-registry-admin = "^0.1.0"
datamodel-code-generator = {extras = ["http"], version = "^0.12"}
aws-cfn-custom-resource-resolve-parser = "^0.2.1"
kafka-python = "^2.0.2"
cfn-resource-provider = "^1.0.7"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
flake8 = "^3.9.2"
coverage = "^5.5"
pytest = "^6.2.5"
pre-commit = "^2.19.0"
tbump = "^6.8.0"
cleanpy = "^0.3.1"
Sphinx = "^4.5.0"
sphinx-material = "^0.0.35"
sphinx-jsonschema = "^1.19.1"
pyupgrade = "^2.32.1"

[tool.poetry.scripts]
aws-cfn-kafka-admin-provider = "cfn_kafka_admin.cli:main"

[tool.datamodel-codegen]
input = "cfn_kafka_admin/specs/aws-cfn-kafka-admin-provider-schema.json"
input-file-type = "jsonschema"
output = "cfn_kafka_admin/models/admin.py"
reuse-model = "true"
target-python-version = "3.7"

[tool.tbump]
github_url = "https://github.com/compose-x/cfn-kafka-admin"

[tool.tbump.version]
current = "0.4.5.post0"

regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?:(?P<rc>[\S]+))?
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "cfn_kafka_admin/__init__.py"

[[tool.tbump.before_commit]]
name = "Files format"
cmd = "make conform"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_first_party = "kelvin"

[tool.coverage.report]
exclude_lines = [
  "if __name__ == '__main__'"
]
[tool.coverage.run]
omit = [
  "*/cli.py"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
