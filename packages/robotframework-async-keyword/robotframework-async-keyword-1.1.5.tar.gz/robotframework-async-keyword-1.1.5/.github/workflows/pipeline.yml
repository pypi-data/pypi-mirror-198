name: Pipeline Tests

on: [push, pull_request]

jobs:
  flake8:
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U flake8 flake8-polyfill robotframework
      - name: Analysing the code with flake8
        run: |
          flake8 $(git ls-files '*.py')

  pylint:
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools_scm setuptools pylint robotframework
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')

  robot-framework:
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        robotframework-version: [ '5.0.1', '6.0.2', 'latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools_scm setuptools
      - name: Install robotframework latest
        if: ${{ matrix.robotframework-version == 'latest' }}
        run: |
          pip install -U robotframework
      - name: Install robotframework ${{ matrix.robotframework-version }}
        if: ${{ matrix.robotframework-version != 'latest' }}
        run: |
          pip install robotframework==${{ matrix.robotframework-version }}
      - name: Install AsyncLibrary
        run: |
          pip install -e .
      - name: Executing Robot Framework Tests
        run: |
          robot tests/
