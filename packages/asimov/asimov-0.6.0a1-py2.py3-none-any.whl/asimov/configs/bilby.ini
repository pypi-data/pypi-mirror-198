{%- if production.event.repository -%}
{%- assign repo_dir = production.event.repository.directory -%}
{%- else -%}
{%- assign repo_dir = "." -%}
{%- endif -%}
{%- assign meta = production.meta -%}
{%- assign sampler = production.meta['sampler'] -%}
{%- assign scheduler = production.meta['scheduler'] -%}
{%- assign likelihood = production.meta['likelihood'] -%}
{%- assign priors = production.meta['priors'] -%}
{%- assign data = production.meta['data'] -%}
{%- assign quality = production.meta['quality'] -%}
{%- assign ifos = production.meta['interferometers'] -%}
################################################################################
## Calibration arguments
################################################################################

calibration-model=CubicSpline
spline-calibration-envelope-dict={ {% for ifo in ifos %}{{ifo}}:{{data['calibration'][ifo]}},{% endfor %} }
spline-calibration-nodes=10
spline-calibration-amplitude-uncertainty-dict=None
spline-calibration-phase-uncertainty-dict=None

################################################################################
## Data generation arguments
################################################################################

ignore-gwpy-data-quality-check=True
gps-tuple=None
gps-file=None
timeslide-file=None
timeslide-dict=None
trigger-time={{ production.meta['event time'] }}
gaussian-noise=False
n-simulation=0
data-dict={ {% if data['data files'].size > 0 %} {% for ifo in ifos %}{{data['data files'][ifo]}},{% endfor %} {% endif %} }
data-format=None
channel-dict={ {% for ifo in ifos %}{{data['channels'][ifo]}},{% endfor %} }

################################################################################
## Detector arguments
################################################################################

coherence-test=False
detectors={{ ifos }}
duration={{ data['segment length'] }}
generation-seed=None
psd-dict={ {% for ifo in ifos %}{{ifo}}:{{production.psds[ifo]}},{% endfor %} }
psd-fractional-overlap=0.5
post-trigger-duration=2.0
sampling-frequency={{ likelihood['sample rate'] | round }}
psd-length={{ likelihood['psd length'] | round }}
psd-maximum-duration=1024
psd-method=median
psd-start-time=None
minimum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['minimum frequency'][ifo]}},{% endfor %} }
maximum-frequency={ {% for ifo in ifos %}{{ifo}}:{{quality['maximum frequency'][ifo]}},{% endfor %} }
zero-noise=False
tukey-roll-off=0.4
resampling-method=lal

################################################################################
## Injection arguments
################################################################################

injection=False
injection-dict=None
injection-file=None
injection-numbers=None
injection-waveform-approximant=None

################################################################################
## Job submission arguments
################################################################################

accounting={{ scheduler['accounting group'] }}
accounting_user = {{ config['condor']['user'] }}
label={{ production.name }}
local=False
local-generation={{ scheduler['local generation'] | default: False }}
local-plot=False
outdir={{ production.rundir }}
periodic-restart-time={{ scheduler['periodic restart time'] | default: 28800 }}
request-memory={{ scheduler['request memory'] | default: 8.0}}
request-memory-generation=None
request-cpus={{ scheduler['request cpus'] | default: 16}}
scheduler={{ scheduler['type'] | default: "condor" }}
scheduler-args=None
scheduler-module=None
scheduler-env=None
transfer-files={% if scheduler['osg'] %}True{% else %}{{ scheduler['transfer files'] | default: False }}{% endif %}
log-directory=None
online-pe=False
osg={{ scheduler['osg'] | default: False }}
desired-sites={{ scheduler['desired sites'] | default: None }}

################################################################################
## Likelihood arguments
################################################################################

distance-marginalization={{ likelihood['marginalization']['distance'] | default: "False" }}
{% assign lookup_default = repo_dir+"/C01_offline/"+production.name+".TD.npz" -%}
distance-marginalization-lookup-table={{ likelihood['marginalization']['distance lookup'] | default: lookup_default }}
phase-marginalization={{ likelihood['marginalization']['phase'] | default: "False" }}
time-marginalization={{ likelihood['marginalization']['time'] | default: "True" }}
jitter-time=True
reference-frame={% if production.meta['interferometers'] contains "H1" %}H1{% endif %}{% if production.meta['interferometers'] contains "L1" %}L1{% endif %}{% if production.meta['interferometers'] contains "V1" %}V1{% endif %}
time-reference=geocent
likelihood-type={{ likelihood['type'] | default: "GravitationalWaveTransient" }}

{% if likelihood contains "roq" %}
roq-folder={{ likelihood['roq']['folder'] | default: "None" }}
roq-scale-factor={{ likelihood['roq']['scale'] | default: 1 }}
{% endif %}

extra-likelihood-kwargs={{ likelihood['kwargs'] | default: "None" }}

################################################################################
## Output arguments
################################################################################

plot-calibration=False
plot-corner=False
plot-marginal=False
plot-skymap=False
plot-waveform=False
plot-format=png
create-summary=False
email=None
existing-dir=None
webdir={{ config['general']['webroot'] }}/{{ production.event.name }}/{{ production.name }}
summarypages-arguments=None
result-format=hdf5
final-result=True
final-result-nsamples=20000

################################################################################
## Prior arguments
################################################################################

default-prior = {{ priors['default'] | default: "BBHPriorDict" }}
deltaT=0.2
prior-file={{repo_dir}}/C01_offline/{{production.name}}.prior
enforce-signal-duration=True

################################################################################
## Post processing arguments
################################################################################

postprocessing-executable=None
postprocessing-arguments=None
single-postprocessing-executable=None
single-postprocessing-arguments=None

################################################################################
## Sampler arguments
################################################################################

sampler={{sampler['sampler'] | default: "dynesty" }}
sampling-seed={{sampler['seed'] | default: None }}
n-parallel={{ sampler['parallel jobs'] | default: 4 }}
sampler-kwargs={{ sampler['sampler kwargs'] |  default: "{'nlive': 2000, 'sample': 'rwalk', 'walks': 100, 'nact': 50, 'check_point_delta_t':1800, 'check_point_plot':True}"  }} 

################################################################################
## Waveform arguments
################################################################################

waveform-generator={{ production.meta['waveform']['generator'] | default: "bilby.gw.waveform_generator.WaveformGenerator" }}
reference-frequency={{ production.meta['waveform']['reference frequency'] }}
waveform-approximant={{ production.meta['waveform']['approximant'] }}
catch-waveform-errors=True
pn-spin-order={{ production.meta['waveform']['pn spin order'] | default: -1 }}
pn-tidal-order={{ production.meta['waveform']['pn tidal order'] | default: -1 }}
pn-phase-order={{ production.meta['waveform']['pn phase order'] | default: -1 }}
pn-amplitude-order={{ production.meta['waveform']['pn amplitude order'] | default: 1 }}
numerical-relativity-file={{ production.meta['waveform']['file'] | default: "None" }}
waveform-arguments-dict={{ production.meta['waveform']['arguments'] | default: "None" }}
mode-array={{ production.meta['waveform']['mode array'] | default: "None" }}
frequency-domain-source-model={{ production.meta['likelihood']['frequency domain source model'] | default: "lal_binary_black_hole" }}
conversion-function={{ production.meta['waveform']['conversion function'] | default: "None" }}
generation-function={{ production.meta['waveform']['generation function'] | default: "None" }}