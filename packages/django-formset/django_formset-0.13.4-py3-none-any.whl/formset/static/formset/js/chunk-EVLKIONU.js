var d=class{constructor(o){this.filterByValues=new Map;this.touch=()=>{this.fieldGroup.classList.remove("dj-untouched","dj-validated"),this.fieldGroup.classList.add("dj-touched")};let n=o.closest("django-field-group"),t=o.form,s=o.closest("django-formset");if(!n||!t||!s)throw new Error("Attempt to initialize <django-selectize> outside <django-formset>");if(this.fieldGroup=n,this.isIncomplete=o.hasAttribute("incomplete"),this.isIncomplete){let e=t.getAttribute("name")??"__default__";this.endpoint=s.getAttribute("endpoint")??"",this.fieldName=`${e}.${o.getAttribute("name")}`}t.addEventListener("reset",e=>this.formResetted(e)),t.addEventListener("submitted",e=>this.formSubmitted(e))}setupFilters(o){var t;(((t=o.getAttribute("filter-by"))==null?void 0:t.split(","))??[]).forEach(s=>{var a;let e=(a=o.form)==null?void 0:a.elements.namedItem(s);e instanceof HTMLInputElement?(this.filterByValues.set(s,e.value),e.addEventListener("change",i=>{let r=i.currentTarget;r instanceof HTMLInputElement&&(this.filterByValues.set(s,r.value),this.reloadOptions())})):e instanceof HTMLSelectElement&&(this.filterByValues.set(s,Array.from(e.selectedOptions).map(i=>i.value)),e.addEventListener("change",i=>{i.currentTarget instanceof HTMLSelectElement&&(this.filterByValues.set(s,Array.from(e.selectedOptions).map(c=>c.value)),this.reloadOptions())})),Array.from(this.filterByValues.values()).some(i=>i.some(r=>r))&&this.reloadOptions()})}buildFetchQuery(o,n){let t=new URLSearchParams;t.set("offset",String(o)),n&&t.set("search",encodeURIComponent(n));for(let[s,e]of this.filterByValues)typeof e=="string"?t.set(`filter-${s}`,encodeURIComponent(e)):e.forEach(a=>t.append(`filter-${s}`,encodeURIComponent(a)));return t}async loadOptions(o,n){let t=new Headers;t.append("Accept","application/json"),o.set("field",this.fieldName);let s=await fetch(`${this.endpoint}?${o.toString()}`,{method:"GET",headers:t});if(s.status===200){let e=await s.json();typeof e.incomplete=="boolean"&&(this.isIncomplete=e.incomplete),n(e.options)}else console.error(`Failed to fetch from ${this.endpoint} (status=${s.status})`)}};export{d as a};
