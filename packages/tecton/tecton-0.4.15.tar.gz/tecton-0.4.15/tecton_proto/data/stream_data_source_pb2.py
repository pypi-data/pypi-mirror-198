# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tecton_proto/data/stream_data_source.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tecton_proto.common import spark_schema_pb2 as tecton__proto_dot_common_dot_spark__schema__pb2
from tecton_proto.args import user_defined_function_pb2 as tecton__proto_dot_args_dot_user__defined__function__pb2
from tecton_proto.args import data_source_config_pb2 as tecton__proto_dot_args_dot_data__source__config__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='tecton_proto/data/stream_data_source.proto',
  package='tecton_proto.data',
  syntax='proto2',
  serialized_options=b'\n\017com.tecton.dataP\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n*tecton_proto/data/stream_data_source.proto\x12\x11tecton_proto.data\x1a&tecton_proto/common/spark_schema.proto\x1a-tecton_proto/args/user_defined_function.proto\x1a*tecton_proto/args/data_source_config.proto\"\\\n\x0fKinesisDSConfig\x12\x1f\n\x0bstream_name\x18\x01 \x01(\tR\nstreamName\x12\x16\n\x06region\x18\x02 \x01(\tR\x06regionJ\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06\"\xfd\x02\n\rKafkaDSConfig\x12+\n\x11\x62ootstrap_servers\x18\x01 \x01(\tR\x10\x62ootstrapServers\x12\x16\n\x06topics\x18\x02 \x01(\tR\x06topics\x12\x32\n\x15ssl_keystore_location\x18\x07 \x01(\tR\x13sslKeystoreLocation\x12\x44\n\x1fssl_keystore_password_secret_id\x18\x08 \x01(\tR\x1bsslKeystorePasswordSecretId\x12\x36\n\x17ssl_truststore_location\x18\t \x01(\tR\x15sslTruststoreLocation\x12H\n!ssl_truststore_password_secret_id\x18\n \x01(\tR\x1dsslTruststorePasswordSecretId\x12+\n\x11security_protocol\x18\x0b \x01(\tR\x10securityProtocol\"\x99\x05\n\x10StreamDataSource\x12T\n\x13kinesis_data_source\x18\x01 \x01(\x0b\x32\".tecton_proto.data.KinesisDSConfigH\x00R\x11kinesisDataSource\x12N\n\x11kafka_data_source\x18\x0b \x01(\x0b\x32 .tecton_proto.data.KafkaDSConfigH\x00R\x0fkafkaDataSource\x12\x43\n\x0cspark_schema\x18\t \x01(\x0b\x32 .tecton_proto.common.SparkSchemaR\x0bsparkSchema\x12Z\n\x15raw_stream_translator\x18\x03 \x01(\x0b\x32&.tecton_proto.args.UserDefinedFunctionR\x13rawStreamTranslator\x12<\n\x1a\x64\x65\x64uplication_column_names\x18\n \x03(\tR\x18\x64\x65\x64uplicationColumnNames\x12\x1f\n\x0btime_column\x18\x06 \x01(\tR\ntimeColumn\x12\x44\n\rstream_config\x18\x07 \x01(\x0b\x32\x1f.tecton_proto.args.StreamConfigR\x0cstreamConfig\x12\x44\n\x07options\x18\x08 \x03(\x0b\x32*.tecton_proto.data.StreamDataSource.OptionR\x07options\x1a\x30\n\x06Option\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05valueB\x0f\n\rstream_sourceJ\x04\x08\x02\x10\x03J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06\x42\x13\n\x0f\x63om.tecton.dataP\x01'
  ,
  dependencies=[tecton__proto_dot_common_dot_spark__schema__pb2.DESCRIPTOR,tecton__proto_dot_args_dot_user__defined__function__pb2.DESCRIPTOR,tecton__proto_dot_args_dot_data__source__config__pb2.DESCRIPTOR,])




_KINESISDSCONFIG = _descriptor.Descriptor(
  name='KinesisDSConfig',
  full_name='tecton_proto.data.KinesisDSConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='stream_name', full_name='tecton_proto.data.KinesisDSConfig.stream_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='streamName', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='region', full_name='tecton_proto.data.KinesisDSConfig.region', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='region', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=196,
  serialized_end=288,
)


_KAFKADSCONFIG = _descriptor.Descriptor(
  name='KafkaDSConfig',
  full_name='tecton_proto.data.KafkaDSConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='bootstrap_servers', full_name='tecton_proto.data.KafkaDSConfig.bootstrap_servers', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='bootstrapServers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='topics', full_name='tecton_proto.data.KafkaDSConfig.topics', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='topics', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ssl_keystore_location', full_name='tecton_proto.data.KafkaDSConfig.ssl_keystore_location', index=2,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sslKeystoreLocation', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ssl_keystore_password_secret_id', full_name='tecton_proto.data.KafkaDSConfig.ssl_keystore_password_secret_id', index=3,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sslKeystorePasswordSecretId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ssl_truststore_location', full_name='tecton_proto.data.KafkaDSConfig.ssl_truststore_location', index=4,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sslTruststoreLocation', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ssl_truststore_password_secret_id', full_name='tecton_proto.data.KafkaDSConfig.ssl_truststore_password_secret_id', index=5,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sslTruststorePasswordSecretId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='security_protocol', full_name='tecton_proto.data.KafkaDSConfig.security_protocol', index=6,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='securityProtocol', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=291,
  serialized_end=672,
)


_STREAMDATASOURCE_OPTION = _descriptor.Descriptor(
  name='Option',
  full_name='tecton_proto.data.StreamDataSource.Option',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tecton_proto.data.StreamDataSource.Option.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='key', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='tecton_proto.data.StreamDataSource.Option.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1257,
  serialized_end=1305,
)

_STREAMDATASOURCE = _descriptor.Descriptor(
  name='StreamDataSource',
  full_name='tecton_proto.data.StreamDataSource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kinesis_data_source', full_name='tecton_proto.data.StreamDataSource.kinesis_data_source', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='kinesisDataSource', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='kafka_data_source', full_name='tecton_proto.data.StreamDataSource.kafka_data_source', index=1,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='kafkaDataSource', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='spark_schema', full_name='tecton_proto.data.StreamDataSource.spark_schema', index=2,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sparkSchema', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='raw_stream_translator', full_name='tecton_proto.data.StreamDataSource.raw_stream_translator', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='rawStreamTranslator', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='deduplication_column_names', full_name='tecton_proto.data.StreamDataSource.deduplication_column_names', index=4,
      number=10, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='deduplicationColumnNames', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_column', full_name='tecton_proto.data.StreamDataSource.time_column', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='timeColumn', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stream_config', full_name='tecton_proto.data.StreamDataSource.stream_config', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='streamConfig', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='options', full_name='tecton_proto.data.StreamDataSource.options', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='options', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_STREAMDATASOURCE_OPTION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='stream_source', full_name='tecton_proto.data.StreamDataSource.stream_source',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=675,
  serialized_end=1340,
)

_STREAMDATASOURCE_OPTION.containing_type = _STREAMDATASOURCE
_STREAMDATASOURCE.fields_by_name['kinesis_data_source'].message_type = _KINESISDSCONFIG
_STREAMDATASOURCE.fields_by_name['kafka_data_source'].message_type = _KAFKADSCONFIG
_STREAMDATASOURCE.fields_by_name['spark_schema'].message_type = tecton__proto_dot_common_dot_spark__schema__pb2._SPARKSCHEMA
_STREAMDATASOURCE.fields_by_name['raw_stream_translator'].message_type = tecton__proto_dot_args_dot_user__defined__function__pb2._USERDEFINEDFUNCTION
_STREAMDATASOURCE.fields_by_name['stream_config'].message_type = tecton__proto_dot_args_dot_data__source__config__pb2._STREAMCONFIG
_STREAMDATASOURCE.fields_by_name['options'].message_type = _STREAMDATASOURCE_OPTION
_STREAMDATASOURCE.oneofs_by_name['stream_source'].fields.append(
  _STREAMDATASOURCE.fields_by_name['kinesis_data_source'])
_STREAMDATASOURCE.fields_by_name['kinesis_data_source'].containing_oneof = _STREAMDATASOURCE.oneofs_by_name['stream_source']
_STREAMDATASOURCE.oneofs_by_name['stream_source'].fields.append(
  _STREAMDATASOURCE.fields_by_name['kafka_data_source'])
_STREAMDATASOURCE.fields_by_name['kafka_data_source'].containing_oneof = _STREAMDATASOURCE.oneofs_by_name['stream_source']
DESCRIPTOR.message_types_by_name['KinesisDSConfig'] = _KINESISDSCONFIG
DESCRIPTOR.message_types_by_name['KafkaDSConfig'] = _KAFKADSCONFIG
DESCRIPTOR.message_types_by_name['StreamDataSource'] = _STREAMDATASOURCE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

KinesisDSConfig = _reflection.GeneratedProtocolMessageType('KinesisDSConfig', (_message.Message,), {
  'DESCRIPTOR' : _KINESISDSCONFIG,
  '__module__' : 'tecton_proto.data.stream_data_source_pb2'
  # @@protoc_insertion_point(class_scope:tecton_proto.data.KinesisDSConfig)
  })
_sym_db.RegisterMessage(KinesisDSConfig)

KafkaDSConfig = _reflection.GeneratedProtocolMessageType('KafkaDSConfig', (_message.Message,), {
  'DESCRIPTOR' : _KAFKADSCONFIG,
  '__module__' : 'tecton_proto.data.stream_data_source_pb2'
  # @@protoc_insertion_point(class_scope:tecton_proto.data.KafkaDSConfig)
  })
_sym_db.RegisterMessage(KafkaDSConfig)

StreamDataSource = _reflection.GeneratedProtocolMessageType('StreamDataSource', (_message.Message,), {

  'Option' : _reflection.GeneratedProtocolMessageType('Option', (_message.Message,), {
    'DESCRIPTOR' : _STREAMDATASOURCE_OPTION,
    '__module__' : 'tecton_proto.data.stream_data_source_pb2'
    # @@protoc_insertion_point(class_scope:tecton_proto.data.StreamDataSource.Option)
    })
  ,
  'DESCRIPTOR' : _STREAMDATASOURCE,
  '__module__' : 'tecton_proto.data.stream_data_source_pb2'
  # @@protoc_insertion_point(class_scope:tecton_proto.data.StreamDataSource)
  })
_sym_db.RegisterMessage(StreamDataSource)
_sym_db.RegisterMessage(StreamDataSource.Option)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
