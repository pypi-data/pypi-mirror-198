[metadata]
name = pymodbus
version = attr: pymodbus.__version__
author = "Galen Collins, Jan Iversen"
maintainer = "dhoomakethu, janiversen"
license = BSD-3-Clause
platforms = 'Linux', 'Mac OS X', 'Win'
description = A fully featured modbus protocol stack in python
keywords = modbus, asyncio, scada, client, server, simulator
long_description = file: README.rst
url = https://github.com/pymodbus-dev/pymodbus/
classifiers = 
	Development Status :: 4 - Beta
	Environment :: Console
	Framework :: AsyncIO
	Intended Audience :: Developers
	License :: OSI Approved :: BSD License
	Operating System :: POSIX :: Linux
	Operating System :: Unix
	Operating System :: MacOS :: MacOS X
	Operating System :: OS Independent
	Operating System :: Microsoft
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Topic :: System :: Networking
	Topic :: Utilities
project_urls = 
	Source Code  = https://github.com/pymodbus-dev/pymodbus
	Bug Reports  = https://github.com/pymodbus-dev/pymodbus/issues
	Docs: Dev    = https://pymodbus.readthedocs.io/en/latest/?badge=latest
	Discord      = https://discord.gg/vcP8qAz2

[options]
packages = find:
include_package_data = True
zip_safe = True
python_requires = >=3.8.0

[options.exclude_package_data]
'' = 
	examples
	test
	tools
	doc

[options.entry_points]
console_scripts = 
	pymodbus.console = pymodbus.repl.client.main:main
	pymodbus.server  = pymodbus.repl.server.main:app
	pymodbus.simulator = pymodbus.server.simulator.main:main

[options.packages.find]
include = pymodbus*

[pylint.master]
ignore-paths = 
	examples/v2.5.3,
	pymodbus/client/serial_asyncio,
	doc
ignore-patterns = ^\.#
persistent = no
load-plugins = 
	pylint.extensions.bad_builtin,
	pylint.extensions.check_elif,
	pylint.extensions.code_style,
	pylint.extensions.comparetozero,
	pylint.extensions.comparison_placement,
	pylint.extensions.confusing_elif,
	pylint.extensions.docparams,
	pylint.extensions.docstyle,
	pylint.extensions.emptystring,
	pylint.extensions.eq_without_hash,
	pylint.extensions.for_any_all,
	pylint.extensions.mccabe,
	pylint.extensions.overlapping_exceptions,
	pylint.extensions.private_import,
	pylint.extensions.set_membership,
	pylint.extensions.typing,
jobs = 0
suggestion-mode = yes
unsafe-load-any-extension = no
extension-pkg-allow-list = 
py-version = 3.8.0
limit-inference-results = 100
fail-under = 10.0
fail-on = 

[pylint.messages_control]
enable = all
disable = 
	duplicate-code,     # TBD
	file-ignored,       # ONLY to be used with extreme care.
	format,             # NOT wanted, handled by black
	locally-disabled,   # NOT wanted
	suppressed-message, # NOT wanted

[pylint.reports]
output-format = text
reports = no
evaluation = max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))
score = yes

[pylint.logging]
logging-modules = logging
logging-format-style = new

[pylint.miscellaneous]
notes = FIXME,XXX,TODO

[pylint.similarities]
min-similarity-lines = 4
ignore-comments = yes
ignore-docstrings = yes
ignore-imports = no
ignore-signatures = no

[pylint.variables]
init-import = no
dummy-variables-rgx = 
additional-builtins = 
callbacks = 
allow-global-unused-variables = yes
allowed-redefined-builtins = 
ignored-argument-names = _.*
redefining-builtins-modules = past.builtins,future.builtins,builtins,io

[pylint.format]
max-line-length = 100
ignore-long-lines = ^\s*(# )?<?https?://\S+>?$
single-line-if-stmt = no
single-line-class-stmt = no
max-module-lines = 2000
indent-string = '    '
indent-after-paren = 4

[pylint.basic]
good-names = i,j,k,rr,fc,rq,fd,x,_
bad-names = foo,bar,baz,toto,tutu,tata
bad-names-rgxs = 
name-group = 
include-naming-hint = no
function-naming-style = snake_case
function-rgx = [a-z_][a-z0-9_]{2,30}$
variable-naming-style = snake_case
variable-rgx = [a-z_][a-z0-9_]{2,30}$
const-naming-style = UPPER_CASE
const-rgx = (([A-Z_][A-Z0-9_]*)|(__.*__))$
attr-naming-style = snake_case
attr-rgx = ([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$
argument-naming-style = snake_case
argument-rgx = [a-z_][a-z0-9_]{2,30}$
class-attribute-naming-style = any
class-attribute-rgx = ([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$
class-const-naming-style = UPPER_CASE
inlinevar-naming-style = any
inlinevar-rgx = [A-Za-z_][A-Za-z0-9_]*$
class-naming-style = PascalCase
class-rgx = [A-Z_][a-zA-Z0-9]+$
module-naming-style = snake_case
module-rgx = (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
method-naming-style = snake_case
method-rgx = [a-z_][a-zA-Z0-9_]{2,}$
no-docstring-rgx = __.*__
docstring-min-length = -1
property-classes = abc.abstractproperty

[pylint.typecheck]
mixin-class-rgx = .*MixIn
ignored-modules = 
ignored-classes = SQLObject, optparse.Values, thread._local, _thread._local
generated-members = REQUEST,acl_users,aq_parent,argparse.Namespace
contextmanager-decorators = contextlib.contextmanager
ignore-none = yes
ignore-on-opaque-inference = yes
missing-member-hint = yes
missing-member-hint-distance = 1
missing-member-max-choices = 1

[pylint.spelling]
spelling-dict = 
spelling-ignore-words = 
spelling-ignore-comment-directives = fmt: on,fmt: off,noqa:,noqa,isort:skip,mypy:
spelling-private-dict-file = 
spelling-store-unknown-words = no
max-spelling-suggestions = 4

[pylint.design]
max-args = 10
max-locals = 25
max-returns = 11
max-branches = 27
max-statements = 100
max-parents = 7
ignored-parents = 
max-attributes = 20
min-public-methods = 2
max-public-methods = 25
max-bool-expr = 5
exclude-too-few-public-methods = 

[pylint.classes]
defining-attr-methods = __init__,__new__,setUp,__post_init__
valid-classmethod-first-arg = cls
valid-metaclass-classmethod-first-arg = mcs
exclude-protected = _asdict,_fields,_replace,_source,_make
check-protected-access-in-special-methods = no

[pylint.imports]
allow-any-import-level = no
allow-wildcard-with-all = no
analyse-fallback-blocks = no
deprecated-modules = regsub,TERMIOS,Bastion,rexec
import-graph = 
ext-import-graph = 
int-import-graph = 
known-standard-library = 
known-third-party = enchant
preferred-modules = 

[pylint.exceptions]
overgeneral-exceptions = Exception

[pylint.typing]
runtime-typing = true

[pylint.deprecated_builtins]
bad-functions = map,input

[pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = sys.exit,argparse.parse_error

[pylint.string]
check-quote-consistency = no
check-str-concat-over-line-jumps = no

[pylint.code_style]

[flake8]
exclude = pymodbus/client/serial_asyncio, venv,.venv,.git,build,examples/v2.5.3
doctests = True
max-line-length = 120
ignore = 
	D202,
	E203,
	E501,
	W503,
	W504,
	
	D211,
	D400,
	E731,
	W503
noqa-require-code = True

[mypy]
strict_optional = False
exclude = pymodbus/client/base.py
show_error_codes = true
local_partial_types = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
enable_error_code = ignore-without-code, redundant-self, truthy-iterable
disable_error_code = annotation-unchecked
strict_concatenate = false
disallow_subclassing_any = true
disallow_untyped_decorators = true
warn_unreachable = true

[egg_info]
tag_svn_revision = false
tag_build = 
tag_date = 0

[build-sphinx]
source-dir = doc/sphinx/
build-dir = doc/sphinx/build
all_files = 1

[upload_docs]
upload_dir = build/sphinx/html

[bdist_wheel]

[tool:pytest]
testpaths = test
addopts = -p no:warnings --dist loadgroup --numprocesses auto
asyncio_mode = auto

[coverage:run]
include = 
	pymodbus/
	test/
omit = 
	test/TO_DO_REWRITE
	examples/common/tornado_twister
	examples/contrib/tornado_twister

[codespell]
skip = ./doc/_build,./doc/source/_static,venv,.venv,.git,htmlcov,CHANGELOG.rst,.mypy_cache
ignore-words-list = asend

[isort]
skip = doc/_build,venv,.venv,.git,pymodbus/client/serial_asyncio
py_version = 38
profile = black
line_length = 79
lines_after_imports = 2
known_local_folder = 
	common
	contrib

