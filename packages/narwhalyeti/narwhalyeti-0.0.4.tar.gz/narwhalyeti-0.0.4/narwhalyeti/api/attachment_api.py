"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com)   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from narwhalyeti.api_client import ApiClient, Endpoint as _Endpoint
from narwhalyeti.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from narwhalyeti.model.attachment_response import AttachmentResponse
from narwhalyeti.model.error_response import ErrorResponse


class AttachmentApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.upload_attachment_endpoint = _Endpoint(
            settings={
                'response_type': (AttachmentResponse,),
                'auth': [
                    'oauth2',
                    'personal_access_token'
                ],
                'endpoint_path': '/attachments',
                'operation_id': 'upload_attachment',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'opt_fields',
                    'opt_pretty',
                    'resource_subtype',
                    'file',
                    'parent',
                    'url',
                    'name',
                    'connect_to_app',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                    'resource_subtype',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('resource_subtype',): {

                        "ASANA": "asana",
                        "DROPBOX": "dropbox",
                        "GDRIVE": "gdrive",
                        "ONEDRIVE": "onedrive",
                        "BOX": "box",
                        "VIMEO": "vimeo",
                        "EXTERNAL": "external"
                    },
                },
                'openapi_types': {
                    'opt_fields':
                        ([str],),
                    'opt_pretty':
                        (bool,),
                    'resource_subtype':
                        (str,),
                    'file':
                        (file_type,),
                    'parent':
                        (str,),
                    'url':
                        (str,),
                    'name':
                        (str,),
                    'connect_to_app':
                        (bool,),
                },
                'attribute_map': {
                    'opt_fields': 'opt_fields',
                    'opt_pretty': 'opt_pretty',
                    'resource_subtype': 'resource_subtype',
                    'file': 'file',
                    'parent': 'parent',
                    'url': 'url',
                    'name': 'name',
                    'connect_to_app': 'connect_to_app',
                },
                'location_map': {
                    'opt_fields': 'query',
                    'opt_pretty': 'query',
                    'resource_subtype': 'form',
                    'file': 'form',
                    'parent': 'form',
                    'url': 'form',
                    'name': 'form',
                    'connect_to_app': 'form',
                },
                'collection_format_map': {
                    'opt_fields': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'multipart/form-data'
                ]
            },
            api_client=api_client
        )

    def upload_attachment(
        self,
        **kwargs
    ):
        """Upload an attachment  # noqa: E501

        Upload an attachment.  This method uploads an attachment on an object and returns the compact record for the created attachment object. This is possible by either:  - Providing the URL of the external resource being attached, or - Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach files from third party services such as Dropbox, Box, Vimeo & Google Drive via the API  The 100MB size limit on attachments in Asana is enforced on this endpoint.  This endpoint expects a multipart/form-data encoded request containing the full contents of the file to be uploaded.  Requests made should follow the HTTP/1.1 specification that line terminators are of the form `CRLF` or `\\r\\n` outlined [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules) in order for the server to reliably and properly handle the request.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.upload_attachment(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            opt_fields ([str]): Defines fields to return. Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below. The id of included objects will always be returned, regardless of the field options.. [optional]
            opt_pretty (bool): Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.. [optional]
            resource_subtype (str): The type of the attachment. Must be one of the given values. If not specified, a file attachment of type `asana` will be assumed. Note that if the value of `resource_subtype` is `external`, a `parent`, `name`, and `url` must also be provided. . [optional]
            file (file_type): Required for `asana` attachments. . [optional]
            parent (str): Required identifier of the parent task, project, or project_brief, as a string. . [optional]
            url (str): The URL of the external resource being attached. Required for attachments of type `external`. . [optional]
            name (str): The name of the external resource being attached. Required for attachments of type `external`. . [optional]
            connect_to_app (bool): *Optional*. Only relevant for external attachments with a parent task. A boolean indicating whether the current app should be connected with the attachment for the purposes of showing an app components widget. Requires the app to have been added to a project the parent task is in. . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            AttachmentResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.upload_attachment_endpoint.call_with_http_info(**kwargs)

