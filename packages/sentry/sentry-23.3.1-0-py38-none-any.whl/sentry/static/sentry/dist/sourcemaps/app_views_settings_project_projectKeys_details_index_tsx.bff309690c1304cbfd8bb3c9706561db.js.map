{"version":3,"file":"chunks/app_views_settings_project_projectKeys_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6XAMe,MAAMA,UAGXC,EAAAA,EACRC,WACE,MAAO,EACT,CAEAC,SACE,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAmB,CAACC,MAAOC,KAAKL,WAAWM,SACzCD,KAAKE,mBAGZ,EAdmBT,EAASU,YAAA,W,qRCC9B,MAAMC,EAAkBC,IAAA,IAAC,OAACC,EAAS,CAAC,oBAAqBC,GAAaF,EAAA,OACpER,EAAAA,EAAAA,IAACW,EAAAA,EAAM,CAACF,OAAQA,EAAOL,SACpBQ,IAAA,IAAC,UAACC,GAAUD,EAAA,OACVC,IACCb,EAAAA,EAAAA,IAACc,EAAAA,GAAK,CAAC,eAAa,2BAA2BC,KAAK,aAAcL,EAAKN,UACpEY,EAAAA,EAAAA,GACC,oGAGL,GAEI,EAXLT,EAAeD,YAAG,kBAcxB,S,iyDCHA,MAAMW,EAA+B,CACnC,EAAG,GAAI,IAAK,IAAK,KAAM,KAAM,MAAO,MAAO,MAAO,OAuBpD,SAASC,EAAiBV,GAAgD,IAA/C,KAACW,EAAI,SAAEC,EAAQ,aAAEC,EAAY,OAAEC,GAAcd,EActE,SAASe,EACPC,EACAC,EACAC,GAOAF,EALiB,IACZC,EACHE,MAAOC,OAAOF,EAAMG,OAAOJ,QAGVC,EACrB,CAEA,SAASI,EAA0BC,GACjC,MAAM,UAACC,GAAab,GACd,OAACc,GAAUD,GAAa,CAAC,EAG/B,IAAIE,EAAAA,EAAAA,IAAQD,GAAS,CAGnB,GAAIF,IAAqBE,EACvB,OAAOhB,EAIT,IAAKA,EAA6BkB,SAASF,GACzC,OAAOG,IAAO,IAAInB,EAA8BgB,GAEpD,CAEA,OAAOhB,CACT,CAEA,MAAM,MAACoB,EAAK,UAAEC,GAAahB,EACrBiB,EAAe,aAAYlB,EAAamB,QAAQF,UAAkBD,KAElEI,EAAgB7B,IAAA,IAAC,SAAC8B,GAAS9B,EAAA,OAC/BZ,EAAAA,EAAAA,IAAC2C,EAAAA,EAAe,CACdC,MAAOC,EAAAA,GACPH,SAAUA,EACVI,aAAa9B,EAAAA,EAAAA,GAAE,oBACf,EAGJ,OACEhB,EAAAA,EAAAA,IAAC+C,EAAAA,EAAI,CAACC,YAAU,EAACT,YAAaA,EAAaU,UAAU,MAAMC,YAAa/B,EAAKf,UAC3EJ,EAAAA,EAAAA,IAACmD,EAAAA,EAAO,CACNT,SAAU,CAAC,wBACXU,SAAS,+BACTC,eAAgBC,IAAA,IAAC,SAAClD,KAAaM,GAAM4C,EAAA,MACf,mBAAblD,GACPA,EAAS,IAAIM,EAAO2C,eAAgBZ,GAAe,EACpDrC,SAEAmD,IAAA,IAAC,WAACC,EAAU,SAAEd,EAAQ,QAAEe,EAAO,eAAEJ,GAAeE,EAAA,OAC/CG,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAAAvD,SAAA,EACJJ,EAAAA,EAAAA,IAAC4D,EAAAA,GAAW,CAAAxD,UAAEY,EAAAA,EAAAA,GAAE,kBAEhB0C,EAAAA,EAAAA,IAACG,EAAAA,EAAS,CAAAzD,SAAA,EACRJ,EAAAA,EAAAA,IAAC6C,EAAAA,GAAU,CAAC9B,KAAK,OAAO+C,UAAQ,EAAA1D,UAC7BY,EAAAA,EAAAA,GACE,sZAQHwC,GAC0B,mBAAnBH,GACPA,EAAe,CACbhC,eACAoC,UACAf,WACAc,aACApD,SAAU,QAEdJ,EAAAA,EAAAA,IAAC+D,EAAAA,EAAS,CACRC,KAAK,YACLC,OAAOjD,EAAAA,EAAAA,GAAE,cACTI,SAAUA,IAAaoC,EACvBU,SAAUC,IAAY,IAAX,KAACC,GAAKD,EAQf,OALEC,GACAA,EAAKpC,gBAC2B,IAAzBoC,EAAKpC,UAAUL,YACW,IAA1ByC,EAAKpC,UAAUC,OAGf,GAGF,CAAC,CAAC,aAAajB,EAAAA,EAAAA,GAAE,8BAA8B,EAExDqD,mBAAoBC,IAAA,IAAC,MAAC3C,EAAK,OAAEM,GAAuBqC,EAAA,OAClDC,EAAAA,EAAAA,IAAI,2BAA4B,CAC9BC,QAAQC,EAAAA,EAAAA,IAAG,YAAa,aAAc9C,GACtC+C,WACa,IAAXzC,GAAejB,EAAAA,EAAAA,GAAE,mBAAoB2D,EAAAA,EAAAA,IAAiB1C,IACxD,EAEJ2C,MAAM5D,EAAAA,EAAAA,GACJ,oGAEF6D,QAAQ,EAAMzE,SAEb0E,IAA+B,IAA9B,SAACC,EAAQ,OAAEC,EAAM,MAAEvD,GAAMqD,EACzB,MAAM7C,EAA0B,iBAAVR,EAAqBA,EAAMQ,YAASgD,EAC1D,OACEvB,EAAAA,EAAAA,IAACwB,EAAY,CAAA9E,SAAA,EACXJ,EAAAA,EAAAA,IAACmF,EAAAA,EAAY,CACXpE,KAAK,SACLiD,KAAK,kBACLoB,IAAK,EACL3D,MAAwB,iBAAVA,EAAqBA,EAAME,WAAQsD,EACjDI,aAAarE,EAAAA,EAAAA,GAAE,SACfI,SAAUA,IAAaoC,EACvBuB,SAAUrD,GAASH,EAAkBwD,EAAUtD,EAAOC,GACtDsD,OAAQtD,GAASH,EAAkByD,EAAQvD,EAAOC,MAEpD1B,EAAAA,EAAAA,IAACsF,EAAQ,CAAAlF,UAAEY,EAAAA,EAAAA,GAAE,kBACbhB,EAAAA,EAAAA,IAACuF,EAAAA,EAAW,CACVvB,KAAK,mBACLwB,cAAe1D,EAA0BG,GACzCR,MAAOQ,EACPoD,aAAarE,EAAAA,EAAAA,GAAE,UACfyE,YAAaC,IACX,GAA0B,iBAAfA,EACT,OAAmB,IAAfA,GACK1E,EAAAA,EAAAA,GAAE,SAEJ2D,EAAAA,EAAAA,IAAiBe,EAEV,EAElBtE,SAAUA,IAAaoC,EACvBuB,SAAUA,CAACW,EAAYhE,IAxJ7C,SACEqD,EACAC,EACAW,EACAlE,EACAC,GAEA,MAAMkE,EAAW,IAAID,EAAiB1D,OAAQR,GAE9CsD,EAASa,EAAUlE,GACnBsD,EAAOY,EAAUlE,EACnB,CA8IwBmE,CACEd,EACAC,EACAvD,EACAG,OAAO8D,GACPhE,OAIO,SAKjB,KAKlB,CA7KSR,EAAiBZ,YAAA,oBA+K1B,UAEM4E,GAAeY,EAAAA,EAAAA,GAAO,MAAK,CAAAjE,OAAA,aAAZiE,CAAa,0EAIzBC,EAAAA,EAAAA,GAAM,GAAE,KAGXT,GAAWQ,EAAAA,EAAAA,GAAO,QAAO,CAAAjE,OAAA,aAAdiE,CAAe,cACjBE,GAAKA,EAAEC,MAAMC,uBAAqB,0C,8ECvL1C,IAAKC,GAIX,SAJWA,GAAAA,EAAsB,qBAAtBA,EAAsB,iCAAtBA,EAAsB,uBAIjC,CAJWA,IAAAA,EAAsB,KAM3B,MAAMC,EAAmB,CAC9B,CAACD,EAAuBE,iBAAkB,CACxCpC,OAAOjD,EAAAA,EAAAA,GAAE,kCAEX,CAACmF,EAAuBG,YAAa,CACnCrC,OAAOjD,EAAAA,EAAAA,GAAE,0BAEX,CAACmF,EAAuBI,WAAY,CAClCtC,OAAOjD,EAAAA,EAAAA,GAAE,0BAIN,SAASwF,EAAWhG,GAAgD,IAA/C,SAACiG,EAAQ,aAAEpF,EAAY,OAAEC,EAAM,KAAEH,GAAYX,EACvE,MAAMkG,GAAMC,EAAAA,EAAAA,MACLC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS3F,EAAKyF,oBACzDG,EAAyBC,IAA8BF,EAAAA,EAAAA,UAC5D3F,EAAK8F,0BAGPC,EAAAA,EAAAA,YAAU,KACRL,EAAqB1F,EAAKyF,kBAAkB,GAC3C,CAACzF,EAAKyF,qBAETM,EAAAA,EAAAA,YAAU,KACRF,EAA2B7F,EAAK8F,wBAAwB,GACvD,CAAC9F,EAAK8F,0BAET,MAAM,MAAC5E,EAAK,UAAEC,GAAahB,EACrBiB,EAAe,aAAYlB,EAAamB,QAAQF,UAAkBD,KAClE8E,GAAaC,EAAAA,EAAAA,GAAe,CAChC3F,MAAON,EAAKkG,IAAIC,IAChBC,MAAO,0BAGHC,IAAqCnG,EAAaqB,UAAUP,SAChE,yBAGIsF,GAAeC,EAAAA,EAAAA,cAAYC,WAC/BC,EAAAA,EAAAA,KAAkB5G,EAAAA,EAAAA,GAAE,kBAEpB,UACQ0F,EAAImB,eACP,aAAYxG,EAAamB,QAAQF,UAAkBD,KACpD,CACEyF,OAAQ,WAIZrB,KACAsB,EAAAA,EAAAA,KAAkB/G,EAAAA,EAAAA,GAAE,eAGtB,CAFE,MAAOgH,IACPC,EAAAA,EAAAA,KAAgBjH,EAAAA,EAAAA,GAAE,wBACpB,IACC,CAACK,EAAcqF,EAAKD,EAAUpE,EAAOC,IAElC4F,GAAqCR,EAAAA,EAAAA,cACzCC,MACEQ,EACA1G,KAEA,MAAM2G,EAA6BC,OAAOC,KAAKvB,GAAyBwB,QACtE,CAACC,EAAKC,IACAA,IAAQN,EACH,IAAIK,EAAK,CAACC,GAAMhH,GAElB,IAAI+G,EAAK,CAACC,GAAM1B,EAAwB0B,KAEjD,CAAC,IAGHb,EAAAA,EAAAA,MAEA,IACE,MAAMc,QAAiBhC,EAAImB,eAAetF,EAAa,CACrDuF,OAAQ,MACR3G,KAAM,CACJ8F,wBAAyBmB,KAI7BpB,EAA2B0B,EAASzB,0BAEpCc,EAAAA,EAAAA,KAAkB/G,EAAAA,EAAAA,GAAE,yDAKtB,CAJE,MAAO2H,GACP,MAAMC,GAAU5H,EAAAA,EAAAA,GAAE,uDAClB6H,EAAAA,EAAAA,GAAuBD,EAAvBC,CAAgCF,IAChCV,EAAAA,EAAAA,IAAgBW,EAClB,IAEF,CAAClC,EAAKnE,EAAawE,EAAyBC,IAGxC8B,GAAgCpB,EAAAA,EAAAA,cACpCC,WACEC,EAAAA,EAAAA,MAEA,IACE,MAAMc,QAAiBhC,EAAImB,eAAetF,EAAa,CACrDuF,OAAQ,MACR3G,KAAM,CACJyF,kBAAmBmC,KAIvBlC,EAAqB6B,EAAS9B,oBAE9BmB,EAAAA,EAAAA,KAAkB/G,EAAAA,EAAAA,GAAE,oCAKtB,CAJE,MAAO2H,GACP,MAAMC,GAAU5H,EAAAA,EAAAA,GAAE,kCAClB6H,EAAAA,EAAAA,GAAuBD,EAAvBC,CAAgCF,IAChCV,EAAAA,EAAAA,IAAgBW,EAClB,IAEF,CAAClC,EAAKnE,EAAasE,IAGrB,OACE7G,EAAAA,EAAAA,IAACW,EAAAA,EAAM,CAACF,OAAQ,CAAC,iBAAiBL,SAC/BQ,IAAA,IAAC,UAACC,GAAUD,EAAA,OACX8C,EAAAA,EAAAA,IAACsF,EAAAA,SAAQ,CAAA5I,SAAA,EACPJ,EAAAA,EAAAA,IAAC+C,EAAAA,EAAI,CACHC,YAAU,EACViG,WAAS,EACT1G,YAAaA,EACbU,UAAU,MACVC,YAAa/B,EAAKf,UAElBsD,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAAAvD,SAAA,EACJJ,EAAAA,EAAAA,IAAC4D,EAAAA,GAAW,CAAAxD,UAAEY,EAAAA,EAAAA,GAAE,cAEhB0C,EAAAA,EAAAA,IAACG,EAAAA,EAAS,CAAAzD,SAAA,EACRJ,EAAAA,EAAAA,IAACkJ,EAAAA,EAAS,CACRlF,KAAK,OACLC,OAAOjD,EAAAA,EAAAA,GAAE,QACTI,UAAWP,EACXsI,UAAU,EACVC,UAAW,MAEbpJ,EAAAA,EAAAA,IAACqJ,EAAAA,EAAY,CACXrF,KAAK,WACLC,OAAOjD,EAAAA,EAAAA,GAAE,WACTmI,UAAU,EACV/H,UAAWP,EACX+D,KAAK,iFAEP5E,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CAACrF,OAAOjD,EAAAA,EAAAA,GAAE,WAAWZ,UAC9BJ,EAAAA,EAAAA,IAAA,OAAKuJ,UAAU,WAAUnJ,UACvBJ,EAAAA,EAAAA,IAACwJ,EAAAA,EAAQ,CAACC,KAAMtI,EAAKuI,2BAO/B1J,EAAAA,EAAAA,IAACkB,EAAiB,CAChBG,aAAcA,EACdC,OAAQA,EACRH,KAAMA,EACNC,UAAWP,KAGb6C,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAAAvD,SAAA,EACJJ,EAAAA,EAAAA,IAAC4D,EAAAA,GAAW,CAAAxD,UAAEY,EAAAA,EAAAA,GAAE,wBAChB0C,EAAAA,EAAAA,IAACG,EAAAA,EAAS,CAAAzD,SAAA,EACRJ,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CACT1E,MAAML,EAAAA,EAAAA,IACJ,+GACA,CACEoF,MACE3J,EAAAA,EAAAA,IAAC4J,EAAAA,EAAY,CAACC,KAAK,wEAAuEzJ,SAAC,oCAMjGyE,QAAQ,EACRiF,0BAAwB,EAAA1J,UAExBJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,SACV,gBAAe+G,6CAGrBnH,EAAAA,EAAAA,IAACgK,EAAAA,EAAW,CACVhG,KAAK,oBACLiG,QACE9I,EAAK+I,WACD/I,EAAK+I,WAAWC,QAAQC,KAAI9G,IAAA,IAAE7B,EAAOwC,GAAMX,EAAA,MAAM,CAC/C7B,QACAwC,QACD,IACD,GAENxC,MAAOmF,EACP7B,SAAUtD,GAASqH,EAA8BrH,GACjD4D,aAAarE,EAAAA,EAAAA,GAAE,OACfqJ,YAAY,EACZjJ,UAAWP,EACX+D,MAAM5D,EAAAA,EAAAA,GACJ,4HAILwG,IACCxH,EAAAA,EAAAA,IAACsK,EAAAA,GAAW,CAAAlK,SACTiI,OAAOkC,QAAQnE,GAAkBgE,KAAI7G,IAAkB,IAAhBkF,EAAKhH,GAAM8B,EACjD,MAAMiH,EAAkBnC,OAAOC,KAAKvB,GAAyB0D,MAC3DtC,GAA0BA,IAA2BM,IAGvD,OAAK+B,GAKHxK,EAAAA,EAAAA,IAACqJ,EAAAA,EAAY,CACXpF,MAAOxC,EAAMwC,MAEbD,KAAMyE,EACNhH,MAAOsF,EAAwByD,GAC/BzF,SAAUA,IACRmD,EACEsC,GACCzD,EAAwByD,IAG7BpJ,UAAWP,EACX6J,eACG7J,OAEGoE,GADAjE,EAAAA,EAAAA,GAAE,oDAZHyH,GANA,IAqBL,UAOZ/E,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAAAvD,SAAA,EACJJ,EAAAA,EAAAA,IAAC4D,EAAAA,GAAW,CAAAxD,UAAEY,EAAAA,EAAAA,GAAE,kBAChB0C,EAAAA,EAAAA,IAACG,EAAAA,EAAS,CAAAzD,SAAA,EACRJ,EAAAA,EAAAA,IAAC6C,EAAAA,GAAU,CAAC9B,KAAK,OAAO+C,UAAQ,EAAA1D,UAC7BY,EAAAA,EAAAA,GACC,yLAIJhB,EAAAA,EAAAA,IAAC2K,EAAAA,EAAqB,CACpBrI,UAAY,GAAEnB,EAAKmB,YACnBnB,KAAMA,EACNyJ,eAAa,EACbC,eAAa,EACbC,eAAa,WAKnB9K,EAAAA,EAAAA,IAACW,EAAAA,EAAM,CAACF,OAAQ,CAAC,iBAAiBL,UAChCsD,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAAAvD,SAAA,EACJJ,EAAAA,EAAAA,IAAC4D,EAAAA,GAAW,CAAAxD,UAAEY,EAAAA,EAAAA,GAAE,iBAChBhB,EAAAA,EAAAA,IAAC6D,EAAAA,EAAS,CAAAzD,UACRJ,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CACTrF,OAAOjD,EAAAA,EAAAA,GAAE,cACT4D,MAAM5D,EAAAA,EAAAA,GACJ,uGACAZ,UAEFJ,EAAAA,EAAAA,IAAA,OAAAI,UACEJ,EAAAA,EAAAA,IAAC+K,EAAAA,EAAO,CACNC,SAAS,SACTpC,SAAS5H,EAAAA,EAAAA,GACP,uGAEFiK,UAAWxD,EACXyD,aAAalK,EAAAA,EAAAA,GAAE,cAAcZ,UAE7BJ,EAAAA,EAAAA,IAACmL,EAAAA,GAAM,CAACH,SAAS,SAAQ5K,UAAEY,EAAAA,EAAAA,GAAE,+BAOhC,GAInB,CApRgBwF,EAAWlG,YAAA,c,2MCb3B,MAAM8K,UAAiBC,EAAAA,UAAwBC,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,aAZvBC,MACtB,MAAMC,EAAQC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAChD,MAAO,CACLC,MAAOL,EAAQ,OACfA,QACAM,SAAS,EACTrD,OAAO,EACPsD,OAAQ,GACRC,YAAY,EACb,EAIOT,KAAiBD,EAAAA,EAAAA,GAAA,kBAMb,KACV,MAAM,aAACnK,GAAgBlB,KAAKO,OACtB,MAAC2B,EAAK,UAAEC,GAAanC,KAAKO,MAAMY,OACtCnB,KAAKO,MAAMgG,IAAIyF,QACZ,aAAY9K,EAAamB,QAAQF,UAAkBD,WACpD,CACE+J,MAAO,CACLL,MAAO5L,KAAKkM,MAAMN,MAClBL,MAAOvL,KAAKkM,MAAMX,MAClBY,WAAY,MAEdC,QAASpL,IACP,IAAI+K,GAAa,EACjB,MAAMM,EAA0B,GAC1BC,EAA2B,GACjCtL,EAAKuL,SAAQ1G,IACPA,EAAE2G,QACJT,GAAa,GAEfM,EAAQI,KAAK,CAAC5I,KAAa,IAAPgC,EAAE6G,GAAWpL,MAAOuE,EAAEwG,UAC1CC,EAASG,KAAK,CAAC5I,KAAa,IAAPgC,EAAE6G,GAAWpL,MAAOuE,EAAEyG,UAAU,IAEvD,MAAMR,EAAS,CACb,CACEa,YAAY9L,EAAAA,EAAAA,GAAE,YACdG,KAAMsL,GAER,CACEK,YAAY9L,EAAAA,EAAAA,GAAE,gBACdG,KAAMqL,IAGVrM,KAAK4M,SAAS,CACZd,SACAC,aACAvD,OAAO,EACPqD,SAAS,GACT,EAEJrD,MAAOA,KACLxI,KAAK4M,SAAS,CAACpE,OAAO,EAAMqD,SAAS,GAAO,GAGjD,GACF,CAhDDgB,oBACE7M,KAAK8M,WACP,CAgDAlN,SACE,OAAII,KAAKkM,MAAM1D,OACN3I,EAAAA,EAAAA,IAACkN,EAAAA,EAAY,CAACC,QAAShN,KAAK8M,aAInCvJ,EAAAA,EAAAA,IAACC,EAAAA,GAAK,CAAAvD,SAAA,EACJJ,EAAAA,EAAAA,IAAC4D,EAAAA,GAAW,CAAAxD,UAAEY,EAAAA,EAAAA,GAAE,6CAChBhB,EAAAA,EAAAA,IAAC6D,EAAAA,EAAS,CAACuJ,aAAW,EAAAhN,SACnBD,KAAKkM,MAAML,SACVhM,EAAAA,EAAAA,IAACqN,EAAAA,EAAW,CAACC,OAAO,UACjBnN,KAAKkM,MAAMH,YAUdlM,EAAAA,EAAAA,IAACuN,EAAAA,EAAY,CACXrN,OAAOc,EAAAA,EAAAA,GAAE,yCACTwM,aAAaxM,EAAAA,EAAAA,GAAE,qDAXjBhB,EAAAA,EAAAA,IAACyN,EAAAA,EAAY,CACXC,iBAAe,EACfzB,OAAQ9L,KAAKkM,MAAMJ,OACnBqB,OAAQ,IACRK,OAAQ,CAAC1H,EAAAA,GAAAA,QAAeA,EAAAA,GAAAA,QACxB2H,SAAO,EACPC,mBAAiB,QAW7B,EAlFIzC,EAAQ9K,YAAA,WAqFd,WC5Ge,MAAMwN,WAA0BlO,EAAAA,EAAwB0L,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,qBAWtD,KACb,MAAM,aAACnK,GAAgBlB,KAAKO,OACtB,UAAC4B,GAAanC,KAAKO,MAAMY,OAC/ByM,EAAAA,eAAAA,MACEC,EAAAA,EAAAA,GAAc,aAAY3M,EAAamB,iBAAiBF,WACzD,GACF,CAhBDxC,WACE,OAAOkB,EAAAA,EAAAA,GAAE,cACX,CAEAiN,eACE,MAAM,aAAC5M,GAAgBlB,KAAKO,OACtB,MAAC2B,EAAK,UAAEC,GAAanC,KAAKO,MAAMY,OACtC,MAAO,CAAC,CAAC,OAAS,aAAYD,EAAamB,QAAQF,UAAkBD,MACvE,CAUA6L,aACE,MAAM,aAAC7M,EAAY,OAAEC,GAAUnB,KAAKO,OAC9B,KAACS,GAAQhB,KAAKkM,MAEpB,OACE3I,EAAAA,EAAAA,IAAA,OAAK,eAAa,cAAatD,SAAA,EAC7BJ,EAAAA,EAAAA,IAACmO,EAAAA,EAAkB,CAACjO,OAAOc,EAAAA,EAAAA,GAAE,kBAC7BhB,EAAAA,EAAAA,IAACO,EAAAA,EAAe,KAEhBP,EAAAA,EAAAA,IAACoL,GAAQ,CAAC1E,IAAKvG,KAAKuG,IAAKrF,aAAcA,EAAcC,OAAQA,KAE7DtB,EAAAA,EAAAA,IAACwG,EAAW,CACVrF,KAAMA,EACNsF,SAAUtG,KAAKsH,aACfpG,aAAcA,EACdC,OAAQA,MAIhB,E,+kBCvCF,SAASqJ,EAAqBnK,GAWpB,IAXqB,KAC7BW,EAAI,UACJmB,EAAS,QACT8L,GAAU,EAAI,cACdC,GAAgB,EAAI,aACpBC,GAAe,EAAI,cACnBxD,GAAgB,EAAK,cACrBF,GAAgB,EAAK,cACrBC,GAAgB,EAAK,qBACrB0D,GAAuB,EAAI,WAC3BC,GAAa,GACPhO,EACN,MAAOiO,EAAmBC,IAAwB5H,EAAAA,EAAAA,WAAS,GAE3D,OACEpD,EAAAA,EAAAA,IAACsF,EAAAA,SAAQ,CAAA5I,SAAA,CACNiO,IACC3K,EAAAA,EAAAA,IAAC4F,EAAAA,EAAU,CACTrF,OAAOjD,EAAAA,EAAAA,GAAE,OACT6D,QAAQ,EACRiF,0BAAwB,EACxBlF,MAAML,EAAAA,EAAAA,IAAI,4DAA6D,CACrEoF,KAAMyE,GACJpO,EAAAA,EAAAA,IAAC2O,EAAAA,EAAI,CAACC,GAAG,GAAGC,QAASA,IAAMH,GAAqBI,IAASA,IAAM1O,SAC5DqO,GAAoBzN,EAAAA,EAAAA,GAAE,wBAAyBA,EAAAA,EAAAA,GAAE,yBAElD,OACHZ,SAAA,EAEHJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAKkG,IAAI0H,OAChBxH,MAAO,cAGVkH,IACCzO,EAAAA,EAAAA,IAACgP,EAAW,CACV/K,MAAO,KACPW,MAAM5D,EAAAA,EAAAA,GACJ,2KAEF6D,QAAQ,EACRiF,0BAAwB,EAAA1J,UAExBJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAKkG,IAAI4H,OAChB1H,MAAO,+BASjB8G,GAAiBD,IACjBpO,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CACTrF,OAAOjD,EAAAA,EAAAA,GAAE,oBACT4D,MAAM5D,EAAAA,EAAAA,GACJ,2KAEF6D,QAAQ,EACRiF,0BAAwB,EAAA1J,UAExBJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAKkG,IAAI4H,OAChB1H,MAAO,2BAMdgH,IACCvO,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CACTrF,OAAOjD,EAAAA,EAAAA,GAAE,4BACT4D,MAAM5D,EAAAA,EAAAA,GACJ,kFAEF6D,QAAQ,EACRiF,0BAAwB,EAAA1J,UAExBJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAKkG,IAAI6H,SAChB3H,MAAO,qCAMd+G,IACCtO,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CACTrF,OAAOjD,EAAAA,EAAAA,GAAE,qBACT4D,MAAML,EAAAA,EAAAA,IACJ,uFACA,CACEoF,MACE3J,EAAAA,EAAAA,IAAC4J,EAAAA,EAAY,CAACC,KAAK,4DAA2DzJ,SAAC,6BAMrFyE,QAAQ,EACRiF,0BAAwB,EAAA1J,UAExBJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAKkG,IAAI8H,SAChB5H,MAAO,8BAMdiH,IACCxO,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CACTrF,OAAOjD,EAAAA,EAAAA,GAAE,4BACT4D,MAAM5D,EAAAA,EAAAA,GAAE,2DACR6D,QAAQ,EACRiF,0BAAwB,EAAA1J,UAExBJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAKkG,IAAI+H,QAAU,GAC1B7H,MAAO,4BAMdqD,IACC5K,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CAACrF,OAAOjD,EAAAA,EAAAA,GAAE,cAAe6D,QAAM,EAACiF,0BAAwB,EAAA1J,UACjEJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAK4N,OACZxH,MAAO,sBAMdsD,IACC7K,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CAACrF,OAAOjD,EAAAA,EAAAA,GAAE,cAAe6D,QAAM,EAACiF,0BAAwB,EAAA1J,UACjEJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAON,EAAK8N,OACZ1H,MAAO,sBAMduD,IACC9K,EAAAA,EAAAA,IAACsJ,EAAAA,EAAU,CAACrF,OAAOjD,EAAAA,EAAAA,GAAE,cAAe6D,QAAM,EAACiF,0BAAwB,EAAA1J,UACjEJ,EAAAA,EAAAA,IAAC+J,EAAAA,EAAa,CAAA3J,UACXgH,EAAAA,EAAAA,GAAe,CACd3F,MAAOa,EACPiF,MAAO,wBAOrB,CAvKSoD,EAAqBrK,YAAA,wBAyK9B,MAAM0O,GAAclJ,EAAAA,EAAAA,GAAOwD,EAAAA,EAAU,CAAAzH,OAAA,YAAjBiE,CAAkB,YACzBC,EAAAA,EAAAA,GAAM,IAAI,WAGvB,G","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyRateLimitsForm.tsx","webpack:///./app/views/settings/project/projectKeys/details/keySettings.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyStats.tsx","webpack:///./app/views/settings/project/projectKeys/details/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport InputControl from 'sentry/components/input';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct, tn} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getExactDuration} from 'sentry/utils/formatters';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nconst PREDEFINED_RATE_LIMIT_VALUES = [\n  0, 60, 300, 900, 3600, 7200, 14400, 21600, 43200, 86400,\n];\n\ntype RateLimitValue = {\n  count: number;\n  window: number;\n};\n\ntype Props = {\n  data: ProjectKey;\n  disabled: boolean;\n  organization: Organization;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\nfunction KeyRateLimitsForm({data, disabled, organization, params}: Props) {\n  function handleChangeWindow(\n    onChange: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    onBlur: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    currentValueObj: RateLimitValue,\n    value: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {...currentValueObj, window: value};\n\n    onChange(valueObj, event);\n    onBlur(valueObj, event);\n  }\n\n  function handleChangeCount(\n    callback: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    value: RateLimitValue,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {\n      ...value,\n      count: Number(event.target.value),\n    };\n\n    callback(valueObj, event);\n  }\n\n  function getAllowedRateLimitValues(currentRateLimit?: number) {\n    const {rateLimit} = data;\n    const {window} = rateLimit ?? {};\n\n    // The slider should display other values if they are set via the API, but still offer to select only the predefined values\n    if (defined(window)) {\n      // If the API returns a value not found in the predefined values and the user selects another value through the UI,\n      // he will no longer be able to reselect the \"custom\" value in the slider\n      if (currentRateLimit !== window) {\n        return PREDEFINED_RATE_LIMIT_VALUES;\n      }\n\n      // If the API returns a value not found in the predefined values, that value will be added to the slider\n      if (!PREDEFINED_RATE_LIMIT_VALUES.includes(window)) {\n        return sortBy([...PREDEFINED_RATE_LIMIT_VALUES, window]);\n      }\n    }\n\n    return PREDEFINED_RATE_LIMIT_VALUES;\n  }\n\n  const {keyId, projectId} = params;\n  const apiEndpoint = `/projects/${organization.slug}/${projectId}/keys/${keyId}/`;\n\n  const disabledAlert = ({features}) => (\n    <FeatureDisabled\n      alert={PanelAlert}\n      features={features}\n      featureName={t('Key Rate Limits')}\n    />\n  );\n\n  return (\n    <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n      <Feature\n        features={['projects:rate-limits']}\n        hookName=\"feature-disabled:rate-limits\"\n        renderDisabled={({children, ...props}) =>\n          typeof children === 'function' &&\n          children({...props, renderDisabled: disabledAlert})\n        }\n      >\n        {({hasFeature, features, project, renderDisabled}) => (\n          <Panel>\n            <PanelHeader>{t('Rate Limits')}</PanelHeader>\n\n            <PanelBody>\n              <PanelAlert type=\"info\" showIcon>\n                {t(\n                  `Rate limits provide a flexible way to manage your error\n                    volume. If you have a noisy project or environment you\n                    can configure a rate limit for this key to reduce the\n                    number of errors processed. To manage your transaction\n                    volume, we recommend adjusting your sample rate in your\n                    SDK configuration.`\n                )}\n              </PanelAlert>\n              {!hasFeature &&\n                typeof renderDisabled === 'function' &&\n                renderDisabled({\n                  organization,\n                  project,\n                  features,\n                  hasFeature,\n                  children: null,\n                })}\n              <FormField\n                name=\"rateLimit\"\n                label={t('Rate Limit')}\n                disabled={disabled || !hasFeature}\n                validate={({form}) => {\n                  // TODO(TS): is validate actually doing anything because it's an unexpected prop\n                  const isValid =\n                    form &&\n                    form.rateLimit &&\n                    typeof form.rateLimit.count !== 'undefined' &&\n                    typeof form.rateLimit.window !== 'undefined';\n\n                  if (isValid) {\n                    return [];\n                  }\n\n                  return [['rateLimit', t('Fill in both fields first')]];\n                }}\n                formatMessageValue={({count, window}: RateLimitValue) =>\n                  tct('[errors] in [timeWindow]', {\n                    errors: tn('%s error ', '%s errors ', count),\n                    timeWindow:\n                      window === 0 ? t('no time window') : getExactDuration(window),\n                  })\n                }\n                help={t(\n                  'Apply a rate limit to this credential to cap the amount of errors accepted during a time window.'\n                )}\n                inline={false}\n              >\n                {({onChange, onBlur, value}) => {\n                  const window = typeof value === 'object' ? value.window : undefined;\n                  return (\n                    <RateLimitRow>\n                      <InputControl\n                        type=\"number\"\n                        name=\"rateLimit.count\"\n                        min={0}\n                        value={typeof value === 'object' ? value.count : undefined}\n                        placeholder={t('Count')}\n                        disabled={disabled || !hasFeature}\n                        onChange={event => handleChangeCount(onChange, value, event)}\n                        onBlur={event => handleChangeCount(onBlur, value, event)}\n                      />\n                      <EventsIn>{t('event(s) in')}</EventsIn>\n                      <RangeSlider\n                        name=\"rateLimit.window\"\n                        allowedValues={getAllowedRateLimitValues(window)}\n                        value={window}\n                        placeholder={t('Window')}\n                        formatLabel={rangeValue => {\n                          if (typeof rangeValue === 'number') {\n                            if (rangeValue === 0) {\n                              return t('None');\n                            }\n                            return getExactDuration(rangeValue);\n                          }\n                          return undefined;\n                        }}\n                        disabled={disabled || !hasFeature}\n                        onChange={(rangeValue, event) =>\n                          handleChangeWindow(\n                            onChange,\n                            onBlur,\n                            value,\n                            Number(rangeValue),\n                            event\n                          )\n                        }\n                      />\n                    </RateLimitRow>\n                  );\n                }}\n              </FormField>\n            </PanelBody>\n          </Panel>\n        )}\n      </Feature>\n    </Form>\n  );\n}\n\nexport default KeyRateLimitsForm;\n\nconst RateLimitRow = styled('div')`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst EventsIn = styled('small')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  text-align: center;\n  white-space: nowrap;\n`;\n","import {Fragment, useCallback, useEffect, useState} from 'react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport SelectField from 'sentry/components/forms/fields/selectField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport Form from 'sentry/components/forms/form';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelFooter,\n  PanelHeader,\n} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\nimport KeyRateLimitsForm from 'sentry/views/settings/project/projectKeys/details/keyRateLimitsForm';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  onRemove: () => void;\n  organization: Organization;\n  params: {\n    keyId: string;\n    projectId: string;\n  };\n};\n\nexport enum DynamicSDKLoaderOption {\n  HAS_DEBUG = 'hasDebug',\n  HAS_PERFORMANCE = 'hasPerformance',\n  HAS_REPLAY = 'hasReplay',\n}\n\nexport const sdkLoaderOptions = {\n  [DynamicSDKLoaderOption.HAS_PERFORMANCE]: {\n    label: t('Enable Performance Monitoring'),\n  },\n  [DynamicSDKLoaderOption.HAS_REPLAY]: {\n    label: t('Enable Session Replay'),\n  },\n  [DynamicSDKLoaderOption.HAS_DEBUG]: {\n    label: t('Enable Debug Bundles'),\n  },\n};\n\nexport function KeySettings({onRemove, organization, params, data}: Props) {\n  const api = useApi();\n  const [browserSdkVersion, setBrowserSdkVersion] = useState(data.browserSdkVersion);\n  const [dynamicSDKLoaderOptions, setDynamicSDKLoaderOptions] = useState(\n    data.dynamicSdkLoaderOptions\n  );\n\n  useEffect(() => {\n    setBrowserSdkVersion(data.browserSdkVersion);\n  }, [data.browserSdkVersion]);\n\n  useEffect(() => {\n    setDynamicSDKLoaderOptions(data.dynamicSdkLoaderOptions);\n  }, [data.dynamicSdkLoaderOptions]);\n\n  const {keyId, projectId} = params;\n  const apiEndpoint = `/projects/${organization.slug}/${projectId}/keys/${keyId}/`;\n  const loaderLink = getDynamicText({\n    value: data.dsn.cdn,\n    fixed: '__JS_SDK_LOADER_URL__',\n  });\n\n  const hasJSSDKDynamicLoaderFeatureFlag = !!organization.features?.includes(\n    'js-sdk-dynamic-loader'\n  );\n\n  const handleRemove = useCallback(async () => {\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    try {\n      await api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${keyId}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n\n      onRemove();\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  }, [organization, api, onRemove, keyId, projectId]);\n\n  const handleToggleDynamicSDKLoaderOption = useCallback(\n    async <T extends typeof dynamicSDKLoaderOptions, K extends keyof T>(\n      dynamicSdkLoaderOption: K,\n      value: T[K]\n    ) => {\n      const newDynamicSdkLoaderOptions = Object.keys(dynamicSDKLoaderOptions).reduce(\n        (acc, key) => {\n          if (key === dynamicSdkLoaderOption) {\n            return {...acc, [key]: value};\n          }\n          return {...acc, [key]: dynamicSDKLoaderOptions[key]};\n        },\n        {}\n      );\n\n      addLoadingMessage();\n\n      try {\n        const response = await api.requestPromise(apiEndpoint, {\n          method: 'PUT',\n          data: {\n            dynamicSdkLoaderOptions: newDynamicSdkLoaderOptions,\n          },\n        });\n\n        setDynamicSDKLoaderOptions(response.dynamicSdkLoaderOptions);\n\n        addSuccessMessage(t('Successfully updated dynamic SDK loader configuration'));\n      } catch (error) {\n        const message = t('Unable to updated dynamic SDK loader configuration');\n        handleXhrErrorResponse(message)(error);\n        addErrorMessage(message);\n      }\n    },\n    [api, apiEndpoint, dynamicSDKLoaderOptions, setDynamicSDKLoaderOptions]\n  );\n\n  const handleUpdateBrowserSDKVersion = useCallback(\n    async (newBrowserSDKVersion: typeof browserSdkVersion) => {\n      addLoadingMessage();\n\n      try {\n        const response = await api.requestPromise(apiEndpoint, {\n          method: 'PUT',\n          data: {\n            browserSdkVersion: newBrowserSDKVersion,\n          },\n        });\n\n        setBrowserSdkVersion(response.browserSdkVersion);\n\n        addSuccessMessage(t('Successfully updated SDK version'));\n      } catch (error) {\n        const message = t('Unable to updated SDK version');\n        handleXhrErrorResponse(message)(error);\n        addErrorMessage(message);\n      }\n    },\n    [api, apiEndpoint, setBrowserSdkVersion]\n  );\n\n  return (\n    <Access access={['project:write']}>\n      {({hasAccess}) => (\n        <Fragment>\n          <Form\n            saveOnBlur\n            allowUndo\n            apiEndpoint={apiEndpoint}\n            apiMethod=\"PUT\"\n            initialData={data}\n          >\n            <Panel>\n              <PanelHeader>{t('Details')}</PanelHeader>\n\n              <PanelBody>\n                <TextField\n                  name=\"name\"\n                  label={t('Name')}\n                  disabled={!hasAccess}\n                  required={false}\n                  maxLength={64}\n                />\n                <BooleanField\n                  name=\"isActive\"\n                  label={t('Enabled')}\n                  required={false}\n                  disabled={!hasAccess}\n                  help=\"Accept events from this key? This may be used to temporarily suspend a key.\"\n                />\n                <FieldGroup label={t('Created')}>\n                  <div className=\"controls\">\n                    <DateTime date={data.dateCreated} />\n                  </div>\n                </FieldGroup>\n              </PanelBody>\n            </Panel>\n          </Form>\n\n          <KeyRateLimitsForm\n            organization={organization}\n            params={params}\n            data={data}\n            disabled={!hasAccess}\n          />\n\n          <Panel>\n            <PanelHeader>{t('JavaScript Loader')}</PanelHeader>\n            <PanelBody>\n              <FieldGroup\n                help={tct(\n                  'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n                  {\n                    link: (\n                      <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                        What does the script provide?\n                      </ExternalLink>\n                    ),\n                  }\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n                </TextCopyInput>\n              </FieldGroup>\n              <SelectField\n                name=\"browserSdkVersion\"\n                options={\n                  data.browserSdk\n                    ? data.browserSdk.choices.map(([value, label]) => ({\n                        value,\n                        label,\n                      }))\n                    : []\n                }\n                value={browserSdkVersion}\n                onChange={value => handleUpdateBrowserSDKVersion(value)}\n                placeholder={t('4.x')}\n                allowClear={false}\n                disabled={!hasAccess}\n                help={t(\n                  'Select the version of the SDK that should be loaded. Note that it can take a few minutes until this change is live.'\n                )}\n              />\n            </PanelBody>\n            {hasJSSDKDynamicLoaderFeatureFlag && (\n              <PanelFooter>\n                {Object.entries(sdkLoaderOptions).map(([key, value]) => {\n                  const sdkLoaderOption = Object.keys(dynamicSDKLoaderOptions).find(\n                    dynamicSdkLoaderOption => dynamicSdkLoaderOption === key\n                  );\n\n                  if (!sdkLoaderOption) {\n                    return null;\n                  }\n\n                  return (\n                    <BooleanField\n                      label={value.label}\n                      key={key}\n                      name={key}\n                      value={dynamicSDKLoaderOptions[sdkLoaderOption]}\n                      onChange={() =>\n                        handleToggleDynamicSDKLoaderOption(\n                          sdkLoaderOption as DynamicSDKLoaderOption,\n                          !dynamicSDKLoaderOptions[sdkLoaderOption]\n                        )\n                      }\n                      disabled={!hasAccess}\n                      disabledReason={\n                        !hasAccess\n                          ? t('You do not have permission to edit this setting')\n                          : undefined\n                      }\n                    />\n                  );\n                })}\n              </PanelFooter>\n            )}\n          </Panel>\n\n          <Panel>\n            <PanelHeader>{t('Credentials')}</PanelHeader>\n            <PanelBody>\n              <PanelAlert type=\"info\" showIcon>\n                {t(\n                  'Your credentials are coupled to a public and secret key. Different clients will require different credentials, so make sure you check the documentation before plugging things in.'\n                )}\n              </PanelAlert>\n\n              <ProjectKeyCredentials\n                projectId={`${data.projectId}`}\n                data={data}\n                showPublicKey\n                showSecretKey\n                showProjectId\n              />\n            </PanelBody>\n          </Panel>\n\n          <Access access={['project:admin']}>\n            <Panel>\n              <PanelHeader>{t('Revoke Key')}</PanelHeader>\n              <PanelBody>\n                <FieldGroup\n                  label={t('Revoke Key')}\n                  help={t(\n                    'Revoking this key will immediately remove and suspend the credentials. This action is irreversible.'\n                  )}\n                >\n                  <div>\n                    <Confirm\n                      priority=\"danger\"\n                      message={t(\n                        'Are you sure you want to revoke this key? This will immediately remove and suspend the credentials.'\n                      )}\n                      onConfirm={handleRemove}\n                      confirmText={t('Revoke Key')}\n                    >\n                      <Button priority=\"danger\">{t('Revoke Key')}</Button>\n                    </Confirm>\n                  </div>\n                </FieldGroup>\n              </PanelBody>\n            </Panel>\n          </Access>\n        </Fragment>\n      )}\n    </Access>\n  );\n}\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  emptyStats: boolean;\n  error: boolean;\n  loading: boolean;\n  series: Series[];\n  since: number;\n  until: number;\n};\n\nconst getInitialState = (): State => {\n  const until = Math.floor(new Date().getTime() / 1000);\n  return {\n    since: until - 3600 * 24 * 30,\n    until,\n    loading: true,\n    error: false,\n    series: [],\n    emptyStats: false,\n  };\n};\n\nclass KeyStats extends Component<Props, State> {\n  state = getInitialState();\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    const {organization} = this.props;\n    const {keyId, projectId} = this.props.params;\n    this.props.api.request(\n      `/projects/${organization.slug}/${projectId}/keys/${keyId}/stats/`,\n      {\n        query: {\n          since: this.state.since,\n          until: this.state.until,\n          resolution: '1d',\n        },\n        success: data => {\n          let emptyStats = true;\n          const dropped: Series['data'] = [];\n          const accepted: Series['data'] = [];\n          data.forEach(p => {\n            if (p.total) {\n              emptyStats = false;\n            }\n            dropped.push({name: p.ts * 1000, value: p.dropped});\n            accepted.push({name: p.ts * 1000, value: p.accepted});\n          });\n          const series = [\n            {\n              seriesName: t('Accepted'),\n              data: accepted,\n            },\n            {\n              seriesName: t('Rate Limited'),\n              data: dropped,\n            },\n          ];\n          this.setState({\n            series,\n            emptyStats,\n            error: false,\n            loading: false,\n          });\n        },\n        error: () => {\n          this.setState({error: true, loading: false});\n        },\n      }\n    );\n  };\n\n  render() {\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Key usage in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {this.state.loading ? (\n            <Placeholder height=\"150px\" />\n          ) : !this.state.emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              series={this.state.series}\n              height={150}\n              colors={[theme.gray200, theme.red300]}\n              stacked\n              labelYAxisExtents\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total events captured using these credentials.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyStats;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport {KeySettings} from 'sentry/views/settings/project/projectKeys/details/keySettings';\nimport KeyStats from 'sentry/views/settings/project/projectKeys/details/keyStats';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<\n  {\n    keyId: string;\n    projectId: string;\n  },\n  {}\n>;\n\ntype State = {\n  data: ProjectKey;\n} & AsyncView['state'];\n\nexport default class ProjectKeyDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Key Details');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {keyId, projectId} = this.props.params;\n    return [['data', `/projects/${organization.slug}/${projectId}/keys/${keyId}/`]];\n  }\n\n  handleRemove = () => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    browserHistory.push(\n      normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/keys/`)\n    );\n  };\n\n  renderBody() {\n    const {organization, params} = this.props;\n    const {data} = this.state;\n\n    return (\n      <div data-test-id=\"key-details\">\n        <SettingsPageHeader title={t('Key Details')} />\n        <PermissionAlert />\n\n        <KeyStats api={this.api} organization={organization} params={params} />\n\n        <KeySettings\n          data={data}\n          onRemove={this.handleRemove}\n          organization={organization}\n          params={params}\n        />\n      </div>\n    );\n  }\n}\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <FieldGroup\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </FieldGroup>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <FieldGroup\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecurityEndpoint && (\n        <FieldGroup\n          label={t('Security Header Endpoint')}\n          help={t(\n            'Use your security header endpoint for features like CSP and Expect-CT reports.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showMinidump && (\n        <FieldGroup\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showUnreal && (\n        <FieldGroup\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showPublicKey && (\n        <FieldGroup label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecretKey && (\n        <FieldGroup label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showProjectId && (\n        <FieldGroup label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(FieldGroup)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","PermissionAlert","_ref","access","props","Access","_ref2","hasAccess","Alert","type","t","PREDEFINED_RATE_LIMIT_VALUES","KeyRateLimitsForm","data","disabled","organization","params","handleChangeCount","callback","value","event","count","Number","target","getAllowedRateLimitValues","currentRateLimit","rateLimit","window","defined","includes","sortBy","keyId","projectId","apiEndpoint","slug","disabledAlert","features","FeatureDisabled","alert","PanelAlert","featureName","Form","saveOnBlur","apiMethod","initialData","Feature","hookName","renderDisabled","_ref3","_ref4","hasFeature","project","_jsxs","Panel","PanelHeader","PanelBody","showIcon","FormField","name","label","validate","_ref5","form","formatMessageValue","_ref6","tct","errors","tn","timeWindow","getExactDuration","help","inline","_ref7","onChange","onBlur","undefined","RateLimitRow","InputControl","min","placeholder","EventsIn","RangeSlider","allowedValues","formatLabel","rangeValue","currentValueObj","valueObj","handleChangeWindow","_styled","space","p","theme","fontSizeRelativeSmall","DynamicSDKLoaderOption","sdkLoaderOptions","HAS_PERFORMANCE","HAS_REPLAY","HAS_DEBUG","KeySettings","onRemove","api","useApi","browserSdkVersion","setBrowserSdkVersion","useState","dynamicSDKLoaderOptions","setDynamicSDKLoaderOptions","dynamicSdkLoaderOptions","useEffect","loaderLink","getDynamicText","dsn","cdn","fixed","hasJSSDKDynamicLoaderFeatureFlag","handleRemove","useCallback","async","addLoadingMessage","requestPromise","method","addSuccessMessage","_err","addErrorMessage","handleToggleDynamicSDKLoaderOption","dynamicSdkLoaderOption","newDynamicSdkLoaderOptions","Object","keys","reduce","acc","key","response","error","message","handleXhrErrorResponse","handleUpdateBrowserSDKVersion","newBrowserSDKVersion","Fragment","allowUndo","TextField","required","maxLength","BooleanField","FieldGroup","className","DateTime","date","dateCreated","link","ExternalLink","href","flexibleControlStateSize","TextCopyInput","SelectField","options","browserSdk","choices","map","allowClear","PanelFooter","entries","sdkLoaderOption","find","disabledReason","ProjectKeyCredentials","showPublicKey","showSecretKey","showProjectId","Confirm","priority","onConfirm","confirmText","Button","KeyStats","Component","constructor","arguments","_defineProperty","getInitialState","until","Math","floor","Date","getTime","since","loading","series","emptyStats","request","query","state","resolution","success","dropped","accepted","forEach","total","push","ts","seriesName","setState","componentDidMount","fetchData","LoadingError","onRetry","withPadding","Placeholder","height","EmptyMessage","description","MiniBarChart","isGroupedByDate","colors","stacked","labelYAxisExtents","ProjectKeyDetails","browserHistory","normalizeUrl","getEndpoints","renderBody","SettingsPageHeader","showDsn","showDsnPublic","showMinidump","showSecurityEndpoint","showUnreal","showDeprecatedDsn","setShowDeprecatedDsn","Link","to","onClick","curr","public","StyledField","secret","security","minidump","unreal"],"sourceRoot":""}