{"version":3,"file":"chunks/app_views_settings_project_dynamicSampling_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"glBAae,SAASA,EAAwBC,GAAmB,IAAlB,QAACC,GAAeD,EAC/D,MAAME,GAAeC,EAAAA,EAAAA,KAErB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAO,CACNC,SAAU,CAAC,oBACXJ,aAAcA,EACdK,eAAgBA,KACdH,EAAAA,EAAAA,IAACI,EAAAA,EAAe,CACdC,MAAOC,EAAAA,GACPJ,SAAU,CAAC,kCACXK,aAAaC,EAAAA,EAAAA,GAAE,sBAEjBC,UAEFT,EAAAA,EAAAA,IAACU,EAAAA,EAAe,CAACb,QAASA,KAGhC,CAlBwBF,EAAwBgB,YAAA,0B","sources":["webpack:///./app/views/settings/project/dynamicSampling/index.tsx"],"sourcesContent":["import Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {PanelAlert} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {DynamicSampling} from './dynamicSampling';\n\ntype Props = {\n  project: Project;\n};\n\nexport default function DynamicSamplingContainer({project}: Props) {\n  const organization = useOrganization();\n\n  return (\n    <Feature\n      features={['dynamic-sampling']}\n      organization={organization}\n      renderDisabled={() => (\n        <FeatureDisabled\n          alert={PanelAlert}\n          features={['organizations:dynamic-sampling']}\n          featureName={t('Dynamic Sampling')}\n        />\n      )}\n    >\n      <DynamicSampling project={project} />\n    </Feature>\n  );\n}\n"],"names":["DynamicSamplingContainer","_ref","project","organization","useOrganization","_jsx","Feature","features","renderDisabled","FeatureDisabled","alert","PanelAlert","featureName","t","children","DynamicSampling","displayName"],"sourceRoot":""}