{"version":3,"file":"chunks/app_components_events_eventReplay_replayPreview_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/eventReplay/replayPreview.tsx"],"sourcesContent":["import {useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport Placeholder from 'sentry/components/placeholder';\nimport {Provider as ReplayContextProvider} from 'sentry/components/replays/replayContext';\nimport ReplayPlayer from 'sentry/components/replays/replayPlayer';\nimport ReplaysFeatureBadge from 'sentry/components/replays/replaysFeatureBadge';\nimport {relativeTimeInMs} from 'sentry/components/replays/utils';\nimport {IconPlay} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Event} from 'sentry/types/event';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport useReplayData from 'sentry/utils/replays/hooks/useReplayData';\nimport {useRoutes} from 'sentry/utils/useRoutes';\nimport FluidHeight from 'sentry/views/replays/detail/layout/fluidHeight';\n\ntype Props = {\n  event: Event;\n  orgSlug: string;\n  replaySlug: string;\n};\n\nfunction ReplayPreview({orgSlug, replaySlug, event}: Props) {\n  const routes = useRoutes();\n  const {fetching, replay, fetchError} = useReplayData({\n    orgSlug,\n    replaySlug,\n  });\n  const eventTimestamp = event.dateCreated\n    ? Math.floor(new Date(event.dateCreated).getTime() / 1000) * 1000\n    : 0;\n\n  const replayRecord = replay?.getReplay();\n\n  const startTimestampMs = replayRecord?.started_at.getTime() ?? 0;\n\n  const initialTimeOffset = useMemo(() => {\n    if (eventTimestamp && startTimestampMs) {\n      return relativeTimeInMs(eventTimestamp, startTimestampMs) / 1000;\n    }\n\n    return 0;\n  }, [eventTimestamp, startTimestampMs]);\n\n  if (fetchError) {\n    const reasons = [\n      t('The replay is still processing'),\n      t('The replay has been deleted by a member in your organization'),\n      t('There is an internal system error'),\n    ];\n\n    return (\n      <Alert type=\"info\" showIcon data-test-id=\"replay-error\">\n        <p>\n          {tct(\n            'The replay for this event cannot be found. [link:Read the docs to understand why]. This could be due to these reasons:',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/session-replay/#error-linking\" />\n              ),\n            }\n          )}\n        </p>\n        <List symbol=\"bullet\">\n          {reasons.map((reason, i) => (\n            <ListItem key={i}>{reason}</ListItem>\n          ))}\n        </List>\n      </Alert>\n    );\n  }\n\n  if (fetching || !replayRecord) {\n    return (\n      <StyledPlaceholder\n        testId=\"replay-loading-placeholder\"\n        height=\"400px\"\n        width=\"100%\"\n      />\n    );\n  }\n\n  const fullReplayUrl = {\n    pathname: `/organizations/${orgSlug}/replays/${replaySlug}/`,\n    query: {\n      referrer: getRouteStringFromRoutes(routes),\n      t_main: 'console',\n      t: initialTimeOffset,\n    },\n  };\n\n  return (\n    <ReplayContextProvider\n      isFetching={fetching}\n      replay={replay}\n      initialTimeOffset={initialTimeOffset}\n    >\n      <PlayerContainer data-test-id=\"player-container\">\n        <StaticPanel>\n          <ReplayPlayer isPreview />\n        </StaticPanel>\n        <CTAOverlay>\n          <Button icon={<IconPlay />} priority=\"primary\" to={fullReplayUrl}>\n            {t('Open Replay')}\n          </Button>\n        </CTAOverlay>\n        <BadgeContainer>\n          <FeatureText>{t('Replays')}</FeatureText>\n          <ReplaysFeatureBadge />\n        </BadgeContainer>\n      </PlayerContainer>\n    </ReplayContextProvider>\n  );\n}\n\nconst PlayerContainer = styled(FluidHeight)`\n  position: relative;\n  margin-bottom: ${space(2)};\n  background: ${p => p.theme.background};\n  gap: ${space(1)};\n  max-height: 448px;\n`;\n\nconst StaticPanel = styled(FluidHeight)`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst CTAOverlay = styled('div')`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.5);\n`;\n\nconst BadgeContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  top: ${space(1)};\n  right: ${space(1)};\n  background: ${p => p.theme.background};\n  border-radius: 2.25rem;\n  padding: ${space(0.75)} ${space(0.75)} ${space(0.75)} ${space(1)};\n  box-shadow: ${p => p.theme.dropShadowLight};\n  gap: 0 ${space(0.25)};\n`;\n\nconst FeatureText = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 0;\n  color: ${p => p.theme.text};\n`;\n\nconst StyledPlaceholder = styled(Placeholder)`\n  margin-bottom: ${space(2)};\n`;\n\nexport default ReplayPreview;\n"],"names":["ReplayPreview","_ref","orgSlug","replaySlug","event","routes","useRoutes","fetching","replay","fetchError","useReplayData","eventTimestamp","dateCreated","Math","floor","Date","getTime","replayRecord","getReplay","startTimestampMs","started_at","initialTimeOffset","useMemo","relativeTimeInMs","reasons","t","_jsxs","Alert","type","showIcon","children","_jsx","tct","link","ExternalLink","href","List","symbol","map","reason","i","ListItem","StyledPlaceholder","testId","height","width","fullReplayUrl","pathname","query","referrer","getRouteStringFromRoutes","t_main","ReplayContextProvider","isFetching","PlayerContainer","StaticPanel","ReplayPlayer","isPreview","CTAOverlay","Button","icon","IconPlay","priority","to","BadgeContainer","FeatureText","ReplaysFeatureBadge","displayName","_styled","FluidHeight","target","space","p","theme","background","border","borderRadius","name","styles","dropShadowLight","fontSizeSmall","text","Placeholder"],"sourceRoot":""}