{"version":3,"file":"chunks/app_views_monitors_edit_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yzBAgBe,SAASA,IACtB,MAAM,YAACC,IAAeC,EAAAA,EAAAA,KAChBC,GAAeC,EAAAA,EAAAA,KACfC,GAAcC,EAAAA,EAAAA,MAEdC,EAAe,kBAAiBJ,EAAaK,iBAAiBP,MAE9D,UACJQ,EAAS,QACTC,EACAC,KAAMC,EAAO,QACbC,IACEC,EAAAA,EAAAA,IAAkB,CAACP,GAAc,CACnCQ,UAAW,IAiBb,OAAIN,GACKO,EAAAA,EAAAA,IAACC,EAAAA,EAAgB,IAGtBP,GACKM,EAAAA,EAAAA,IAACE,EAAAA,EAAY,CAACC,QAASN,EAASO,QAAQ,6BAI/CJ,EAAAA,EAAAA,IAACK,EAAAA,EAAmB,CAACC,MAfjBV,EACM,GAAEA,EAAQW,kBAAkBpB,EAAaK,OAE3C,WAAUL,EAAaK,OAYQgB,UACrCC,EAAAA,EAAAA,IAACC,EAAAA,GAAW,CAAAF,SAAA,EACVR,EAAAA,EAAAA,IAACU,EAAAA,GAAa,CAAAF,UACZC,EAAAA,EAAAA,IAACC,EAAAA,GAAoB,CAAAF,SAAA,EACnBR,EAAAA,EAAAA,IAACW,EAAAA,EAAW,CACVC,OAAQ,CACN,CACEC,OAAOC,EAAAA,EAAAA,GAAE,SACTC,GAAK,kBAAiB5B,EAAaK,eAErC,CACEqB,OAAOC,EAAAA,EAAAA,GAAE,aAAclB,EAAQW,WAIrCP,EAAAA,EAAAA,IAACU,EAAAA,GAAY,CAAAF,UAAEM,EAAAA,EAAAA,GAAE,wBAGrBd,EAAAA,EAAAA,IAACU,EAAAA,GAAW,CAAAF,UACVR,EAAAA,EAAAA,IAACU,EAAAA,GAAW,CAACM,WAAS,EAAAR,UACpBR,EAAAA,EAAAA,IAACiB,EAAAA,EAAW,CACVrB,QAASA,EACTsB,UAAU,MACVC,YAAc,kBAAiBhC,EAAaK,iBAAiBI,EAAQJ,QACrE4B,gBA/CZ,SAAyBzB,GACvBN,EAAYgC,aAAa,CAAC9B,GAAcI,GACxC2B,EAAAA,eAAAA,MACEC,EAAAA,EAAAA,GAAc,kBAAiBpC,EAAaK,cAAcG,EAAKH,SAEnE,YAiDF,CAtEwBR,EAAWwC,YAAA,a","sources":["webpack:///./app/views/monitors/edit.tsx"],"sourcesContent":["import {browserHistory} from 'react-router';\n\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {useQuery, useQueryClient} from 'sentry/utils/queryClient';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport {useParams} from 'sentry/utils/useParams';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nimport MonitorForm from './components/monitorForm';\nimport {Monitor} from './types';\n\nexport default function EditMonitor() {\n  const {monitorSlug} = useParams();\n  const organization = useOrganization();\n  const queryClient = useQueryClient();\n\n  const queryKeyUrl = `/organizations/${organization.slug}/monitors/${monitorSlug}/`;\n\n  const {\n    isLoading,\n    isError,\n    data: monitor,\n    refetch,\n  } = useQuery<Monitor>([queryKeyUrl], {\n    staleTime: 0,\n  });\n\n  function onSubmitSuccess(data: Monitor) {\n    queryClient.setQueryData([queryKeyUrl], data);\n    browserHistory.push(\n      normalizeUrl(`/organizations/${organization.slug}/crons/${data.slug}/`)\n    );\n  }\n\n  function getTitle() {\n    if (monitor) {\n      return `${monitor.name} - Crons - ${organization.slug}`;\n    }\n    return `Crons - ${organization.slug}`;\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (isError) {\n    return <LoadingError onRetry={refetch} message=\"Failed to load monitor.\" />;\n  }\n\n  return (\n    <SentryDocumentTitle title={getTitle()}>\n      <Layout.Page>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumbs\n              crumbs={[\n                {\n                  label: t('Crons'),\n                  to: `/organizations/${organization.slug}/crons/`,\n                },\n                {\n                  label: t('Editing %s', monitor.name),\n                },\n              ]}\n            />\n            <Layout.Title>{t('Edit Monitor')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <MonitorForm\n              monitor={monitor}\n              apiMethod=\"PUT\"\n              apiEndpoint={`/organizations/${organization.slug}/monitors/${monitor.slug}/`}\n              onSubmitSuccess={onSubmitSuccess}\n            />\n          </Layout.Main>\n        </Layout.Body>\n      </Layout.Page>\n    </SentryDocumentTitle>\n  );\n}\n"],"names":["EditMonitor","monitorSlug","useParams","organization","useOrganization","queryClient","useQueryClient","queryKeyUrl","slug","isLoading","isError","data","monitor","refetch","useQuery","staleTime","_jsx","LoadingIndicator","LoadingError","onRetry","message","SentryDocumentTitle","title","name","children","_jsxs","Layout","Breadcrumbs","crumbs","label","t","to","fullWidth","MonitorForm","apiMethod","apiEndpoint","onSubmitSuccess","setQueryData","browserHistory","normalizeUrl","displayName"],"sourceRoot":""}