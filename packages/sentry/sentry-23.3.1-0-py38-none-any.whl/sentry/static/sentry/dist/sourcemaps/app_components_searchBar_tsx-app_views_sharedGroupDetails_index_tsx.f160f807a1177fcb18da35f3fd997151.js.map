{"version":3,"file":"chunks/app_components_searchBar_tsx-app_views_sharedGroupDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventEntries.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/views/sharedGroupDetails/sharedGroupHeader.tsx","webpack:///./app/views/sharedGroupDetails/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {CommitRow} from 'sentry/components/commitRow';\nimport {EventEvidence} from 'sentry/components/events/eventEvidence';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {\n  Entry,\n  Event,\n  Group,\n  Organization,\n  Project,\n  SharedViewOrganization,\n} from 'sentry/types';\nimport {isNotSharedOrganization} from 'sentry/types/utils';\nimport {objectIsEmpty} from 'sentry/utils';\n\nimport {EventContexts} from './contexts';\nimport {EventDevice} from './device';\nimport {EventAttachments} from './eventAttachments';\nimport {EventCause} from './eventCause';\nimport {EventDataSection} from './eventDataSection';\nimport {EventEntry} from './eventEntry';\nimport {EventErrors} from './eventErrors';\nimport {EventExtraData} from './eventExtraData';\nimport {EventSdk} from './eventSdk';\nimport {EventTagsAndScreenshot} from './eventTagsAndScreenshot';\nimport {EventViewHierarchy} from './eventViewHierarchy';\nimport {EventGroupingInfo} from './groupingInfo';\nimport {EventPackageData} from './packageData';\nimport {EventRRWebIntegration} from './rrwebIntegration';\nimport {EventSdkUpdates} from './sdkUpdates';\nimport {DataSection} from './styles';\nimport {EventUserFeedback} from './userFeedback';\n\ntype Props = {\n  location: Location;\n  /**\n   * The organization can be the shared view on a public issue view.\n   */\n  organization: Organization | SharedViewOrganization;\n  project: Project;\n  className?: string;\n  event?: Event;\n  group?: Group;\n  isShare?: boolean;\n  showTagSummary?: boolean;\n};\n\nconst EventEntries = ({\n  organization,\n  project,\n  location,\n  event,\n  group,\n  className,\n  isShare = false,\n  showTagSummary = true,\n}: Props) => {\n  const orgSlug = organization.slug;\n  const projectSlug = project.slug;\n  const orgFeatures = organization?.features ?? [];\n\n  if (!event) {\n    return (\n      <LatestEventNotAvailable>\n        <h3>{t('Latest Event Not Available')}</h3>\n      </LatestEventNotAvailable>\n    );\n  }\n\n  const hasContext = !objectIsEmpty(event.user ?? {}) || !objectIsEmpty(event.contexts);\n\n  return (\n    <div className={className}>\n      <EventErrors event={event} project={project} isShare={isShare} />\n      {!isShare && isNotSharedOrganization(organization) && (\n        <EventCause\n          project={project}\n          eventId={event.id}\n          group={group}\n          commitRow={CommitRow}\n        />\n      )}\n      {event.userReport && group && (\n        <EventDataSection title=\"User Feedback\" type=\"user-feedback\">\n          <EventUserFeedback\n            report={event.userReport}\n            orgId={orgSlug}\n            issueId={group.id}\n          />\n        </EventDataSection>\n      )}\n      {showTagSummary && (\n        <EventTagsAndScreenshot\n          event={event}\n          organization={organization as Organization}\n          projectSlug={projectSlug}\n          location={location}\n          isShare={isShare}\n        />\n      )}\n      <EventEvidence event={event} projectSlug={project.slug} />\n      <Entries\n        definedEvent={event}\n        projectSlug={projectSlug}\n        group={group}\n        organization={organization}\n        isShare={isShare}\n      />\n      {hasContext && <EventContexts group={group} event={event} />}\n      <EventExtraData event={event} />\n      <EventPackageData event={event} />\n      <EventDevice event={event} />\n      {!isShare && <EventViewHierarchy event={event} project={project} />}\n      {!isShare && <EventAttachments event={event} projectSlug={projectSlug} />}\n      <EventSdk sdk={event.sdk} meta={event._meta?.sdk} />\n      {!isShare && <EventSdkUpdates event={event} />}\n      {!isShare && event.groupID && (\n        <EventGroupingInfo\n          projectSlug={projectSlug}\n          event={event}\n          showGroupingConfig={\n            orgFeatures.includes('set-grouping-config') && 'groupingConfig' in event\n          }\n        />\n      )}\n      {!isShare && (\n        <EventRRWebIntegration event={event} orgId={orgSlug} projectSlug={projectSlug} />\n      )}\n    </div>\n  );\n};\n\nfunction Entries({\n  definedEvent,\n  projectSlug,\n  isShare,\n  group,\n  organization,\n}: {\n  definedEvent: Event;\n  projectSlug: string;\n  isShare?: boolean;\n} & Pick<Props, 'group' | 'organization'>) {\n  if (!Array.isArray(definedEvent.entries)) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {(definedEvent.entries as Array<Entry>).map((entry, entryIdx) => (\n        <EventEntry\n          key={entryIdx}\n          projectSlug={projectSlug}\n          group={group}\n          organization={organization}\n          event={definedEvent}\n          entry={entry}\n          isShare={isShare}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nconst LatestEventNotAvailable = styled('div')`\n  padding: ${space(2)} ${space(4)};\n`;\n\nconst BorderlessEventEntries = styled(EventEntries)`\n  & ${DataSection} {\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n    padding: ${space(3)} 0 0 0;\n  }\n  & ${DataSection}:first-child {\n    padding-top: 0;\n    border-top: 0;\n  }\n`;\n\nexport {EventEntries, BorderlessEventEntries};\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport {space} from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport ShortId from 'sentry/components/shortId';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group, IssueCategory} from 'sentry/types';\n\nimport UnhandledTag, {TagAndMessageWrapper} from '../issueDetails/unhandledTag';\n\ntype Props = {\n  group: Group;\n};\n\nconst SharedGroupHeader = ({group}: Props) => (\n  <Wrapper>\n    <Details>\n      <TitleWrap>\n        <Title>{group.title}</Title>\n        <ShortIdWrapper>\n          <ShortId\n            shortId={group.shortId}\n            avatar={<ProjectBadge project={group.project} avatarSize={20} hideName />}\n          />\n          {group.issueCategory === IssueCategory.PERFORMANCE && (\n            <FeatureBadge\n              type=\"beta\"\n              title={t(\n                'Not all features have been implemented for shared Performance Issues and these issues may be missing context.'\n              )}\n            />\n          )}\n        </ShortIdWrapper>\n      </TitleWrap>\n\n      <TagAndMessageWrapper>\n        {group.isUnhandled && <UnhandledTag />}\n        <EventMessage message={group.culprit} />\n      </TagAndMessageWrapper>\n    </Details>\n  </Wrapper>\n);\n\nexport default SharedGroupHeader;\n\nconst Wrapper = styled('div')`\n  padding: ${space(3)} ${space(4)} ${space(3)} ${space(4)};\n  border-bottom: 1px solid ${p => p.theme.border};\n  position: relative;\n`;\n\nconst Details = styled('div')`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nconst ShortIdWrapper = styled('div')`\n  display: flex;\n`;\n\nconst TitleWrap = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst Title = styled('h3')`\n  color: ${p => p.theme.headingColor};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  line-height: ${p => p.theme.text.lineHeightHeading};\n  margin-right: ${space(2)};\n  margin-bottom: 0;\n  ${p => p.theme.overflowEllipsis};\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    font-size: ${p => p.theme.headerFontSize};\n  }\n`;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport NotFound from 'sentry/components/errors/notFound';\nimport {BorderlessEventEntries} from 'sentry/components/events/eventEntries';\nimport Footer from 'sentry/components/footer';\nimport Link from 'sentry/components/links/link';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport SentryTypes from 'sentry/sentryTypes';\nimport {space} from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nimport {OrganizationContext} from '../organizationContext';\n\nimport SharedGroupHeader from './sharedGroupHeader';\n\ntype Props = RouteComponentProps<{shareId: string; orgId?: string}, {}> & {\n  api: Client;\n};\n\ntype State = {\n  error: boolean;\n  group: Group | null;\n  loading: boolean;\n};\n\nclass SharedGroupDetails extends Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n  };\n\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    return {\n      group: null,\n      loading: true,\n      error: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n    };\n  }\n\n  componentWillMount() {\n    document.body.classList.add('shared-group');\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('shared-group');\n  }\n\n  orgSlug(): string | null {\n    const {params} = this.props;\n    if (params.orgId) {\n      return params.orgId;\n    }\n    const {customerDomain} = window.__initialData || {};\n    if (customerDomain?.subdomain) {\n      return customerDomain.subdomain;\n    }\n    return null;\n  }\n\n  async fetchData() {\n    const {params, api} = this.props;\n    const {shareId} = params;\n    const orgSlug = this.orgSlug();\n    try {\n      if (orgSlug) {\n        const group = await api.requestPromise(\n          `/organizations/${orgSlug}/shared/issues/${shareId}/`\n        );\n        this.setState({loading: false, group});\n      } else {\n        const group = await api.requestPromise(`/shared/issues/${shareId}/`);\n        this.setState({loading: false, group});\n      }\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n  }\n\n  handleRetry = () => {\n    this.setState(this.getInitialState());\n    this.fetchData();\n  };\n\n  getTitle() {\n    const {group} = this.state;\n\n    return group?.title ?? 'Sentry';\n  }\n\n  render() {\n    const {group, loading, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!group) {\n      return <NotFound />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.handleRetry} />;\n    }\n\n    const {location} = this.props;\n    const {permalink, latestEvent, project} = group;\n    const title = this.getTitle();\n\n    return (\n      <SentryDocumentTitle noSuffix title={title}>\n        <OrganizationContext.Provider value={project.organization}>\n          <div className=\"app\">\n            <div className=\"pattern-bg\" />\n            <div className=\"container\">\n              <div className=\"box box-modal\">\n                <div className=\"box-header\">\n                  <Link className=\"logo\" to=\"/\">\n                    <span className=\"icon-sentry-logo-full\" />\n                  </Link>\n                  {permalink && (\n                    <Link className=\"details\" to={permalink}>\n                      {t('Details')}\n                    </Link>\n                  )}\n                </div>\n                <div className=\"box-content\">\n                  <SharedGroupHeader group={group} />\n                  <Container className=\"group-overview event-details-container\">\n                    <BorderlessEventEntries\n                      location={location}\n                      organization={project.organization}\n                      group={group}\n                      event={latestEvent}\n                      project={project}\n                      isShare\n                    />\n                  </Container>\n                  <Footer />\n                </div>\n              </div>\n            </div>\n          </div>\n        </OrganizationContext.Provider>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  padding: ${space(4)};\n`;\n\nexport {SharedGroupDetails};\nexport default withApi(SharedGroupDetails);\n"],"names":["DEFAULT_SIZE","_styled","target","p","size","level","theme","error","EventEntries","_ref","organization","project","location","event","group","className","isShare","showTagSummary","orgSlug","slug","projectSlug","orgFeatures","features","_jsx","LatestEventNotAvailable","children","t","hasContext","objectIsEmpty","user","contexts","_jsxs","EventErrors","isNotSharedOrganization","EventCause","eventId","id","commitRow","CommitRow","userReport","EventDataSection","title","type","EventUserFeedback","report","orgId","issueId","EventTagsAndScreenshot","EventEvidence","Entries","definedEvent","EventContexts","EventExtraData","EventPackageData","EventDevice","EventViewHierarchy","EventAttachments","EventSdk","sdk","meta","_meta","EventSdkUpdates","groupID","EventGroupingInfo","showGroupingConfig","includes","EventRRWebIntegration","_ref2","Array","isArray","entries","Fragment","map","entry","entryIdx","EventEntry","displayName","space","BorderlessEventEntries","DataSection","EventMessage","levelIndicatorSize","message","annotations","ErrorLevel","Message","overflowEllipsis","SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","InputGroup","disablePointerEvents","IconSearch","color","StyledInput","ref","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","IconClose","styles","Button","subText","SharedGroupHeader","Wrapper","Details","TitleWrap","Title","ShortIdWrapper","ShortId","shortId","avatar","ProjectBadge","avatarSize","hideName","issueCategory","IssueCategory","FeatureBadge","TagAndMessageWrapper","isUnhandled","UnhandledTag","culprit","border","headingColor","fontSizeExtraLarge","text","lineHeightHeading","props","breakpoints","small","headerFontSize","SharedGroupDetails","Component","constructor","arguments","_defineProperty","this","getInitialState","setState","fetchData","loading","getChildContext","state","componentWillMount","document","body","classList","add","componentDidMount","componentWillUnmount","remove","params","customerDomain","window","__initialData","subdomain","async","api","shareId","requestPromise","getTitle","render","LoadingIndicator","NotFound","LoadingError","onRetry","handleRetry","permalink","latestEvent","SentryDocumentTitle","noSuffix","OrganizationContext","Link","to","Container","Footer","SentryTypes","withApi"],"sourceRoot":""}