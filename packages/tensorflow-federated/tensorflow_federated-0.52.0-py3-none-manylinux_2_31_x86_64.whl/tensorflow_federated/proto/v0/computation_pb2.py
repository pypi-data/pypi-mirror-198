# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow_federated/proto/v0/computation.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n/tensorflow_federated/proto/v0/computation.proto\x12\x17tensorflow_federated.v0\x1a\x19google/protobuf/any.proto\"\xd6\x05\n\x0b\x43omputation\x12+\n\x04type\x18\x01 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\x12\x39\n\ntensorflow\x18\x02 \x01(\x0b\x32#.tensorflow_federated.v0.TensorFlowH\x00\x12J\n\x13tensorflow_function\x18\r \x01(\x0b\x32+.tensorflow_federated.v0.TensorFlowFunctionH\x00\x12\x37\n\tintrinsic\x18\x03 \x01(\x0b\x32\".tensorflow_federated.v0.IntrinsicH\x00\x12-\n\x04\x64\x61ta\x18\n \x01(\x0b\x32\x1d.tensorflow_federated.v0.DataH\x00\x12\x31\n\x06lambda\x18\x04 \x01(\x0b\x32\x1f.tensorflow_federated.v0.LambdaH\x00\x12/\n\x05\x62lock\x18\x05 \x01(\x0b\x32\x1e.tensorflow_federated.v0.BlockH\x00\x12\x37\n\treference\x18\x06 \x01(\x0b\x32\".tensorflow_federated.v0.ReferenceH\x00\x12-\n\x04\x63\x61ll\x18\x07 \x01(\x0b\x32\x1d.tensorflow_federated.v0.CallH\x00\x12\x31\n\x06struct\x18\x08 \x01(\x0b\x32\x1f.tensorflow_federated.v0.StructH\x00\x12\x37\n\tselection\x18\t \x01(\x0b\x32\".tensorflow_federated.v0.SelectionH\x00\x12\x37\n\tplacement\x18\x0b \x01(\x0b\x32\".tensorflow_federated.v0.PlacementH\x00\x12+\n\x03xla\x18\x0c \x01(\x0b\x32\x1c.tensorflow_federated.v0.XlaH\x00\x42\r\n\x0b\x63omputation\"\xa7\x03\n\x04Type\x12\x39\n\x08\x66unction\x18\x01 \x01(\x0b\x32%.tensorflow_federated.v0.FunctionTypeH\x00\x12\x35\n\x06struct\x18\x02 \x01(\x0b\x32#.tensorflow_federated.v0.StructTypeH\x00\x12\x39\n\x08sequence\x18\x03 \x01(\x0b\x32%.tensorflow_federated.v0.SequenceTypeH\x00\x12\x35\n\x06tensor\x18\x04 \x01(\x0b\x32#.tensorflow_federated.v0.TensorTypeH\x00\x12\x39\n\x08\x61\x62stract\x18\x05 \x01(\x0b\x32%.tensorflow_federated.v0.AbstractTypeH\x00\x12;\n\tplacement\x18\x06 \x01(\x0b\x32&.tensorflow_federated.v0.PlacementTypeH\x00\x12;\n\tfederated\x18\x07 \x01(\x0b\x32&.tensorflow_federated.v0.FederatedTypeH\x00\x42\x06\n\x04type\"o\n\x0c\x46unctionType\x12\x30\n\tparameter\x18\x01 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\x12-\n\x06result\x18\x02 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\"\x91\x01\n\nStructType\x12<\n\x07\x65lement\x18\x01 \x03(\x0b\x32+.tensorflow_federated.v0.StructType.Element\x1a\x45\n\x07\x45lement\x12\x0c\n\x04name\x18\x01 \x01(\t\x12,\n\x05value\x18\x02 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\">\n\x0cSequenceType\x12.\n\x07\x65lement\x18\x01 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\"\xc3\x03\n\nTensorType\x12;\n\x05\x64type\x18\x01 \x01(\x0e\x32,.tensorflow_federated.v0.TensorType.DataType\x12\x0c\n\x04\x64ims\x18\x02 \x03(\x03\x12\x14\n\x0cunknown_rank\x18\x03 \x01(\x08\"\xd3\x02\n\x08\x44\x61taType\x12\x0e\n\nDT_INVALID\x10\x00\x12\x0c\n\x08\x44T_FLOAT\x10\x01\x12\r\n\tDT_DOUBLE\x10\x02\x12\x0c\n\x08\x44T_INT32\x10\x03\x12\x0c\n\x08\x44T_UINT8\x10\x04\x12\x0c\n\x08\x44T_INT16\x10\x05\x12\x0b\n\x07\x44T_INT8\x10\x06\x12\r\n\tDT_STRING\x10\x07\x12\x10\n\x0c\x44T_COMPLEX64\x10\x08\x12\x0c\n\x08\x44T_INT64\x10\t\x12\x0b\n\x07\x44T_BOOL\x10\n\x12\x0c\n\x08\x44T_QINT8\x10\x0b\x12\r\n\tDT_QUINT8\x10\x0c\x12\r\n\tDT_QINT32\x10\r\x12\x0f\n\x0b\x44T_BFLOAT16\x10\x0e\x12\r\n\tDT_QINT16\x10\x0f\x12\x0e\n\nDT_QUINT16\x10\x10\x12\r\n\tDT_UINT16\x10\x11\x12\x11\n\rDT_COMPLEX128\x10\x12\x12\x0b\n\x07\x44T_HALF\x10\x13\x12\r\n\tDT_UINT32\x10\x16\x12\r\n\tDT_UINT64\x10\x17\"\x1d\n\x0c\x41\x62stractType\x12\r\n\x05label\x18\x01 \x01(\t\"\x8b\x01\n\rPlacementSpec\x12\x38\n\x05label\x18\x01 \x01(\x0b\x32\'.tensorflow_federated.v0.PlacementLabelH\x00\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32\".tensorflow_federated.v0.PlacementH\x00\x42\x0b\n\tplacement\"\x1f\n\x0ePlacementLabel\x12\r\n\x05label\x18\x01 \x01(\t\"\x18\n\tPlacement\x12\x0b\n\x03uri\x18\x01 \x01(\t\"\x8c\x01\n\rFederatedType\x12\x39\n\tplacement\x18\x01 \x01(\x0b\x32&.tensorflow_federated.v0.PlacementSpec\x12\x11\n\tall_equal\x18\x02 \x01(\x08\x12-\n\x06member\x18\x03 \x01(\x0b\x32\x1d.tensorflow_federated.v0.Type\"P\n\rPlacementType\x12?\n\x0einstance_label\x18\x01 \x01(\x0b\x32\'.tensorflow_federated.v0.PlacementLabel\"\x87\x08\n\nTensorFlow\x12\'\n\tgraph_def\x18\x01 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x15\n\rinitialize_op\x18\x04 \x01(\t\x12!\n\x19session_token_tensor_name\x18\x06 \x01(\t\x12>\n\tparameter\x18\x02 \x01(\x0b\x32+.tensorflow_federated.v0.TensorFlow.Binding\x12;\n\x06result\x18\x03 \x01(\x0b\x32+.tensorflow_federated.v0.TensorFlow.Binding\x12?\n\tcache_key\x18\x05 \x01(\x0b\x32,.tensorflow_federated.v0.TensorFlow.CacheKey\x12\x41\n\nlayout_map\x18\x07 \x01(\x0b\x32-.tensorflow_federated.v0.TensorFlow.LayoutMap\x1a\xe7\x01\n\x07\x42inding\x12\x43\n\x06struct\x18\x01 \x01(\x0b\x32\x31.tensorflow_federated.v0.TensorFlow.StructBindingH\x00\x12\x43\n\x06tensor\x18\x02 \x01(\x0b\x32\x31.tensorflow_federated.v0.TensorFlow.TensorBindingH\x00\x12G\n\x08sequence\x18\x03 \x01(\x0b\x32\x33.tensorflow_federated.v0.TensorFlow.SequenceBindingH\x00\x42\t\n\x07\x62inding\x1aM\n\rStructBinding\x12<\n\x07\x65lement\x18\x01 \x03(\x0b\x32+.tensorflow_federated.v0.TensorFlow.Binding\x1a\x31\n\rTensorBinding\x12\x15\n\x0btensor_name\x18\x01 \x01(\tH\x00\x42\t\n\x07\x62inding\x1a\x62\n\x0fSequenceBinding\x12\x1d\n\x13variant_tensor_name\x18\x02 \x01(\tH\x00\x12\x1f\n\x15graph_def_tensor_name\x18\x03 \x01(\tH\x00\x42\t\n\x07\x62indingJ\x04\x08\x01\x10\x02\x1a\x16\n\x08\x43\x61\x63heKey\x12\n\n\x02id\x18\x01 \x01(\x04\x1a\xac\x01\n\tLayoutMap\x12\x64\n\x15name_to_sharding_spec\x18\x01 \x03(\x0b\x32\x45.tensorflow_federated.v0.TensorFlow.LayoutMap.NameToShardingSpecEntry\x1a\x39\n\x17NameToShardingSpecEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xee\x07\n\x12TensorFlowFunction\x12*\n\x0c\x66unction_def\x18\x01 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x46\n\tparameter\x18\x02 \x01(\x0b\x32\x33.tensorflow_federated.v0.TensorFlowFunction.Binding\x12\x43\n\x06result\x18\x03 \x01(\x0b\x32\x33.tensorflow_federated.v0.TensorFlowFunction.Binding\x12G\n\tcache_key\x18\x04 \x01(\x0b\x32\x34.tensorflow_federated.v0.TensorFlowFunction.CacheKey\x12I\n\nlayout_map\x18\x05 \x01(\x0b\x32\x35.tensorflow_federated.v0.TensorFlowFunction.LayoutMap\x1a\x82\x02\n\x07\x42inding\x12N\n\tstructure\x18\x01 \x01(\x0b\x32\x39.tensorflow_federated.v0.TensorFlowFunction.StructBindingH\x00\x12K\n\x06tensor\x18\x02 \x01(\x0b\x32\x39.tensorflow_federated.v0.TensorFlowFunction.TensorBindingH\x00\x12O\n\x08sequence\x18\x03 \x01(\x0b\x32;.tensorflow_federated.v0.TensorFlowFunction.SequenceBindingH\x00\x42\t\n\x07\x62inding\x1aU\n\rStructBinding\x12\x44\n\x07\x65lement\x18\x01 \x03(\x0b\x32\x33.tensorflow_federated.v0.TensorFlowFunction.Binding\x1a.\n\rTensorBinding\x12\x12\n\x08\x61rg_name\x18\x01 \x01(\tH\x00\x42\t\n\x07\x62inding\x1a\x30\n\x0fSequenceBinding\x12\x12\n\x08\x61rg_name\x18\x01 \x01(\tH\x00\x42\t\n\x07\x62inding\x1a\x16\n\x08\x43\x61\x63heKey\x12\n\n\x02id\x18\x01 \x01(\x04\x1a\xb4\x01\n\tLayoutMap\x12l\n\x15name_to_sharding_spec\x18\x01 \x03(\x0b\x32M.tensorflow_federated.v0.TensorFlowFunction.LayoutMap.NameToShardingSpecEntry\x1a\x39\n\x17NameToShardingSpecEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x18\n\tIntrinsic\x12\x0b\n\x03uri\x18\x01 \x01(\t\"V\n\x06Lambda\x12\x16\n\x0eparameter_name\x18\x01 \x01(\t\x12\x34\n\x06result\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"\xbe\x01\n\x05\x42lock\x12\x33\n\x05local\x18\x01 \x03(\x0b\x32$.tensorflow_federated.v0.Block.Local\x12\x34\n\x06result\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\x1aJ\n\x05Local\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"\x19\n\tReference\x12\x0c\n\x04name\x18\x01 \x01(\t\"v\n\x04\x43\x61ll\x12\x36\n\x08\x66unction\x18\x01 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\x12\x36\n\x08\x61rgument\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"\x90\x01\n\x06Struct\x12\x38\n\x07\x65lement\x18\x01 \x03(\x0b\x32\'.tensorflow_federated.v0.Struct.Element\x1aL\n\x07\x45lement\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x33\n\x05value\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\"P\n\tSelection\x12\x34\n\x06source\x18\x01 \x01(\x0b\x32$.tensorflow_federated.v0.Computation\x12\r\n\x05index\x18\x03 \x01(\x05\"\x1d\n\x04\x44\x61ta\x12\r\n\x03uri\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x64\x61ta\"\xa6\x03\n\x03Xla\x12(\n\nhlo_module\x18\x01 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x37\n\tparameter\x18\x02 \x01(\x0b\x32$.tensorflow_federated.v0.Xla.Binding\x12\x34\n\x06result\x18\x03 \x01(\x0b\x32$.tensorflow_federated.v0.Xla.Binding\x1a\x90\x01\n\x07\x42inding\x12<\n\x06struct\x18\x01 \x01(\x0b\x32*.tensorflow_federated.v0.Xla.StructBindingH\x00\x12<\n\x06tensor\x18\x02 \x01(\x0b\x32*.tensorflow_federated.v0.Xla.TensorBindingH\x00\x42\t\n\x07\x62inding\x1a\x46\n\rStructBinding\x12\x35\n\x07\x65lement\x18\x01 \x03(\x0b\x32$.tensorflow_federated.v0.Xla.Binding\x1a+\n\rTensorBinding\x12\x0f\n\x05index\x18\x01 \x01(\x05H\x00\x42\t\n\x07\x62indingb\x06proto3')



_COMPUTATION = DESCRIPTOR.message_types_by_name['Computation']
_TYPE = DESCRIPTOR.message_types_by_name['Type']
_FUNCTIONTYPE = DESCRIPTOR.message_types_by_name['FunctionType']
_STRUCTTYPE = DESCRIPTOR.message_types_by_name['StructType']
_STRUCTTYPE_ELEMENT = _STRUCTTYPE.nested_types_by_name['Element']
_SEQUENCETYPE = DESCRIPTOR.message_types_by_name['SequenceType']
_TENSORTYPE = DESCRIPTOR.message_types_by_name['TensorType']
_ABSTRACTTYPE = DESCRIPTOR.message_types_by_name['AbstractType']
_PLACEMENTSPEC = DESCRIPTOR.message_types_by_name['PlacementSpec']
_PLACEMENTLABEL = DESCRIPTOR.message_types_by_name['PlacementLabel']
_PLACEMENT = DESCRIPTOR.message_types_by_name['Placement']
_FEDERATEDTYPE = DESCRIPTOR.message_types_by_name['FederatedType']
_PLACEMENTTYPE = DESCRIPTOR.message_types_by_name['PlacementType']
_TENSORFLOW = DESCRIPTOR.message_types_by_name['TensorFlow']
_TENSORFLOW_BINDING = _TENSORFLOW.nested_types_by_name['Binding']
_TENSORFLOW_STRUCTBINDING = _TENSORFLOW.nested_types_by_name['StructBinding']
_TENSORFLOW_TENSORBINDING = _TENSORFLOW.nested_types_by_name['TensorBinding']
_TENSORFLOW_SEQUENCEBINDING = _TENSORFLOW.nested_types_by_name['SequenceBinding']
_TENSORFLOW_CACHEKEY = _TENSORFLOW.nested_types_by_name['CacheKey']
_TENSORFLOW_LAYOUTMAP = _TENSORFLOW.nested_types_by_name['LayoutMap']
_TENSORFLOW_LAYOUTMAP_NAMETOSHARDINGSPECENTRY = _TENSORFLOW_LAYOUTMAP.nested_types_by_name['NameToShardingSpecEntry']
_TENSORFLOWFUNCTION = DESCRIPTOR.message_types_by_name['TensorFlowFunction']
_TENSORFLOWFUNCTION_BINDING = _TENSORFLOWFUNCTION.nested_types_by_name['Binding']
_TENSORFLOWFUNCTION_STRUCTBINDING = _TENSORFLOWFUNCTION.nested_types_by_name['StructBinding']
_TENSORFLOWFUNCTION_TENSORBINDING = _TENSORFLOWFUNCTION.nested_types_by_name['TensorBinding']
_TENSORFLOWFUNCTION_SEQUENCEBINDING = _TENSORFLOWFUNCTION.nested_types_by_name['SequenceBinding']
_TENSORFLOWFUNCTION_CACHEKEY = _TENSORFLOWFUNCTION.nested_types_by_name['CacheKey']
_TENSORFLOWFUNCTION_LAYOUTMAP = _TENSORFLOWFUNCTION.nested_types_by_name['LayoutMap']
_TENSORFLOWFUNCTION_LAYOUTMAP_NAMETOSHARDINGSPECENTRY = _TENSORFLOWFUNCTION_LAYOUTMAP.nested_types_by_name['NameToShardingSpecEntry']
_INTRINSIC = DESCRIPTOR.message_types_by_name['Intrinsic']
_LAMBDA = DESCRIPTOR.message_types_by_name['Lambda']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_BLOCK_LOCAL = _BLOCK.nested_types_by_name['Local']
_REFERENCE = DESCRIPTOR.message_types_by_name['Reference']
_CALL = DESCRIPTOR.message_types_by_name['Call']
_STRUCT = DESCRIPTOR.message_types_by_name['Struct']
_STRUCT_ELEMENT = _STRUCT.nested_types_by_name['Element']
_SELECTION = DESCRIPTOR.message_types_by_name['Selection']
_DATA = DESCRIPTOR.message_types_by_name['Data']
_XLA = DESCRIPTOR.message_types_by_name['Xla']
_XLA_BINDING = _XLA.nested_types_by_name['Binding']
_XLA_STRUCTBINDING = _XLA.nested_types_by_name['StructBinding']
_XLA_TENSORBINDING = _XLA.nested_types_by_name['TensorBinding']
_TENSORTYPE_DATATYPE = _TENSORTYPE.enum_types_by_name['DataType']
Computation = _reflection.GeneratedProtocolMessageType('Computation', (_message.Message,), {
  'DESCRIPTOR' : _COMPUTATION,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Computation)
  })
_sym_db.RegisterMessage(Computation)

Type = _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), {
  'DESCRIPTOR' : _TYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Type)
  })
_sym_db.RegisterMessage(Type)

FunctionType = _reflection.GeneratedProtocolMessageType('FunctionType', (_message.Message,), {
  'DESCRIPTOR' : _FUNCTIONTYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.FunctionType)
  })
_sym_db.RegisterMessage(FunctionType)

StructType = _reflection.GeneratedProtocolMessageType('StructType', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _STRUCTTYPE_ELEMENT,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.StructType.Element)
    })
  ,
  'DESCRIPTOR' : _STRUCTTYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.StructType)
  })
_sym_db.RegisterMessage(StructType)
_sym_db.RegisterMessage(StructType.Element)

SequenceType = _reflection.GeneratedProtocolMessageType('SequenceType', (_message.Message,), {
  'DESCRIPTOR' : _SEQUENCETYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.SequenceType)
  })
_sym_db.RegisterMessage(SequenceType)

TensorType = _reflection.GeneratedProtocolMessageType('TensorType', (_message.Message,), {
  'DESCRIPTOR' : _TENSORTYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorType)
  })
_sym_db.RegisterMessage(TensorType)

AbstractType = _reflection.GeneratedProtocolMessageType('AbstractType', (_message.Message,), {
  'DESCRIPTOR' : _ABSTRACTTYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.AbstractType)
  })
_sym_db.RegisterMessage(AbstractType)

PlacementSpec = _reflection.GeneratedProtocolMessageType('PlacementSpec', (_message.Message,), {
  'DESCRIPTOR' : _PLACEMENTSPEC,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.PlacementSpec)
  })
_sym_db.RegisterMessage(PlacementSpec)

PlacementLabel = _reflection.GeneratedProtocolMessageType('PlacementLabel', (_message.Message,), {
  'DESCRIPTOR' : _PLACEMENTLABEL,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.PlacementLabel)
  })
_sym_db.RegisterMessage(PlacementLabel)

Placement = _reflection.GeneratedProtocolMessageType('Placement', (_message.Message,), {
  'DESCRIPTOR' : _PLACEMENT,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Placement)
  })
_sym_db.RegisterMessage(Placement)

FederatedType = _reflection.GeneratedProtocolMessageType('FederatedType', (_message.Message,), {
  'DESCRIPTOR' : _FEDERATEDTYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.FederatedType)
  })
_sym_db.RegisterMessage(FederatedType)

PlacementType = _reflection.GeneratedProtocolMessageType('PlacementType', (_message.Message,), {
  'DESCRIPTOR' : _PLACEMENTTYPE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.PlacementType)
  })
_sym_db.RegisterMessage(PlacementType)

TensorFlow = _reflection.GeneratedProtocolMessageType('TensorFlow', (_message.Message,), {

  'Binding' : _reflection.GeneratedProtocolMessageType('Binding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOW_BINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.Binding)
    })
  ,

  'StructBinding' : _reflection.GeneratedProtocolMessageType('StructBinding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOW_STRUCTBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.StructBinding)
    })
  ,

  'TensorBinding' : _reflection.GeneratedProtocolMessageType('TensorBinding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOW_TENSORBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.TensorBinding)
    })
  ,

  'SequenceBinding' : _reflection.GeneratedProtocolMessageType('SequenceBinding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOW_SEQUENCEBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.SequenceBinding)
    })
  ,

  'CacheKey' : _reflection.GeneratedProtocolMessageType('CacheKey', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOW_CACHEKEY,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.CacheKey)
    })
  ,

  'LayoutMap' : _reflection.GeneratedProtocolMessageType('LayoutMap', (_message.Message,), {

    'NameToShardingSpecEntry' : _reflection.GeneratedProtocolMessageType('NameToShardingSpecEntry', (_message.Message,), {
      'DESCRIPTOR' : _TENSORFLOW_LAYOUTMAP_NAMETOSHARDINGSPECENTRY,
      '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
      # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.LayoutMap.NameToShardingSpecEntry)
      })
    ,
    'DESCRIPTOR' : _TENSORFLOW_LAYOUTMAP,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow.LayoutMap)
    })
  ,
  'DESCRIPTOR' : _TENSORFLOW,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlow)
  })
_sym_db.RegisterMessage(TensorFlow)
_sym_db.RegisterMessage(TensorFlow.Binding)
_sym_db.RegisterMessage(TensorFlow.StructBinding)
_sym_db.RegisterMessage(TensorFlow.TensorBinding)
_sym_db.RegisterMessage(TensorFlow.SequenceBinding)
_sym_db.RegisterMessage(TensorFlow.CacheKey)
_sym_db.RegisterMessage(TensorFlow.LayoutMap)
_sym_db.RegisterMessage(TensorFlow.LayoutMap.NameToShardingSpecEntry)

TensorFlowFunction = _reflection.GeneratedProtocolMessageType('TensorFlowFunction', (_message.Message,), {

  'Binding' : _reflection.GeneratedProtocolMessageType('Binding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOWFUNCTION_BINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction.Binding)
    })
  ,

  'StructBinding' : _reflection.GeneratedProtocolMessageType('StructBinding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOWFUNCTION_STRUCTBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction.StructBinding)
    })
  ,

  'TensorBinding' : _reflection.GeneratedProtocolMessageType('TensorBinding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOWFUNCTION_TENSORBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction.TensorBinding)
    })
  ,

  'SequenceBinding' : _reflection.GeneratedProtocolMessageType('SequenceBinding', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOWFUNCTION_SEQUENCEBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction.SequenceBinding)
    })
  ,

  'CacheKey' : _reflection.GeneratedProtocolMessageType('CacheKey', (_message.Message,), {
    'DESCRIPTOR' : _TENSORFLOWFUNCTION_CACHEKEY,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction.CacheKey)
    })
  ,

  'LayoutMap' : _reflection.GeneratedProtocolMessageType('LayoutMap', (_message.Message,), {

    'NameToShardingSpecEntry' : _reflection.GeneratedProtocolMessageType('NameToShardingSpecEntry', (_message.Message,), {
      'DESCRIPTOR' : _TENSORFLOWFUNCTION_LAYOUTMAP_NAMETOSHARDINGSPECENTRY,
      '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
      # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction.LayoutMap.NameToShardingSpecEntry)
      })
    ,
    'DESCRIPTOR' : _TENSORFLOWFUNCTION_LAYOUTMAP,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction.LayoutMap)
    })
  ,
  'DESCRIPTOR' : _TENSORFLOWFUNCTION,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.TensorFlowFunction)
  })
_sym_db.RegisterMessage(TensorFlowFunction)
_sym_db.RegisterMessage(TensorFlowFunction.Binding)
_sym_db.RegisterMessage(TensorFlowFunction.StructBinding)
_sym_db.RegisterMessage(TensorFlowFunction.TensorBinding)
_sym_db.RegisterMessage(TensorFlowFunction.SequenceBinding)
_sym_db.RegisterMessage(TensorFlowFunction.CacheKey)
_sym_db.RegisterMessage(TensorFlowFunction.LayoutMap)
_sym_db.RegisterMessage(TensorFlowFunction.LayoutMap.NameToShardingSpecEntry)

Intrinsic = _reflection.GeneratedProtocolMessageType('Intrinsic', (_message.Message,), {
  'DESCRIPTOR' : _INTRINSIC,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Intrinsic)
  })
_sym_db.RegisterMessage(Intrinsic)

Lambda = _reflection.GeneratedProtocolMessageType('Lambda', (_message.Message,), {
  'DESCRIPTOR' : _LAMBDA,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Lambda)
  })
_sym_db.RegisterMessage(Lambda)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {

  'Local' : _reflection.GeneratedProtocolMessageType('Local', (_message.Message,), {
    'DESCRIPTOR' : _BLOCK_LOCAL,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Block.Local)
    })
  ,
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Block)
  })
_sym_db.RegisterMessage(Block)
_sym_db.RegisterMessage(Block.Local)

Reference = _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCE,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Reference)
  })
_sym_db.RegisterMessage(Reference)

Call = _reflection.GeneratedProtocolMessageType('Call', (_message.Message,), {
  'DESCRIPTOR' : _CALL,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Call)
  })
_sym_db.RegisterMessage(Call)

Struct = _reflection.GeneratedProtocolMessageType('Struct', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _STRUCT_ELEMENT,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Struct.Element)
    })
  ,
  'DESCRIPTOR' : _STRUCT,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Struct)
  })
_sym_db.RegisterMessage(Struct)
_sym_db.RegisterMessage(Struct.Element)

Selection = _reflection.GeneratedProtocolMessageType('Selection', (_message.Message,), {
  'DESCRIPTOR' : _SELECTION,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Selection)
  })
_sym_db.RegisterMessage(Selection)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), {
  'DESCRIPTOR' : _DATA,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Data)
  })
_sym_db.RegisterMessage(Data)

Xla = _reflection.GeneratedProtocolMessageType('Xla', (_message.Message,), {

  'Binding' : _reflection.GeneratedProtocolMessageType('Binding', (_message.Message,), {
    'DESCRIPTOR' : _XLA_BINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Xla.Binding)
    })
  ,

  'StructBinding' : _reflection.GeneratedProtocolMessageType('StructBinding', (_message.Message,), {
    'DESCRIPTOR' : _XLA_STRUCTBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Xla.StructBinding)
    })
  ,

  'TensorBinding' : _reflection.GeneratedProtocolMessageType('TensorBinding', (_message.Message,), {
    'DESCRIPTOR' : _XLA_TENSORBINDING,
    '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Xla.TensorBinding)
    })
  ,
  'DESCRIPTOR' : _XLA,
  '__module__' : 'tensorflow_federated.proto.v0.computation_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_federated.v0.Xla)
  })
_sym_db.RegisterMessage(Xla)
_sym_db.RegisterMessage(Xla.Binding)
_sym_db.RegisterMessage(Xla.StructBinding)
_sym_db.RegisterMessage(Xla.TensorBinding)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TENSORFLOW_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._options = None
  _TENSORFLOW_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._serialized_options = b'8\001'
  _TENSORFLOWFUNCTION_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._options = None
  _TENSORFLOWFUNCTION_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._serialized_options = b'8\001'
  _COMPUTATION._serialized_start=104
  _COMPUTATION._serialized_end=830
  _TYPE._serialized_start=833
  _TYPE._serialized_end=1256
  _FUNCTIONTYPE._serialized_start=1258
  _FUNCTIONTYPE._serialized_end=1369
  _STRUCTTYPE._serialized_start=1372
  _STRUCTTYPE._serialized_end=1517
  _STRUCTTYPE_ELEMENT._serialized_start=1448
  _STRUCTTYPE_ELEMENT._serialized_end=1517
  _SEQUENCETYPE._serialized_start=1519
  _SEQUENCETYPE._serialized_end=1581
  _TENSORTYPE._serialized_start=1584
  _TENSORTYPE._serialized_end=2035
  _TENSORTYPE_DATATYPE._serialized_start=1696
  _TENSORTYPE_DATATYPE._serialized_end=2035
  _ABSTRACTTYPE._serialized_start=2037
  _ABSTRACTTYPE._serialized_end=2066
  _PLACEMENTSPEC._serialized_start=2069
  _PLACEMENTSPEC._serialized_end=2208
  _PLACEMENTLABEL._serialized_start=2210
  _PLACEMENTLABEL._serialized_end=2241
  _PLACEMENT._serialized_start=2243
  _PLACEMENT._serialized_end=2267
  _FEDERATEDTYPE._serialized_start=2270
  _FEDERATEDTYPE._serialized_end=2410
  _PLACEMENTTYPE._serialized_start=2412
  _PLACEMENTTYPE._serialized_end=2492
  _TENSORFLOW._serialized_start=2495
  _TENSORFLOW._serialized_end=3526
  _TENSORFLOW_BINDING._serialized_start=2866
  _TENSORFLOW_BINDING._serialized_end=3097
  _TENSORFLOW_STRUCTBINDING._serialized_start=3099
  _TENSORFLOW_STRUCTBINDING._serialized_end=3176
  _TENSORFLOW_TENSORBINDING._serialized_start=3178
  _TENSORFLOW_TENSORBINDING._serialized_end=3227
  _TENSORFLOW_SEQUENCEBINDING._serialized_start=3229
  _TENSORFLOW_SEQUENCEBINDING._serialized_end=3327
  _TENSORFLOW_CACHEKEY._serialized_start=3329
  _TENSORFLOW_CACHEKEY._serialized_end=3351
  _TENSORFLOW_LAYOUTMAP._serialized_start=3354
  _TENSORFLOW_LAYOUTMAP._serialized_end=3526
  _TENSORFLOW_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._serialized_start=3469
  _TENSORFLOW_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._serialized_end=3526
  _TENSORFLOWFUNCTION._serialized_start=3529
  _TENSORFLOWFUNCTION._serialized_end=4535
  _TENSORFLOWFUNCTION_BINDING._serialized_start=3885
  _TENSORFLOWFUNCTION_BINDING._serialized_end=4143
  _TENSORFLOWFUNCTION_STRUCTBINDING._serialized_start=4145
  _TENSORFLOWFUNCTION_STRUCTBINDING._serialized_end=4230
  _TENSORFLOWFUNCTION_TENSORBINDING._serialized_start=4232
  _TENSORFLOWFUNCTION_TENSORBINDING._serialized_end=4278
  _TENSORFLOWFUNCTION_SEQUENCEBINDING._serialized_start=4280
  _TENSORFLOWFUNCTION_SEQUENCEBINDING._serialized_end=4328
  _TENSORFLOWFUNCTION_CACHEKEY._serialized_start=3329
  _TENSORFLOWFUNCTION_CACHEKEY._serialized_end=3351
  _TENSORFLOWFUNCTION_LAYOUTMAP._serialized_start=4355
  _TENSORFLOWFUNCTION_LAYOUTMAP._serialized_end=4535
  _TENSORFLOWFUNCTION_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._serialized_start=3469
  _TENSORFLOWFUNCTION_LAYOUTMAP_NAMETOSHARDINGSPECENTRY._serialized_end=3526
  _INTRINSIC._serialized_start=4537
  _INTRINSIC._serialized_end=4561
  _LAMBDA._serialized_start=4563
  _LAMBDA._serialized_end=4649
  _BLOCK._serialized_start=4652
  _BLOCK._serialized_end=4842
  _BLOCK_LOCAL._serialized_start=4768
  _BLOCK_LOCAL._serialized_end=4842
  _REFERENCE._serialized_start=4844
  _REFERENCE._serialized_end=4869
  _CALL._serialized_start=4871
  _CALL._serialized_end=4989
  _STRUCT._serialized_start=4992
  _STRUCT._serialized_end=5136
  _STRUCT_ELEMENT._serialized_start=5060
  _STRUCT_ELEMENT._serialized_end=5136
  _SELECTION._serialized_start=5138
  _SELECTION._serialized_end=5218
  _DATA._serialized_start=5220
  _DATA._serialized_end=5249
  _XLA._serialized_start=5252
  _XLA._serialized_end=5674
  _XLA_BINDING._serialized_start=5413
  _XLA_BINDING._serialized_end=5557
  _XLA_STRUCTBINDING._serialized_start=5559
  _XLA_STRUCTBINDING._serialized_end=5629
  _XLA_TENSORBINDING._serialized_start=5631
  _XLA_TENSORBINDING._serialized_end=5674
# @@protoc_insertion_point(module_scope)
