Metadata-Version: 2.1
Name: tc-aws-video
Version: 1.0.2
Summary: A customer loader for getting the video first frame from s3 compatible storage
Home-page: https://github.com/ethenoscar2011/tc-aws-video
Author: Ethenoscar
Author-email: ethenoscar2011@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Description-Content-Type: text/markdown
Requires-Dist: thumbor (<7,>=6.0.0)
Requires-Dist: botocore
Requires-Dist: subprocess32
Requires-Dist: tc-aws

# Thumbor AWS

[![Join the chat at https://gitter.im/thumbor-community/aws](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/thumbor-community/aws?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

[![Circle CI](https://circleci.com/gh/thumbor-community/aws.svg?style=svg)](https://circleci.com/gh/thumbor-community/aws)

## Installation

```bash
    pip install tc_aws_video
```

### Authentication

Authentication is handled by botocore, see [Boto3 documentation](https://boto3.readthedocs.org/en/latest/guide/quickstart.html#configuration).

## Origin story

If you store the images or videos in s3 compatible storage , such as aws , minio etc.

And now, you want to access the images or the first frame of the videos on it.


This is a custom loader will help you to do this!


## Features

 * tc_aws_video.s3_video_loader

Additional Configuration values used:

```bash
# Reuse tc_aws configs 
# If you have credentials in ~/.aws/credentials , 
# then you can ignore TC_AWS_LOADER_ACCESS_KEY and TC_AWS_LOADER_SECRET_KEY
TC_AWS_REGION='your-s3-region'
TC_AWS_ENDPOINT='your-s3-endpoint'
TC_AWS_LOADER_ACCESS_KEY='your-s3-accesskey'
TC_AWS_LOADER_SECRET_KEY='your-s3-secret'

# Customize the temp storage for first frame of video
# The loader will delete the temp file while it read it into memory
TC_AWS_LOADER_VIDEO_FRAME_CACHE='/path/to/your/cache'

# Enable this loader
LOADER = 'tc_aws_video.s3_video_loader'

# Pay attention to this config 
# If you didn't set to no storage , you may occur 504
# Although this will slow down the request , you can set the cdn for caching the result
STORAGE = "thumbor.storages.no_storage"
```


