[tool.poetry]
name = "ts_stat_tests"
version = "0.6.0"
description = "A suite of statistical tests for time-series data."
authors = ["Chris Mahoney <chrismahoney@hotmail.com>"]
maintainers = ["Chris Mahoney <chrismahoney@hotmail.com>"]
readme = "README.md"
license = "MIT"
packages = [
  { include = "ts_stat_tests", from = "src" },
]
classifiers = [
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Education",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Software Development :: Documentation",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Testing :: Unit",
  "Topic :: Utilities",
]

[tool.poetry.urls]
Homepage = "https://chrimaho.github.io/ts-stat-tests"
Documentation = "https://chrimaho.github.io/ts-stat-tests"
Repository = "https://github.com/chrimaho/ts-stat-tests"
Changelog = "https://github.com/chrimaho/ts-stat-tests/releases"
Issues = "https://github.com/chrimaho/ts-stat-tests/issues"

[tool.poetry.dependencies]
python = ">=3.8,<3.11" # For scipy, a possible solution would be to set the `python` property to ">=3.8,<3.11"
typeguard = "^2.13"
numpy = ">=1.21,<1.24" #Required because in `numpy` `v0.24` has for some reason _removed_ the aliases such as `np.long`. It's throwing the errors: "AttributeError: module 'numpy' has no attribute 'long'". For more info, see: https://levelup.gitconnected.com/fix-attributeerror-module-numpy-has-no-attribute-float-d7d68c5a4971 & https://numpy.org/doc/stable/release/1.20.0-notes.html#using-the-aliases-of-builtin-types-like-np-int-is-deprecated
pandas = "^1.4"
tsfeatures = "^0.4"
statsmodels = "^0.13"
pmdarima = "^2.0"
scipy = "^1.10"
antropy = "^0.1"
py-tictoc-timer = "^1.5"
llvmlite = "^0.38.1" #Required by `tsfeatures`. If this is not added, then poetry will perplexingly install `v0.34`, which will throw errors during install because for some it cannot be compiled: "No such file or directory: 'llvm-config'".
numba = "^0.55.0" #Required by `antropy` and `tsfeatures`. If this restriction is not added, then poetry will perplexingly install `v0.56`, which will then throw the error "TypeError: create_target_machine() got an unexpected keyword argument 'jitdebug'".

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^22.0"
ipykernel = "^6.15"
pre-commit = "^2.20"
reorder-python-imports = "^3.8"
pyupgrade = "^2.37"
requests = "^2.28"
blacken-docs = "^1.13"
isort = "^5.12"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
mypy = "^0.971"
pytest = "^7.1"
pytest-clarity = "^1.0"
pytest-cov = "^3.0"
pytest-sugar = "^0.9"
pytest-icdiff = "^0.5"
pytest-xdist = "^2.5"
pytest-testmon = "^1.4"
stochastic = "^0.7"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4"
mkdocs-material = "^9.0"
mkdocstrings = {version="^0.19", extras=["python"]}
mkdocs-coverage = "^0.2"
mkdocs-section-index = "^0.3"
mkdocs-autorefs = "^0.4"
mkdocs-enumerate-headings-plugin = "^0.5"
livereload = "^2.6"
pytkdocs = "^0.16"
mike = "^1.1"

[tool.black]
# https://github.com/psf/black
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-continue-on-failure",
]
# TODO: add doctest back in: "--doctest-modules",

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry_bumpversion.replacements]]
files = ["src/ts_stat_tests/__init__.py"]
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'
