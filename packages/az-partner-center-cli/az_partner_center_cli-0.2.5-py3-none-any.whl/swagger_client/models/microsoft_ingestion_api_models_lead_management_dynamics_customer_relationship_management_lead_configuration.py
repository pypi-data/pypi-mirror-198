# coding: utf-8

"""
    https://api.partner.microsoft.com/v1.0/ingestion

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from swagger_client.models.microsoft_ingestion_api_models_lead_management_base_lead_configuration import MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration  # noqa: F401,E501

class MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration(MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'resource_type': 'str',
        'uri': 'str',
        'authentication': 'str',
        'user_name': 'str',
        'password': 'str',
        'application_id': 'str',
        'application_key': 'str',
        'directory_id': 'str'
    }
    if hasattr(MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration, "swagger_types"):
        swagger_types.update(MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.swagger_types)

    attribute_map = {
        'resource_type': 'resourceType',
        'uri': 'uri',
        'authentication': 'authentication',
        'user_name': 'userName',
        'password': 'password',
        'application_id': 'applicationID',
        'application_key': 'applicationKey',
        'directory_id': 'directoryID'
    }
    if hasattr(MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration, "attribute_map"):
        attribute_map.update(MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.attribute_map)

    def __init__(self, resource_type=None, uri=None, authentication=None, user_name=None, password=None, application_id=None, application_key=None, directory_id=None, *args, **kwargs):  # noqa: E501
        """MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration - a model defined in Swagger"""  # noqa: E501
        self._resource_type = None
        self._uri = None
        self._authentication = None
        self._user_name = None
        self._password = None
        self._application_id = None
        self._application_key = None
        self._directory_id = None
        self.discriminator = None
        if resource_type is not None:
            self.resource_type = resource_type
        if uri is not None:
            self.uri = uri
        if authentication is not None:
            self.authentication = authentication
        if user_name is not None:
            self.user_name = user_name
        if password is not None:
            self.password = password
        if application_id is not None:
            self.application_id = application_id
        if application_key is not None:
            self.application_key = application_key
        if directory_id is not None:
            self.directory_id = directory_id
        MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.__init__(self, *args, **kwargs)

    @property
    def resource_type(self):
        """Gets the resource_type of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The resource_type of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param resource_type: The resource_type of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """
        allowed_values = ["DynamicsCustomerRelationshipManagementLeadConfiguration"]  # noqa: E501
        if resource_type not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_type` ({0}), must be one of {1}"  # noqa: E501
                .format(resource_type, allowed_values)
            )

        self._resource_type = resource_type

    @property
    def uri(self):
        """Gets the uri of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The uri of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param uri: The uri of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._uri = uri

    @property
    def authentication(self):
        """Gets the authentication of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The authentication of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param authentication: The authentication of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._authentication = authentication

    @property
    def user_name(self):
        """Gets the user_name of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The user_name of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param user_name: The user_name of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def password(self):
        """Gets the password of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The password of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param password: The password of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._password = password

    @property
    def application_id(self):
        """Gets the application_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The application_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param application_id: The application_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._application_id = application_id

    @property
    def application_key(self):
        """Gets the application_key of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The application_key of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._application_key

    @application_key.setter
    def application_key(self, application_key):
        """Sets the application_key of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param application_key: The application_key of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._application_key = application_key

    @property
    def directory_id(self):
        """Gets the directory_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501


        :return: The directory_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._directory_id

    @directory_id.setter
    def directory_id(self, directory_id):
        """Sets the directory_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.


        :param directory_id: The directory_id of this MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._directory_id = directory_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftIngestionApiModelsLeadManagementDynamicsCustomerRelationshipManagementLeadConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
