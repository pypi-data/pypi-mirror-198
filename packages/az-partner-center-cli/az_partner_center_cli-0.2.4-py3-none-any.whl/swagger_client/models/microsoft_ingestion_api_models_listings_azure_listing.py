# coding: utf-8

"""
    https://api.partner.microsoft.com/v1.0/ingestion

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from swagger_client.models.microsoft_ingestion_api_models_listings_base_listing import MicrosoftIngestionApiModelsListingsBaseListing  # noqa: F401,E501

class MicrosoftIngestionApiModelsListingsAzureListing(MicrosoftIngestionApiModelsListingsBaseListing):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'resource_type': 'str',
        'product_display_name': 'str',
        'summary': 'str',
        'listing_uris': 'list[MicrosoftIngestionApiModelsListingsListingUri]',
        'listing_contacts': 'list[MicrosoftIngestionApiModelsListingsListingContact]',
        'access_information': 'str',
        'getting_started_instructions': 'str',
        'allow_only_managed_disk_deployments': 'bool',
        'compatible_products': 'list[str]'
    }
    if hasattr(MicrosoftIngestionApiModelsListingsBaseListing, "swagger_types"):
        swagger_types.update(MicrosoftIngestionApiModelsListingsBaseListing.swagger_types)

    attribute_map = {
        'resource_type': 'resourceType',
        'product_display_name': 'productDisplayName',
        'summary': 'summary',
        'listing_uris': 'listingUris',
        'listing_contacts': 'listingContacts',
        'access_information': 'accessInformation',
        'getting_started_instructions': 'gettingStartedInstructions',
        'allow_only_managed_disk_deployments': 'allowOnlyManagedDiskDeployments',
        'compatible_products': 'compatibleProducts'
    }
    if hasattr(MicrosoftIngestionApiModelsListingsBaseListing, "attribute_map"):
        attribute_map.update(MicrosoftIngestionApiModelsListingsBaseListing.attribute_map)

    def __init__(self, resource_type=None, product_display_name=None, summary=None, listing_uris=None, listing_contacts=None, access_information=None, getting_started_instructions=None, allow_only_managed_disk_deployments=None, compatible_products=None, *args, **kwargs):  # noqa: E501
        """MicrosoftIngestionApiModelsListingsAzureListing - a model defined in Swagger"""  # noqa: E501
        self._resource_type = None
        self._product_display_name = None
        self._summary = None
        self._listing_uris = None
        self._listing_contacts = None
        self._access_information = None
        self._getting_started_instructions = None
        self._allow_only_managed_disk_deployments = None
        self._compatible_products = None
        self.discriminator = None
        if resource_type is not None:
            self.resource_type = resource_type
        if product_display_name is not None:
            self.product_display_name = product_display_name
        if summary is not None:
            self.summary = summary
        if listing_uris is not None:
            self.listing_uris = listing_uris
        if listing_contacts is not None:
            self.listing_contacts = listing_contacts
        if access_information is not None:
            self.access_information = access_information
        if getting_started_instructions is not None:
            self.getting_started_instructions = getting_started_instructions
        if allow_only_managed_disk_deployments is not None:
            self.allow_only_managed_disk_deployments = allow_only_managed_disk_deployments
        if compatible_products is not None:
            self.compatible_products = compatible_products
        MicrosoftIngestionApiModelsListingsBaseListing.__init__(self, *args, **kwargs)

    @property
    def resource_type(self):
        """Gets the resource_type of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The resource_type of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param resource_type: The resource_type of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: str
        """
        allowed_values = ["AzureListing"]  # noqa: E501
        if resource_type not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_type` ({0}), must be one of {1}"  # noqa: E501
                .format(resource_type, allowed_values)
            )

        self._resource_type = resource_type

    @property
    def product_display_name(self):
        """Gets the product_display_name of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The product_display_name of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: str
        """
        return self._product_display_name

    @product_display_name.setter
    def product_display_name(self, product_display_name):
        """Sets the product_display_name of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param product_display_name: The product_display_name of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: str
        """

        self._product_display_name = product_display_name

    @property
    def summary(self):
        """Gets the summary of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The summary of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param summary: The summary of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: str
        """

        self._summary = summary

    @property
    def listing_uris(self):
        """Gets the listing_uris of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The listing_uris of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: list[MicrosoftIngestionApiModelsListingsListingUri]
        """
        return self._listing_uris

    @listing_uris.setter
    def listing_uris(self, listing_uris):
        """Sets the listing_uris of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param listing_uris: The listing_uris of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: list[MicrosoftIngestionApiModelsListingsListingUri]
        """

        self._listing_uris = listing_uris

    @property
    def listing_contacts(self):
        """Gets the listing_contacts of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The listing_contacts of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: list[MicrosoftIngestionApiModelsListingsListingContact]
        """
        return self._listing_contacts

    @listing_contacts.setter
    def listing_contacts(self, listing_contacts):
        """Sets the listing_contacts of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param listing_contacts: The listing_contacts of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: list[MicrosoftIngestionApiModelsListingsListingContact]
        """

        self._listing_contacts = listing_contacts

    @property
    def access_information(self):
        """Gets the access_information of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The access_information of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: str
        """
        return self._access_information

    @access_information.setter
    def access_information(self, access_information):
        """Sets the access_information of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param access_information: The access_information of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: str
        """

        self._access_information = access_information

    @property
    def getting_started_instructions(self):
        """Gets the getting_started_instructions of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The getting_started_instructions of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: str
        """
        return self._getting_started_instructions

    @getting_started_instructions.setter
    def getting_started_instructions(self, getting_started_instructions):
        """Sets the getting_started_instructions of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param getting_started_instructions: The getting_started_instructions of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: str
        """

        self._getting_started_instructions = getting_started_instructions

    @property
    def allow_only_managed_disk_deployments(self):
        """Gets the allow_only_managed_disk_deployments of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The allow_only_managed_disk_deployments of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: bool
        """
        return self._allow_only_managed_disk_deployments

    @allow_only_managed_disk_deployments.setter
    def allow_only_managed_disk_deployments(self, allow_only_managed_disk_deployments):
        """Sets the allow_only_managed_disk_deployments of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param allow_only_managed_disk_deployments: The allow_only_managed_disk_deployments of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: bool
        """

        self._allow_only_managed_disk_deployments = allow_only_managed_disk_deployments

    @property
    def compatible_products(self):
        """Gets the compatible_products of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501


        :return: The compatible_products of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :rtype: list[str]
        """
        return self._compatible_products

    @compatible_products.setter
    def compatible_products(self, compatible_products):
        """Sets the compatible_products of this MicrosoftIngestionApiModelsListingsAzureListing.


        :param compatible_products: The compatible_products of this MicrosoftIngestionApiModelsListingsAzureListing.  # noqa: E501
        :type: list[str]
        """

        self._compatible_products = compatible_products

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftIngestionApiModelsListingsAzureListing, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftIngestionApiModelsListingsAzureListing):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
