# coding: utf-8

"""
    https://api.partner.microsoft.com/v1.0/ingestion

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from swagger_client.models.microsoft_ingestion_api_models_packages_azure_base_test_drive_package_configuration import MicrosoftIngestionApiModelsPackagesAzureBaseTestDrivePackageConfiguration  # noqa: F401,E501

class MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration(MicrosoftIngestionApiModelsPackagesAzureBaseTestDrivePackageConfiguration):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'resource_type': 'str',
        'azure_active_directory_tenant_name': 'str',
        'max_concurrent_test_drives': 'int',
        'instance_uri': 'str',
        'role_name': 'str',
        'trial_legal_entity': 'str'
    }
    if hasattr(MicrosoftIngestionApiModelsPackagesAzureBaseTestDrivePackageConfiguration, "swagger_types"):
        swagger_types.update(MicrosoftIngestionApiModelsPackagesAzureBaseTestDrivePackageConfiguration.swagger_types)

    attribute_map = {
        'resource_type': 'resourceType',
        'azure_active_directory_tenant_name': 'azureActiveDirectoryTenantName',
        'max_concurrent_test_drives': 'maxConcurrentTestDrives',
        'instance_uri': 'instanceUri',
        'role_name': 'roleName',
        'trial_legal_entity': 'trialLegalEntity'
    }
    if hasattr(MicrosoftIngestionApiModelsPackagesAzureBaseTestDrivePackageConfiguration, "attribute_map"):
        attribute_map.update(MicrosoftIngestionApiModelsPackagesAzureBaseTestDrivePackageConfiguration.attribute_map)

    def __init__(self, resource_type=None, azure_active_directory_tenant_name=None, max_concurrent_test_drives=None, instance_uri=None, role_name=None, trial_legal_entity=None, *args, **kwargs):  # noqa: E501
        """MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration - a model defined in Swagger"""  # noqa: E501
        self._resource_type = None
        self._azure_active_directory_tenant_name = None
        self._max_concurrent_test_drives = None
        self._instance_uri = None
        self._role_name = None
        self._trial_legal_entity = None
        self.discriminator = None
        if resource_type is not None:
            self.resource_type = resource_type
        if azure_active_directory_tenant_name is not None:
            self.azure_active_directory_tenant_name = azure_active_directory_tenant_name
        if max_concurrent_test_drives is not None:
            self.max_concurrent_test_drives = max_concurrent_test_drives
        if instance_uri is not None:
            self.instance_uri = instance_uri
        if role_name is not None:
            self.role_name = role_name
        if trial_legal_entity is not None:
            self.trial_legal_entity = trial_legal_entity
        MicrosoftIngestionApiModelsPackagesAzureBaseTestDrivePackageConfiguration.__init__(self, *args, **kwargs)

    @property
    def resource_type(self):
        """Gets the resource_type of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501


        :return: The resource_type of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.


        :param resource_type: The resource_type of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :type: str
        """
        allowed_values = ["Dynamics365OperationsTestDrivePackageConfiguration"]  # noqa: E501
        if resource_type not in allowed_values:
            raise ValueError(
                "Invalid value for `resource_type` ({0}), must be one of {1}"  # noqa: E501
                .format(resource_type, allowed_values)
            )

        self._resource_type = resource_type

    @property
    def azure_active_directory_tenant_name(self):
        """Gets the azure_active_directory_tenant_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501


        :return: The azure_active_directory_tenant_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._azure_active_directory_tenant_name

    @azure_active_directory_tenant_name.setter
    def azure_active_directory_tenant_name(self, azure_active_directory_tenant_name):
        """Sets the azure_active_directory_tenant_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.


        :param azure_active_directory_tenant_name: The azure_active_directory_tenant_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :type: str
        """

        self._azure_active_directory_tenant_name = azure_active_directory_tenant_name

    @property
    def max_concurrent_test_drives(self):
        """Gets the max_concurrent_test_drives of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501


        :return: The max_concurrent_test_drives of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :rtype: int
        """
        return self._max_concurrent_test_drives

    @max_concurrent_test_drives.setter
    def max_concurrent_test_drives(self, max_concurrent_test_drives):
        """Sets the max_concurrent_test_drives of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.


        :param max_concurrent_test_drives: The max_concurrent_test_drives of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :type: int
        """

        self._max_concurrent_test_drives = max_concurrent_test_drives

    @property
    def instance_uri(self):
        """Gets the instance_uri of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501


        :return: The instance_uri of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._instance_uri

    @instance_uri.setter
    def instance_uri(self, instance_uri):
        """Sets the instance_uri of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.


        :param instance_uri: The instance_uri of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :type: str
        """

        self._instance_uri = instance_uri

    @property
    def role_name(self):
        """Gets the role_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501


        :return: The role_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._role_name

    @role_name.setter
    def role_name(self, role_name):
        """Sets the role_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.


        :param role_name: The role_name of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :type: str
        """

        self._role_name = role_name

    @property
    def trial_legal_entity(self):
        """Gets the trial_legal_entity of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501


        :return: The trial_legal_entity of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._trial_legal_entity

    @trial_legal_entity.setter
    def trial_legal_entity(self, trial_legal_entity):
        """Sets the trial_legal_entity of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.


        :param trial_legal_entity: The trial_legal_entity of this MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration.  # noqa: E501
        :type: str
        """

        self._trial_legal_entity = trial_legal_entity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftIngestionApiModelsPackagesDynamics365OperationsTestDrivePackageConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
