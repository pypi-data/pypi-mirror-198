# coding: utf-8

"""
    https://api.partner.microsoft.com/v1.0/ingestion

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from swagger_client.models.microsoft_ingestion_api_models_common_typed_resource import MicrosoftIngestionApiModelsCommonTypedResource  # noqa: F401,E501

class MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration(MicrosoftIngestionApiModelsCommonTypedResource):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'daily_digest_email_contacts': 'list[str]',
        'contact_email': 'str'
    }
    if hasattr(MicrosoftIngestionApiModelsCommonTypedResource, "swagger_types"):
        swagger_types.update(MicrosoftIngestionApiModelsCommonTypedResource.swagger_types)

    attribute_map = {
        'daily_digest_email_contacts': 'dailyDigestEmailContacts',
        'contact_email': 'contactEmail'
    }
    if hasattr(MicrosoftIngestionApiModelsCommonTypedResource, "attribute_map"):
        attribute_map.update(MicrosoftIngestionApiModelsCommonTypedResource.attribute_map)

    def __init__(self, daily_digest_email_contacts=None, contact_email=None, *args, **kwargs):  # noqa: E501
        """MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration - a model defined in Swagger"""  # noqa: E501
        self._daily_digest_email_contacts = None
        self._contact_email = None
        self.discriminator = None
        if daily_digest_email_contacts is not None:
            self.daily_digest_email_contacts = daily_digest_email_contacts
        if contact_email is not None:
            self.contact_email = contact_email
        MicrosoftIngestionApiModelsCommonTypedResource.__init__(self, *args, **kwargs)

    @property
    def daily_digest_email_contacts(self):
        """Gets the daily_digest_email_contacts of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.  # noqa: E501

        Daily Digest Email Contacts. Only for consulting service offer type. Emails configured here will be sent daily emails for all the leads generated for this offer that day.  # noqa: E501

        :return: The daily_digest_email_contacts of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.  # noqa: E501
        :rtype: list[str]
        """
        return self._daily_digest_email_contacts

    @daily_digest_email_contacts.setter
    def daily_digest_email_contacts(self, daily_digest_email_contacts):
        """Sets the daily_digest_email_contacts of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.

        Daily Digest Email Contacts. Only for consulting service offer type. Emails configured here will be sent daily emails for all the leads generated for this offer that day.  # noqa: E501

        :param daily_digest_email_contacts: The daily_digest_email_contacts of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.  # noqa: E501
        :type: list[str]
        """

        self._daily_digest_email_contacts = daily_digest_email_contacts

    @property
    def contact_email(self):
        """Gets the contact_email of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.  # noqa: E501

        Contact Email  # noqa: E501

        :return: The contact_email of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email):
        """Sets the contact_email of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.

        Contact Email  # noqa: E501

        :param contact_email: The contact_email of this MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration.  # noqa: E501
        :type: str
        """

        self._contact_email = contact_email

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftIngestionApiModelsLeadManagementBaseLeadConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
