# coding: utf-8

"""
    https://api.partner.microsoft.com/v1.0/ingestion

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftIngestionApiModelsCosellCosellContact(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type': 'str',
        'email': 'str',
        'name': 'str',
        'job_title': 'str',
        'role': 'str',
        'regions': 'list[str]',
        'sub_regions': 'list[str]'
    }

    attribute_map = {
        'type': 'type',
        'email': 'email',
        'name': 'name',
        'job_title': 'jobTitle',
        'role': 'role',
        'regions': 'regions',
        'sub_regions': 'subRegions'
    }

    def __init__(self, type=None, email=None, name=None, job_title=None, role=None, regions=None, sub_regions=None):  # noqa: E501
        """MicrosoftIngestionApiModelsCosellCosellContact - a model defined in Swagger"""  # noqa: E501
        self._type = None
        self._email = None
        self._name = None
        self._job_title = None
        self._role = None
        self._regions = None
        self._sub_regions = None
        self.discriminator = None
        if type is not None:
            self.type = type
        if email is not None:
            self.email = email
        if name is not None:
            self.name = name
        if job_title is not None:
            self.job_title = job_title
        if role is not None:
            self.role = role
        if regions is not None:
            self.regions = regions
        if sub_regions is not None:
            self.sub_regions = sub_regions

    @property
    def type(self):
        """Gets the type of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501


        :return: The type of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MicrosoftIngestionApiModelsCosellCosellContact.


        :param type: The type of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def email(self):
        """Gets the email of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501


        :return: The email of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this MicrosoftIngestionApiModelsCosellCosellContact.


        :param email: The email of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def name(self):
        """Gets the name of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501


        :return: The name of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MicrosoftIngestionApiModelsCosellCosellContact.


        :param name: The name of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def job_title(self):
        """Gets the job_title of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501


        :return: The job_title of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this MicrosoftIngestionApiModelsCosellCosellContact.


        :param job_title: The job_title of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :type: str
        """

        self._job_title = job_title

    @property
    def role(self):
        """Gets the role of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501


        :return: The role of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this MicrosoftIngestionApiModelsCosellCosellContact.


        :param role: The role of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :type: str
        """

        self._role = role

    @property
    def regions(self):
        """Gets the regions of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501


        :return: The regions of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :rtype: list[str]
        """
        return self._regions

    @regions.setter
    def regions(self, regions):
        """Sets the regions of this MicrosoftIngestionApiModelsCosellCosellContact.


        :param regions: The regions of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :type: list[str]
        """

        self._regions = regions

    @property
    def sub_regions(self):
        """Gets the sub_regions of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501


        :return: The sub_regions of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :rtype: list[str]
        """
        return self._sub_regions

    @sub_regions.setter
    def sub_regions(self, sub_regions):
        """Sets the sub_regions of this MicrosoftIngestionApiModelsCosellCosellContact.


        :param sub_regions: The sub_regions of this MicrosoftIngestionApiModelsCosellCosellContact.  # noqa: E501
        :type: list[str]
        """

        self._sub_regions = sub_regions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftIngestionApiModelsCosellCosellContact, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftIngestionApiModelsCosellCosellContact):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
