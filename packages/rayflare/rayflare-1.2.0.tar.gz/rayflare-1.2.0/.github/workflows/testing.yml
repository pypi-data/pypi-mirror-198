name: testing

on:
  push:

  pull_request:

  # everyday at 3 am UTC
  #  schedule:
  #   - cron:  '0 3 * * *'

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10']
        exclude:
          - os: windows-latest
            python-version: '3.9'

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies in Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt install -y python3-tk libboost-all-dev libopenblas-dev libfftw3-dev libsuitesparse-dev

    - name: Install system dependencies in MacOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install fftw suite-sparse openblas lapack boost

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade setuptools wheel pip twine numba
        pip install -e .[dev]

    - name: Install S4 in Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        git clone https://github.com/phoebe-p/S4
        cd S4
        make S4_pyext
        cd ..
        rm -rf S4

    - name: Install S4 in MacOS
      if: matrix.os == 'macos-latest'
      run: |
        git clone https://github.com/phoebe-p/S4
        cd S4
        make S4_pyext
        cd ..
        rm -rf S4

    - name: Install on Linux and MacOS
      if: matrix.os != 'windows-latest'
      run: pip install -e .

    - name: Install on Windows
      if: matrix.os == 'windows-latest'
      run: |
        pip install -e .
      shell: powershell

    - name: Test with pytest
      run: |
        pip install pytest-cov pytest-rerunfailures
        pytest --cov-report= --cov=rayflare tests/ --reruns 3


    - name: Codecov
      if: matrix.os == 'ubuntu-latest'
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        pip install codecov
        codecov