# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lighting_service.proto
# pylint: skip-file
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gazoo_device.protos import common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='lighting_service.proto',
  package='chip.rpc',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x16lighting_service.proto\x12\x08\x63hip.rpc\x1a\x0c\x63ommon.proto\"0\n\rLightingColor\x12\x0b\n\x03hue\x18\x01 \x01(\r\x12\x12\n\nsaturation\x18\x02 \x01(\r\"p\n\rLightingState\x12\n\n\x02on\x18\x01 \x01(\x08\x12\x12\n\x05level\x18\x02 \x01(\rH\x00\x88\x01\x01\x12+\n\x05\x63olor\x18\x03 \x01(\x0b\x32\x17.chip.rpc.LightingColorH\x01\x88\x01\x01\x42\x08\n\x06_levelB\x08\n\x06_color2v\n\x08Lighting\x12\x34\n\x03Set\x12\x17.chip.rpc.LightingState\x1a\x12.pw.protobuf.Empty\"\x00\x12\x34\n\x03Get\x12\x12.pw.protobuf.Empty\x1a\x17.chip.rpc.LightingState\"\x00\x62\x06proto3'
  ,
  dependencies=[common__pb2.DESCRIPTOR,])




_LIGHTINGCOLOR = _descriptor.Descriptor(
  name='LightingColor',
  full_name='chip.rpc.LightingColor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hue', full_name='chip.rpc.LightingColor.hue', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='saturation', full_name='chip.rpc.LightingColor.saturation', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=98,
)


_LIGHTINGSTATE = _descriptor.Descriptor(
  name='LightingState',
  full_name='chip.rpc.LightingState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='on', full_name='chip.rpc.LightingState.on', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='level', full_name='chip.rpc.LightingState.level', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='color', full_name='chip.rpc.LightingState.color', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_level', full_name='chip.rpc.LightingState._level',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_color', full_name='chip.rpc.LightingState._color',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=100,
  serialized_end=212,
)

_LIGHTINGSTATE.fields_by_name['color'].message_type = _LIGHTINGCOLOR
_LIGHTINGSTATE.oneofs_by_name['_level'].fields.append(
  _LIGHTINGSTATE.fields_by_name['level'])
_LIGHTINGSTATE.fields_by_name['level'].containing_oneof = _LIGHTINGSTATE.oneofs_by_name['_level']
_LIGHTINGSTATE.oneofs_by_name['_color'].fields.append(
  _LIGHTINGSTATE.fields_by_name['color'])
_LIGHTINGSTATE.fields_by_name['color'].containing_oneof = _LIGHTINGSTATE.oneofs_by_name['_color']
DESCRIPTOR.message_types_by_name['LightingColor'] = _LIGHTINGCOLOR
DESCRIPTOR.message_types_by_name['LightingState'] = _LIGHTINGSTATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LightingColor = _reflection.GeneratedProtocolMessageType('LightingColor', (_message.Message,), {
  'DESCRIPTOR' : _LIGHTINGCOLOR,
  '__module__' : 'lighting_service_pb2'
  # @@protoc_insertion_point(class_scope:chip.rpc.LightingColor)
  })
_sym_db.RegisterMessage(LightingColor)

LightingState = _reflection.GeneratedProtocolMessageType('LightingState', (_message.Message,), {
  'DESCRIPTOR' : _LIGHTINGSTATE,
  '__module__' : 'lighting_service_pb2'
  # @@protoc_insertion_point(class_scope:chip.rpc.LightingState)
  })
_sym_db.RegisterMessage(LightingState)



_LIGHTING = _descriptor.ServiceDescriptor(
  name='Lighting',
  full_name='chip.rpc.Lighting',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=214,
  serialized_end=332,
  methods=[
  _descriptor.MethodDescriptor(
    name='Set',
    full_name='chip.rpc.Lighting.Set',
    index=0,
    containing_service=None,
    input_type=_LIGHTINGSTATE,
    output_type=common__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='Get',
    full_name='chip.rpc.Lighting.Get',
    index=1,
    containing_service=None,
    input_type=common__pb2._EMPTY,
    output_type=_LIGHTINGSTATE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_LIGHTING)

DESCRIPTOR.services_by_name['Lighting'] = _LIGHTING

# @@protoc_insertion_point(module_scope)
