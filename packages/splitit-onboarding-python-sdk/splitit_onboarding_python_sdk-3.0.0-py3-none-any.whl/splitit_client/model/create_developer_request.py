# coding: utf-8

"""
    Splitit.OnBoarding.Api.V2

    Splitit's Onboarding API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from splitit_client import schemas  # noqa: F401


class CreateDeveloperRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by Konfig.
    Ref: https://konfigthis.com

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "fullCountryName",
            "countryCode",
            "companyName",
            "fullName",
            "requestHeader",
            "email",
            "termsAndConditions",
        }
        
        class properties:
            fullName = schemas.StrSchema
            email = schemas.StrSchema
            companyName = schemas.StrSchema
            termsAndConditions = schemas.BoolSchema
            countryCode = schemas.StrSchema
            fullCountryName = schemas.StrSchema
        
            @staticmethod
            def requestHeader() -> typing.Type['RequestHeaderSlim']:
                return RequestHeaderSlim
            __annotations__ = {
                "fullName": fullName,
                "email": email,
                "companyName": companyName,
                "termsAndConditions": termsAndConditions,
                "countryCode": countryCode,
                "fullCountryName": fullCountryName,
                "requestHeader": requestHeader,
            }
    
    fullCountryName: MetaOapg.properties.fullCountryName
    countryCode: MetaOapg.properties.countryCode
    companyName: MetaOapg.properties.companyName
    fullName: MetaOapg.properties.fullName
    requestHeader: 'RequestHeaderSlim'
    email: MetaOapg.properties.email
    termsAndConditions: MetaOapg.properties.termsAndConditions
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fullName"]) -> MetaOapg.properties.fullName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyName"]) -> MetaOapg.properties.companyName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["termsAndConditions"]) -> MetaOapg.properties.termsAndConditions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["countryCode"]) -> MetaOapg.properties.countryCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fullCountryName"]) -> MetaOapg.properties.fullCountryName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["requestHeader"]) -> 'RequestHeaderSlim': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["fullName", "email", "companyName", "termsAndConditions", "countryCode", "fullCountryName", "requestHeader", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fullName"]) -> MetaOapg.properties.fullName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyName"]) -> MetaOapg.properties.companyName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["termsAndConditions"]) -> MetaOapg.properties.termsAndConditions: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["countryCode"]) -> MetaOapg.properties.countryCode: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fullCountryName"]) -> MetaOapg.properties.fullCountryName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["requestHeader"]) -> 'RequestHeaderSlim': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["fullName", "email", "companyName", "termsAndConditions", "countryCode", "fullCountryName", "requestHeader", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        fullCountryName: typing.Union[MetaOapg.properties.fullCountryName, str, ],
        countryCode: typing.Union[MetaOapg.properties.countryCode, str, ],
        companyName: typing.Union[MetaOapg.properties.companyName, str, ],
        fullName: typing.Union[MetaOapg.properties.fullName, str, ],
        requestHeader: 'RequestHeaderSlim',
        email: typing.Union[MetaOapg.properties.email, str, ],
        termsAndConditions: typing.Union[MetaOapg.properties.termsAndConditions, bool, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CreateDeveloperRequest':
        return super().__new__(
            cls,
            *args,
            fullCountryName=fullCountryName,
            countryCode=countryCode,
            companyName=companyName,
            fullName=fullName,
            requestHeader=requestHeader,
            email=email,
            termsAndConditions=termsAndConditions,
            _configuration=_configuration,
            **kwargs,
        )

from splitit_client.model.request_header_slim import RequestHeaderSlim
