# coding: utf-8

"""
    Splitit.OnBoarding.Api.V2

    Splitit's Onboarding API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from splitit_client import schemas  # noqa: F401


class GetMerchantDetailsResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by Konfig.
    Ref: https://konfigthis.com

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "legalName",
            "merchantStatus",
            "phoneNumber",
            "publicName",
            "merchantTempId",
            "email",
        }
        
        class properties:
            publicName = schemas.StrSchema
            legalName = schemas.StrSchema
            phoneNumber = schemas.StrSchema
            merchantTempId = schemas.StrSchema
            email = schemas.StrSchema
            merchantStatus = schemas.StrSchema
            __annotations__ = {
                "publicName": publicName,
                "legalName": legalName,
                "phoneNumber": phoneNumber,
                "merchantTempId": merchantTempId,
                "email": email,
                "merchantStatus": merchantStatus,
            }
    
    legalName: MetaOapg.properties.legalName
    merchantStatus: MetaOapg.properties.merchantStatus
    phoneNumber: MetaOapg.properties.phoneNumber
    publicName: MetaOapg.properties.publicName
    merchantTempId: MetaOapg.properties.merchantTempId
    email: MetaOapg.properties.email
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["publicName"]) -> MetaOapg.properties.publicName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["legalName"]) -> MetaOapg.properties.legalName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phoneNumber"]) -> MetaOapg.properties.phoneNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["merchantTempId"]) -> MetaOapg.properties.merchantTempId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["merchantStatus"]) -> MetaOapg.properties.merchantStatus: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["publicName", "legalName", "phoneNumber", "merchantTempId", "email", "merchantStatus", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["publicName"]) -> MetaOapg.properties.publicName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["legalName"]) -> MetaOapg.properties.legalName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phoneNumber"]) -> MetaOapg.properties.phoneNumber: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["merchantTempId"]) -> MetaOapg.properties.merchantTempId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["merchantStatus"]) -> MetaOapg.properties.merchantStatus: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["publicName", "legalName", "phoneNumber", "merchantTempId", "email", "merchantStatus", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        legalName: typing.Union[MetaOapg.properties.legalName, str, ],
        merchantStatus: typing.Union[MetaOapg.properties.merchantStatus, str, ],
        phoneNumber: typing.Union[MetaOapg.properties.phoneNumber, str, ],
        publicName: typing.Union[MetaOapg.properties.publicName, str, ],
        merchantTempId: typing.Union[MetaOapg.properties.merchantTempId, str, ],
        email: typing.Union[MetaOapg.properties.email, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GetMerchantDetailsResponse':
        return super().__new__(
            cls,
            *args,
            legalName=legalName,
            merchantStatus=merchantStatus,
            phoneNumber=phoneNumber,
            publicName=publicName,
            merchantTempId=merchantTempId,
            email=email,
            _configuration=_configuration,
            **kwargs,
        )
