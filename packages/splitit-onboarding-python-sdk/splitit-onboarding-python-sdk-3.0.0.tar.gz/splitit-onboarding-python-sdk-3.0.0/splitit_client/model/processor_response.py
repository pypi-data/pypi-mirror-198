# coding: utf-8

"""
    Splitit.OnBoarding.Api.V2

    Splitit's Onboarding API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from splitit_client import schemas  # noqa: F401


class ProcessorResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by Konfig.
    Ref: https://konfigthis.com

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "processorAuthenticationParametersRequest",
            "name",
            "id",
        }
        
        class properties:
            id = schemas.Int64Schema
            name = schemas.StrSchema
            
            
            class processorAuthenticationParametersRequest(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ProcessorAuthenticationParametersRequest']:
                        return ProcessorAuthenticationParametersRequest
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ProcessorAuthenticationParametersRequest'], typing.List['ProcessorAuthenticationParametersRequest']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'processorAuthenticationParametersRequest':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ProcessorAuthenticationParametersRequest':
                    return super().__getitem__(i)
            __annotations__ = {
                "id": id,
                "name": name,
                "processorAuthenticationParametersRequest": processorAuthenticationParametersRequest,
            }
    
    processorAuthenticationParametersRequest: MetaOapg.properties.processorAuthenticationParametersRequest
    name: MetaOapg.properties.name
    id: MetaOapg.properties.id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["processorAuthenticationParametersRequest"]) -> MetaOapg.properties.processorAuthenticationParametersRequest: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "name", "processorAuthenticationParametersRequest", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["processorAuthenticationParametersRequest"]) -> MetaOapg.properties.processorAuthenticationParametersRequest: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "name", "processorAuthenticationParametersRequest", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        processorAuthenticationParametersRequest: typing.Union[MetaOapg.properties.processorAuthenticationParametersRequest, list, tuple, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProcessorResponse':
        return super().__new__(
            cls,
            *args,
            processorAuthenticationParametersRequest=processorAuthenticationParametersRequest,
            name=name,
            id=id,
            _configuration=_configuration,
            **kwargs,
        )

from splitit_client.model.processor_authentication_parameters_request import ProcessorAuthenticationParametersRequest
