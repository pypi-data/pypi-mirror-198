Metadata-Version: 2.1
Name: pylontech
Version: 0.1.3
Summary: Communicate to Pylontech batteries using a RS485 interface
Home-page: https://github.com/Tomcat42/pylontech-python/
Author: Bernd Singer
Author-email: singer@nefkom.net
License: MIT
Project-URL: Bug Tracker, https://github.com/Tomcat42/pylontech-python/issues
Description: # pylontech-python
        Functions to communicate to Pylontech Batteries using RS-485 serial communication
        
        3 Layer model - each can be used as lib:
          1. pylontech_base.py - Communication layer, RS485 to pylontech with raw frame support
          2. pylontech_decode.py and pylontech_encode.py for decodeing and encoding the frame content
          3. pylontech_stack.py high level abstraction for the whole stack.
             It iterates over batteries and calculates overall results and combines battery results to lists.
             Some detail information from layer 2 might not be implemented in this layer.
        
        
        Installation using setup.py:
        
        run 'python3 ./setup.py install'
        
        
        Example:
        an example to use pylontech-python:
        
          >>> from pylontech import PylontechStack
          >>> x = PylontechStack("/dev/ttyUSB0",baud=115200,manualBattcountLimit=5)
          >>> x.battcount
          2
        
        A big "Thanks" to Daniel Schramm for his contibution!
        
Keywords: pylontech pylon RS485 lithium battery US2000 US2000C US3000
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Utilities
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
