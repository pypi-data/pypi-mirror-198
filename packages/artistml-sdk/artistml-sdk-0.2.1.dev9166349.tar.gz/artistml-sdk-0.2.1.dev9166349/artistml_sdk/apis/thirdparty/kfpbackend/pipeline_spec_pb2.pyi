"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import ...thirdparty.kfpbackend.parameter_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PipelineSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class RuntimeConfig(google.protobuf.message.Message):
        """The runtime config of a PipelineSpec."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class ParametersEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text
            @property
            def value(self) -> google.protobuf.struct_pb2.Value: ...
            def __init__(self,
                *,
                key: typing.Text = ...,
                value: typing.Optional[google.protobuf.struct_pb2.Value] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        PARAMETERS_FIELD_NUMBER: builtins.int
        PIPELINE_ROOT_FIELD_NUMBER: builtins.int
        @property
        def parameters(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.protobuf.struct_pb2.Value]:
            """The runtime parameters of the PipelineSpec. The parameters will be
            used to replace the placeholders
            at runtime.
            """
            pass
        pipeline_root: typing.Text
        """A path in a object store bucket which will be treated as the root
        output directory of the pipeline. It is used by the system to
        generate the paths of output artifacts. Ref:(https://www.kubeflow.org/docs/components/pipelines/pipeline-root/)
        """

        def __init__(self,
            *,
            parameters: typing.Optional[typing.Mapping[typing.Text, google.protobuf.struct_pb2.Value]] = ...,
            pipeline_root: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["parameters",b"parameters","pipeline_root",b"pipeline_root"]) -> None: ...

    PIPELINE_ID_FIELD_NUMBER: builtins.int
    PIPELINE_NAME_FIELD_NUMBER: builtins.int
    WORKFLOW_MANIFEST_FIELD_NUMBER: builtins.int
    PIPELINE_MANIFEST_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    RUNTIME_CONFIG_FIELD_NUMBER: builtins.int
    pipeline_id: typing.Text
    """Optional input field. The ID of the pipeline user uploaded before."""

    pipeline_name: typing.Text
    """Optional output field. The name of the pipeline.
    Not empty if the pipeline id is not empty.
    """

    workflow_manifest: typing.Text
    """Optional input field. The marshalled raw argo JSON workflow.
    This will be deprecated when pipeline_manifest is in use.
    """

    pipeline_manifest: typing.Text
    """Optional input field. The raw pipeline JSON spec."""

    @property
    def parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[thirdparty.kfpbackend.parameter_pb2.Parameter]:
        """The parameter user provide to inject to the pipeline JSON.
        If a default value of a parameter exist in the JSON,
        the value user provided here will replace. V1 only
        """
        pass
    @property
    def runtime_config(self) -> global___PipelineSpec.RuntimeConfig:
        """Runtime config of the pipeline. V2 only"""
        pass
    def __init__(self,
        *,
        pipeline_id: typing.Text = ...,
        pipeline_name: typing.Text = ...,
        workflow_manifest: typing.Text = ...,
        pipeline_manifest: typing.Text = ...,
        parameters: typing.Optional[typing.Iterable[thirdparty.kfpbackend.parameter_pb2.Parameter]] = ...,
        runtime_config: typing.Optional[global___PipelineSpec.RuntimeConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["runtime_config",b"runtime_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parameters",b"parameters","pipeline_id",b"pipeline_id","pipeline_manifest",b"pipeline_manifest","pipeline_name",b"pipeline_name","runtime_config",b"runtime_config","workflow_manifest",b"workflow_manifest"]) -> None: ...
global___PipelineSpec = PipelineSpec
