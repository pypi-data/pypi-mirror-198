# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ...thirdparty.kfpbackend import filter_pb2 as thirdparty_dot_kfpbackend_dot_filter__pb2


class DummyFilterServiceStub(object):
    """This dummy service is required so that grpc-gateway will generate Swagger
    definitions for the Filter message. Otherwise, it does not get generated
    since Filter itself is not used in any of the RPC calls - only a serialized
    encoded version of it is used.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFilter = channel.unary_unary(
                '/thirdparty.kfpbackend.DummyFilterService/GetFilter',
                request_serializer=thirdparty_dot_kfpbackend_dot_filter__pb2.Filter.SerializeToString,
                response_deserializer=thirdparty_dot_kfpbackend_dot_filter__pb2.Filter.FromString,
                )


class DummyFilterServiceServicer(object):
    """This dummy service is required so that grpc-gateway will generate Swagger
    definitions for the Filter message. Otherwise, it does not get generated
    since Filter itself is not used in any of the RPC calls - only a serialized
    encoded version of it is used.
    """

    def GetFilter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DummyFilterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFilter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFilter,
                    request_deserializer=thirdparty_dot_kfpbackend_dot_filter__pb2.Filter.FromString,
                    response_serializer=thirdparty_dot_kfpbackend_dot_filter__pb2.Filter.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'thirdparty.kfpbackend.DummyFilterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DummyFilterService(object):
    """This dummy service is required so that grpc-gateway will generate Swagger
    definitions for the Filter message. Otherwise, it does not get generated
    since Filter itself is not used in any of the RPC calls - only a serialized
    encoded version of it is used.
    """

    @staticmethod
    def GetFilter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/thirdparty.kfpbackend.DummyFilterService/GetFilter',
            thirdparty_dot_kfpbackend_dot_filter__pb2.Filter.SerializeToString,
            thirdparty_dot_kfpbackend_dot_filter__pb2.Filter.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
