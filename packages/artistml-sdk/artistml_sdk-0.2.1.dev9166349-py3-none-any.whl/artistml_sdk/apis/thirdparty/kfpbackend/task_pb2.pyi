"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import ...thirdparty.kfpbackend.resource_reference_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Task(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    PIPELINENAME_FIELD_NUMBER: builtins.int
    RUNID_FIELD_NUMBER: builtins.int
    MLMDEXECUTIONID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    FINISHED_AT_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    id: typing.Text
    """Output. Unique task ID. Generated by API server."""

    namespace: typing.Text
    """Optional input field. The Namespace to which this pipeline task belongs."""

    pipelineName: typing.Text
    """Required input field. The PipelineName to which this pipeline task belongs.
    Namespace will be encoded in the PipelineName.
    "namespace/${namespace}/pipeline/${pipelineName}" for namespaced pipelines
    "pipeline/${pipelineName}" for shared pipelines
    """

    runId: typing.Text
    """Required input field.The ID of the PipelineRun that the PipelineTask belongs to."""

    mlmdExecutionID: typing.Text
    """Required input field. The ID of the MLMD execution associated with the PipelineTask."""

    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Required input field. The time this task is created."""
        pass
    @property
    def finished_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional input field. The time this task is finished."""
        pass
    fingerprint: typing.Text
    """Required input field."""

    def __init__(self,
        *,
        id: typing.Text = ...,
        namespace: typing.Text = ...,
        pipelineName: typing.Text = ...,
        runId: typing.Text = ...,
        mlmdExecutionID: typing.Text = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        finished_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        fingerprint: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at",b"created_at","finished_at",b"finished_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_at",b"created_at","fingerprint",b"fingerprint","finished_at",b"finished_at","id",b"id","mlmdExecutionID",b"mlmdExecutionID","namespace",b"namespace","pipelineName",b"pipelineName","runId",b"runId"]) -> None: ...
global___Task = Task

class CreateTaskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_FIELD_NUMBER: builtins.int
    @property
    def task(self) -> global___Task: ...
    def __init__(self,
        *,
        task: typing.Optional[global___Task] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["task",b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["task",b"task"]) -> None: ...
global___CreateTaskRequest = CreateTaskRequest

class ListTasksRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    SORT_BY_FIELD_NUMBER: builtins.int
    RESOURCE_REFERENCE_KEY_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    page_token: typing.Text
    """A page token to request the next page of results. The token is acquried
    from the nextPageToken field of the response from the previous
    ListExperiment call or can be omitted when fetching the first page.
    """

    page_size: builtins.int
    """The number of experiments to be listed per page. If there are more
    experiments than this number, the response message will contain a
    nextPageToken field you can use to fetch the next page.
    """

    sort_by: typing.Text
    """Can be format of "field_name", "field_name asc" or "field_name desc"
    Ascending by default.
    """

    @property
    def resource_reference_key(self) -> thirdparty.kfpbackend.resource_reference_pb2.ResourceKey:
        """What resource reference to filter on.
        E.g. If listing tasks for an pipeline run, the query string would be
        resource_reference_key.type="PIPELINE"&resource_reference_key.id=123
        """
        pass
    filter: typing.Text
    """A url-encoded, JSON-serialized Filter protocol buffer (see
    [filter.proto](https://github.com/kubeflow/pipelines/blob/master/backend/api/filter.proto)).
    """

    def __init__(self,
        *,
        page_token: typing.Text = ...,
        page_size: builtins.int = ...,
        sort_by: typing.Text = ...,
        resource_reference_key: typing.Optional[thirdparty.kfpbackend.resource_reference_pb2.ResourceKey] = ...,
        filter: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_reference_key",b"resource_reference_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","resource_reference_key",b"resource_reference_key","sort_by",b"sort_by"]) -> None: ...
global___ListTasksRequest = ListTasksRequest

class ListTasksResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASKS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    @property
    def tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Task]:
        """A list of tasks returned."""
        pass
    next_page_token: typing.Text
    """The token to list the next page of experiments."""

    total_size: builtins.int
    """The total number of experiments for the given query."""

    def __init__(self,
        *,
        tasks: typing.Optional[typing.Iterable[global___Task]] = ...,
        next_page_token: typing.Text = ...,
        total_size: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","tasks",b"tasks","total_size",b"total_size"]) -> None: ...
global___ListTasksResponse = ListTasksResponse
