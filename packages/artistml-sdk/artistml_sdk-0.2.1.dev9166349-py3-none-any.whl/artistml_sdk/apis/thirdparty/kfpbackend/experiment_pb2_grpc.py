# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from ...thirdparty.kfpbackend import experiment_pb2 as thirdparty_dot_kfpbackend_dot_experiment__pb2


class ExperimentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateExperiment = channel.unary_unary(
                '/thirdparty.kfpbackend.ExperimentService/CreateExperiment',
                request_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.CreateExperimentRequest.SerializeToString,
                response_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.Experiment.FromString,
                )
        self.GetExperiment = channel.unary_unary(
                '/thirdparty.kfpbackend.ExperimentService/GetExperiment',
                request_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.GetExperimentRequest.SerializeToString,
                response_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.Experiment.FromString,
                )
        self.ListExperiment = channel.unary_unary(
                '/thirdparty.kfpbackend.ExperimentService/ListExperiment',
                request_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.ListExperimentsRequest.SerializeToString,
                response_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.ListExperimentsResponse.FromString,
                )
        self.DeleteExperiment = channel.unary_unary(
                '/thirdparty.kfpbackend.ExperimentService/DeleteExperiment',
                request_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.DeleteExperimentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ArchiveExperiment = channel.unary_unary(
                '/thirdparty.kfpbackend.ExperimentService/ArchiveExperiment',
                request_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.ArchiveExperimentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UnarchiveExperiment = channel.unary_unary(
                '/thirdparty.kfpbackend.ExperimentService/UnarchiveExperiment',
                request_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.UnarchiveExperimentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class ExperimentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateExperiment(self, request, context):
        """Creates a new experiment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperiment(self, request, context):
        """Finds a specific experiment by ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExperiment(self, request, context):
        """Finds all experiments. Supports pagination, and sorting on certain fields.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteExperiment(self, request, context):
        """Deletes an experiment without deleting the experiment's runs and jobs. To
        avoid unexpected behaviors, delete an experiment's runs and jobs before
        deleting the experiment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ArchiveExperiment(self, request, context):
        """Archives an experiment and the experiment's runs and jobs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnarchiveExperiment(self, request, context):
        """Restores an archived experiment. The experiment's archived runs and jobs
        will stay archived.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateExperiment,
                    request_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.CreateExperimentRequest.FromString,
                    response_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.Experiment.SerializeToString,
            ),
            'GetExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperiment,
                    request_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.GetExperimentRequest.FromString,
                    response_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.Experiment.SerializeToString,
            ),
            'ListExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExperiment,
                    request_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.ListExperimentsRequest.FromString,
                    response_serializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.ListExperimentsResponse.SerializeToString,
            ),
            'DeleteExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteExperiment,
                    request_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.DeleteExperimentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ArchiveExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.ArchiveExperiment,
                    request_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.ArchiveExperimentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UnarchiveExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.UnarchiveExperiment,
                    request_deserializer=thirdparty_dot_kfpbackend_dot_experiment__pb2.UnarchiveExperimentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'thirdparty.kfpbackend.ExperimentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/thirdparty.kfpbackend.ExperimentService/CreateExperiment',
            thirdparty_dot_kfpbackend_dot_experiment__pb2.CreateExperimentRequest.SerializeToString,
            thirdparty_dot_kfpbackend_dot_experiment__pb2.Experiment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/thirdparty.kfpbackend.ExperimentService/GetExperiment',
            thirdparty_dot_kfpbackend_dot_experiment__pb2.GetExperimentRequest.SerializeToString,
            thirdparty_dot_kfpbackend_dot_experiment__pb2.Experiment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/thirdparty.kfpbackend.ExperimentService/ListExperiment',
            thirdparty_dot_kfpbackend_dot_experiment__pb2.ListExperimentsRequest.SerializeToString,
            thirdparty_dot_kfpbackend_dot_experiment__pb2.ListExperimentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/thirdparty.kfpbackend.ExperimentService/DeleteExperiment',
            thirdparty_dot_kfpbackend_dot_experiment__pb2.DeleteExperimentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ArchiveExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/thirdparty.kfpbackend.ExperimentService/ArchiveExperiment',
            thirdparty_dot_kfpbackend_dot_experiment__pb2.ArchiveExperimentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnarchiveExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/thirdparty.kfpbackend.ExperimentService/UnarchiveExperiment',
            thirdparty_dot_kfpbackend_dot_experiment__pb2.UnarchiveExperimentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
