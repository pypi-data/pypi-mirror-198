Metadata-Version: 2.1
Name: pavo
Version: 0.3.0
Summary: PAthological Visualisation Obsession
Home-page: https://github.com/bayer-group/pavo
Download-URL: https://github.com/bayer-group/pavo
Author: Andreas Poehlmann
Author-email: andreas.poehlmann@bayer.com
License: BSD
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Utilities
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: celery
Requires-Dist: click
Requires-Dist: dynaconf
Requires-Dist: filelock
Requires-Dist: flask-caching (>=1.8.0)
Requires-Dist: flask (>=2)
Requires-Dist: fsspec
Requires-Dist: geopandas
Requires-Dist: importlib-resources
Requires-Dist: itsdangerous
Requires-Dist: orjson
Requires-Dist: pado (>=0.12)
Requires-Dist: pandas
Requires-Dist: pillow
Requires-Dist: redis
Requires-Dist: tiffslide (>=2)
Requires-Dist: tqdm
Requires-Dist: typer
Requires-Dist: typing-extensions
Requires-Dist: werkzeug
Provides-Extra: dev
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: pytest (>=6) ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'

# PAVO: PAthological Visualization Obsession

Welcome to `pavo` :wave:, a visualization tool for
[pado datasets](https://github.com/bayer-group/pado).

`pavo`'s goal is to provide a testbed for easy prototyping of data
visualizations of whole slide images and metadata of digital pathology datasets.

We strive to make your lives as easy as possible: If setting up
`pavo` is hard or unintuitive, if its interface is slow or if its
documentation is confusing, it's a bug in `pavo`.
Always feel free to report any issues or feature requests in the issue tracker!

Development
[happens on github](https://github.com/bayer-group/pavo)
:octocat:


## Installation

To install pavo clone the repo and run `pip install .` Note that you need
a "nodejs==16.*" installation to be able to build from source.


## Usage

`pavo` is used to visualize `pado` datasets. If you have a `pado` dataset
just run:

```shell
pavo production run /path/to/your/dataset
```

and access the web ui under the printed address.


## Development Environment Setup

1. Install `git` and `conda` and `conda-devenv`
2. Clone pavo `git clone https://github.com/bayer-group/pavo.git`
3. Change directory `cd pavo`
4. Run `conda devenv --env PAVO_DEVEL=TRUE -f environment.devenv.yml --print > environment.yml`
5. Run `conda env create -f environment.yml`
6. Activate the environment `conda activate pavo`
7. Setup the javascript dependencies `npm install .` (optional, handled in `setup.py`)

Note that in this environment `pavo` is already installed in
development mode, so go ahead and hack.

- Run tests via `pytest`
- Run the static type analysis via `mypy pavo`
- Launch a development instance via `pavo development run`


## Contributing Guidelines

- Check the [contribution guidelines](CONTRIBUTING.md)
- Please use [numpy docstrings](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard).
- When contributing code, please try to use Pull Requests.
- tests go hand in hand with modules on ```tests``` packages at the same level. We use ```pytest```.


## Acknowledgements

Build with love by the _Machine Learning Research_ group at Bayer.

`pavo`: copyright 2020 Bayer AG
