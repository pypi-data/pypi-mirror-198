Metadata-Version: 2.1
Name: matter-persistence
Version: 0.2.0
Summary: Matter persistance library.
Project-URL: Documentation, https://github.com/Matter-Tech/matter-persistence#readme
Project-URL: Issues, https://github.com/Matter-Tech/matter-persistence/issues
Project-URL: Source, https://github.com/Matter-Tech/matter-persistence
Author-email: RÃ´mulo Jales <romulo@thisismatter.com>
License-Expression: MIT
License-File: LICENSE
Keywords: database,migrations,orm
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.10
Requires-Dist: matter-exceptions==0.1.1
Requires-Dist: pydantic==1.10.6
Provides-Extra: database
Requires-Dist: sqlalchemy[asyncio]==2.0.7; extra == 'database'
Provides-Extra: database-migrations
Requires-Dist: alembic==1.10.1; extra == 'database-migrations'
Requires-Dist: matter-persistence[database]; extra == 'database-migrations'
Requires-Dist: python-dotenv==1.0.0; extra == 'database-migrations'
Requires-Dist: typer==0.7.0; extra == 'database-migrations'
Provides-Extra: database-postgresql
Requires-Dist: asyncpg==0.27.0; extra == 'database-postgresql'
Requires-Dist: matter-persistence[database]; extra == 'database-postgresql'
Requires-Dist: sqlalchemy[postgresql]==2.0.7; extra == 'database-postgresql'
Description-Content-Type: text/markdown

# matter-persistence

[![PyPI - Version](https://img.shields.io/pypi/v/matter-persistence.svg)](https://pypi.org/project/matter-persistence)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/matter-persistence.svg)](https://pypi.org/project/matter-persistence)

**Table of Contents**

- [Installation](#installation)
- [License](#license)

## Installation

```console
pip install matter-persistence
```

## Contributing

Make sure you have all supported python versions installed in your machine:

* 3.10
* 3.11

### Install hatch in your system

```https://hatch.pypa.io/latest/install/```

### Create the environment

```console
hatch env create
```

Do your changes...

### Run the tests

```console
hatch run test:test
```

The command above will run the tests against all supported python versions
installed in your machine. For testing in other operating system you may use the
configured CI in github. 

### Bump a new version

In general, you just need to execute:

```console
hatch version
```

This command will update the minor version. i.e.:
No breaking changes and new feature has been added

We are using [semantic version](https://semver.org/), if you are doing a bug fix:

```console
hatch version fix
```
