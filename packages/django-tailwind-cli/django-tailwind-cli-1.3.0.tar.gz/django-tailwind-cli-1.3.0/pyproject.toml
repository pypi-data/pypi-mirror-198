[project]
name = "django-tailwind-cli"
version = "1.3.0"
description = "Django and Tailwind integration based on the prebuilt Tailwind CSS CLI."
authors = [
    { name = "Oliver Andrich", email = "oliver@andrich.me" },
]
requires-python = ">=3.8,<4.0"
dependencies = [
    "django>=3.2",
    "certifi<2023.0.0,>=2022.9.24",
    "django-click<3.0.0,>=2.3.0",
]
readme = "README.md"
keywords = [
    "django",
    "tailwind",
    "css",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "Environment :: Web Environment",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
]

[project.license]
text = "MIT"

[project.urls]
Twitter = "https://twitter.com/oliverandrich"
Mastodon = "https://2pxnl.de/@oliver"
homepage = "https://github.com/oliverandrich/django-tailwind-cli"
repository = "https://github.com/oliverandrich/django-tailwind-cli"

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.2.2",
    "pytest-cov>=4.0.0",
    "pytest-django>=4.5.2",
    "django-types>=0.17.0",
    "pytest-randomly>=3.12.0",
    "pytest-timeout>=2.1.0",
]

[tool.pdm.build]
includes = [
    "src/django_tailwind_cli",
]

[tool.black]
target-version = [
    "py38",
]
line-length = 100

[tool.isort]
profile = "black"
add_imports = "from __future__ import annotations"

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
pythonpath = [
    ".",
    "src",
]
addopts = "--strict-config\n    --strict-markers\n    --ds=tests.settings\n    "
django_find_project = false

[tool.coverage.run]
omit = [
    "*/tests/*",
    "conftest.py",
]

[tool.poetry_bumpversion.file."src/django_tailwind_cli/__init__.py"]
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[tool.ruff]
select = [
    "A",
    "B",
    "C4",
    "D",
    "E",
    "F",
    "I",
    "DJ",
    "INP",
    "TID",
    "UP",
    "YTT",
]
ignore = [
    "D202",
    "D203",
    "D212",
]
fixable = [
    "A",
    "B",
    "C4",
    "D",
    "E",
    "F",
    "I",
    "TID",
    "UP",
]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".github",
    ".hg",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "migrations",
    "node_modules",
    "static",
]
line-length = 100
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "D104",
]
"apps.py" = [
    "D100",
    "D101",
]
"conftest.py" = [
    "D100",
]
"settings.py" = [
    "D100",
]
"test_*.py" = [
    "D100",
]

[build-system]
requires = [
    "pdm-pep517>=1.0.0",
]
build-backend = "pdm.pep517.api"
