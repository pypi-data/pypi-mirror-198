# generated by datamodel-codegen:
#   filename:  oscal_complete_schema.json
#   timestamp: 2023-03-16T10:33:58+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, Dict, List, Optional, Union

from pydantic import AnyUrl, EmailStr, Extra, Field
from pydantic import BaseModel as PydanticBaseModel


class BaseModel(PydanticBaseModel):
    class Config:
        allow_population_by_field_name = True


class Guideline(BaseModel):
    class Config:
        extra = Extra.forbid

    prose: Annotated[
        str,
        Field(
            description="Prose permits multiple paragraphs, lists, tables etc.",
            title="Guideline Text",
        ),
    ]


class ParameterValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A parameter value or set of values.",
            regex="^\\S(.*\\S)?$",
            title="Parameter Value",
        ),
    ]


class ParameterCardinality(Enum):
    one = "one"
    one_or_more = "one-or-more"


class Selection(BaseModel):
    class Config:
        extra = Extra.forbid

    how_many: Annotated[
        Optional[ParameterCardinality],
        Field(
            alias="how-many",
            description="Describes the number of selections that must occur. Without this setting, only one value should be assumed to be permitted.",
            title="Parameter Cardinality",
        ),
    ] = None
    choice: Annotated[Optional[List[str]], Field(min_items=1)] = None


class IncludeAll(BaseModel):
    pass

    class Config:
        extra = Extra.forbid


class LocationURL(BaseModel):
    __root__: Annotated[
        AnyUrl,
        Field(
            description="The uniform resource locator (URL) for a web site or Internet presence associated with the location.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Location URL",
        ),
    ]


class LocationReference(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A machine-oriented identifier reference to a location defined in the metadata section of this or another OSCAL instance. The UUID of the location in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Location Reference",
        ),
    ]


class PartyType(Enum):
    person = "person"
    organization = "organization"


class PartyExternalIdentifier(BaseModel):
    class Config:
        extra = Extra.forbid

    scheme: Annotated[
        AnyUrl,
        Field(
            description="Indicates the type of external identifier.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="External Identifier Schema",
        ),
    ]
    id: str


class OrganizationalAffiliation(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A machine-oriented identifier reference to another party (person or organization) that this subject is associated with. The UUID of the party in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Organizational Affiliation",
        ),
    ]


class PartyReference(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A machine-oriented identifier reference to another party defined in metadata. The UUID of the party in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Party Reference",
        ),
    ]


class RoleIdentifierReference(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A human-oriented identifier reference to roles served by the user.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Role Identifier Reference",
        ),
    ]


class Base64(BaseModel):
    class Config:
        extra = Extra.forbid

    filename: Annotated[
        Optional[str],
        Field(
            description="Name of the file before it was encoded as Base64 to be embedded in a resource. This is the name that will be assigned to the file when the file is decoded.",
            title="File Name",
        ),
    ] = None
    media_type: Annotated[
        Optional[str],
        Field(
            alias="media-type",
            description="Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.",
            regex="^\\S(.*\\S)?$",
            title="Media Type",
        ),
    ] = None
    value: str


class Link(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URL reference to a resource.",
            title="Hypertext Reference",
        ),
    ]
    rel: Annotated[
        Optional[str],
        Field(
            description="Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Relation",
        ),
    ] = None
    media_type: Annotated[
        Optional[str],
        Field(
            alias="media-type",
            description="Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.",
            regex="^\\S(.*\\S)?$",
            title="Media Type",
        ),
    ] = None
    text: Annotated[
        Optional[str],
        Field(
            description="A textual label to associate with the link, which may be used for presentation in a tool.",
            title="Link Text",
        ),
    ] = None


class Hash(BaseModel):
    class Config:
        extra = Extra.forbid

    algorithm: Annotated[
        str,
        Field(
            description="Method by which a hash is derived",
            regex="^\\S(.*\\S)?$",
            title="Hash algorithm",
        ),
    ]
    value: str


class Remarks(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Additional commentary on the containing object.",
            title="Remarks",
        ),
    ]


class PublicationTimestamp(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description="The date and time the document was published. The date-time value must be formatted according to RFC 3339 with full time and time zone included.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Publication Timestamp",
        ),
    ]


class LastModifiedTimestamp(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description="The date and time the document was last modified. The date-time value must be formatted according to RFC 3339 with full time and time zone included.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Last Modified Timestamp",
        ),
    ]


class DocumentVersion(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A string used to distinguish the current version of the document from other previous (and future) versions.",
            regex="^\\S(.*\\S)?$",
            title="Document Version",
        ),
    ]


class OSCALVersion(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The OSCAL model version the document was authored against.",
            regex="^\\S(.*\\S)?$",
            title="OSCAL version",
        ),
    ]


class EmailAddress(BaseModel):
    __root__: Annotated[
        EmailStr,
        Field(
            description="An email address as defined by RFC 5322 Section 3.4.1.",
            # regex="^.+@.+$",
            title="Email Address",
        ),
    ]


class TelephoneNumber(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Annotated[
        Optional[str],
        Field(
            description="Indicates the type of phone number.",
            regex="^\\S(.*\\S)?$",
            title="type flag",
        ),
    ] = None
    number: str


class AddressLine(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A single line of an address.",
            regex="^\\S(.*\\S)?$",
            title="Address line",
        ),
    ]


class DocumentIdentifier(BaseModel):
    class Config:
        extra = Extra.forbid

    scheme: Annotated[
        Optional[AnyUrl],
        Field(
            description="Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Document Identification Scheme",
        ),
    ] = None
    identifier: str


class CombinationMethod(Enum):
    use_first = "use-first"
    merge = "merge"
    keep = "keep"


class CombinationRule(BaseModel):
    class Config:
        extra = Extra.forbid

    method: Annotated[
        Optional[CombinationMethod],
        Field(
            description="How clashing controls should be handled",
            title="Combination method",
        ),
    ] = None


class Order(Enum):
    keep = "keep"
    ascending = "ascending"
    descending = "descending"


class IncludeContainedControlsWithControl(Enum):
    yes = "yes"
    no = "no"


class MatchControlsByIdentifier(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Match Controls by Identifier",
        ),
    ]


class MatchControlsByPattern(BaseModel):
    class Config:
        extra = Extra.forbid

    pattern: Annotated[
        Optional[str],
        Field(
            description="A glob expression matching the IDs of one or more controls to be selected.",
            regex="^\\S(.*\\S)?$",
            title="Pattern",
        ),
    ] = None


class Call(BaseModel):
    class Config:
        extra = Extra.forbid

    with_child_controls: Annotated[
        Optional[IncludeContainedControlsWithControl],
        Field(
            alias="with-child-controls",
            description="When a control is included, whether its child (dependent) controls are also included.",
            title="Include contained controls with control",
        ),
    ] = None
    with_ids: Annotated[
        Optional[List[MatchControlsByIdentifier]], Field(alias="with-ids", min_items=1)
    ] = None
    matching: Annotated[Optional[List[MatchControlsByPattern]], Field(min_items=1)] = None


class Removal(BaseModel):
    class Config:
        extra = Extra.forbid

    by_name: Annotated[
        Optional[str],
        Field(
            alias="by-name",
            description="Identify items to remove by matching their assigned name",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Reference by (assigned) name",
        ),
    ] = None
    by_class: Annotated[
        Optional[str],
        Field(
            alias="by-class",
            description="Identify items to remove by matching their class.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Reference by class",
        ),
    ] = None
    by_id: Annotated[
        Optional[str],
        Field(
            alias="by-id",
            description="Identify items to remove indicated by their id.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Reference by ID",
        ),
    ] = None
    by_item_name: Annotated[
        Optional[str],
        Field(
            alias="by-item-name",
            description="Identify items to remove by the name of the item's information element name, e.g. title or prop",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Item Name Reference",
        ),
    ] = None
    by_ns: Annotated[
        Optional[str],
        Field(
            alias="by-ns",
            description="Identify items to remove by the item's ns, which is the namespace associated with a part, or prop.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Item Namespace Reference",
        ),
    ] = None


class Position(Enum):
    before = "before"
    after = "after"
    starting = "starting"
    ending = "ending"


class ImportComponentDefinition(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A link to a resource that defines a set of components and/or capabilities to import into this collection.",
            title="Hyperlink Reference",
        ),
    ]


class IncorporatesComponent(BaseModel):
    class Config:
        extra = Extra.forbid

    component_uuid: Annotated[
        str,
        Field(
            alias="component-uuid",
            description="A machine-oriented identifier reference to a component.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Reference",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A description of the component, including information about its function.",
            title="Component Description",
        ),
    ]


class State(Enum):
    under_development = "under-development"
    operational = "operational"
    disposition = "disposition"
    other = "other"


class Status(BaseModel):
    class Config:
        extra = Extra.forbid

    state: Annotated[State, Field(description="The operational status.", title="State")]
    remarks: Optional[Remarks] = None


class Transport(Enum):
    TCP = "TCP"
    UDP = "UDP"


class PortRange(BaseModel):
    class Config:
        extra = Extra.forbid

    start: Annotated[
        Optional[int],
        Field(
            description="Indicates the starting port number in a port range",
            ge=0,
            multiple_of=1.0,
            title="Start",
        ),
    ] = None
    end: Annotated[
        Optional[int],
        Field(
            description="Indicates the ending port number in a port range",
            ge=0,
            multiple_of=1.0,
            title="End",
        ),
    ] = None
    transport: Annotated[
        Optional[Transport],
        Field(description="Indicates the transport type.", title="Transport"),
    ] = None


class ImplementationStatus(BaseModel):
    class Config:
        extra = Extra.forbid

    state: Annotated[
        str,
        Field(
            description="Identifies the implementation status of the control or control objective.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Implementation State",
        ),
    ]
    remarks: Optional[Remarks] = None


class FunctionsPerformed(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Describes a function performed for a given authorized privilege by this user class.",
            regex="^\\S(.*\\S)?$",
            title="Functions Performed",
        ),
    ]


class SetParameterValue(BaseModel):
    class Config:
        extra = Extra.forbid

    param_id: Annotated[
        str,
        Field(
            alias="param-id",
            description="A human-oriented reference to a parameter within a control, who's catalog has been imported into the current implementation context.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter ID",
        ),
    ]
    values: Annotated[List[ParameterValue], Field(min_items=1)]
    remarks: Optional[Remarks] = None


class SystemIdentification(BaseModel):
    class Config:
        extra = Extra.forbid

    identifier_type: Annotated[
        Optional[AnyUrl],
        Field(
            alias="identifier-type",
            description="Identifies the identification system from which the provided identifier was assigned.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Identification System Type",
        ),
    ] = None
    id: str


class ImportProfile(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URL reference to the profile or catalog to use as the system's control baseline.",
            title="Profile Reference",
        ),
    ]
    remarks: Optional[Remarks] = None


class InformationTypeSystematizedIdentifier(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A human-oriented, globally unique identifier qualified by the given identification system used, such as NIST SP 800-60. This identifier has cross-instance scope and can be used to reference this system elsewhere in this or other OSCAL instances. This id should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^\\S(.*\\S)?$",
            title="Information Type Systematized Identifier",
        ),
    ]


class InformationTypeCategorization(BaseModel):
    class Config:
        extra = Extra.forbid

    system: Annotated[
        AnyUrl,
        Field(
            description="Specifies the information type identification system used.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Information Type Identification System",
        ),
    ]
    information_type_ids: Annotated[
        Optional[List[InformationTypeSystematizedIdentifier]],
        Field(alias="information-type-ids", min_items=1),
    ] = None


class BaseLevelConfidentialityIntegrityOrAvailability(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The prescribed base (Confidentiality, Integrity, or Availability) security impact level.",
            regex="^\\S(.*\\S)?$",
            title="Base Level (Confidentiality, Integrity, or Availability)",
        ),
    ]


class SelectedLevelConfidentialityIntegrityOrAvailability(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The selected (Confidentiality, Integrity, or Availability) security impact level.",
            regex="^\\S(.*\\S)?$",
            title="Selected Level (Confidentiality, Integrity, or Availability)",
        ),
    ]


class AdjustmentJustification(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="If the selected security level is different from the base security level, this contains the justification for the change.",
            title="Adjustment Justification",
        ),
    ]


class SecurityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    security_objective_confidentiality: Annotated[
        str,
        Field(
            alias="security-objective-confidentiality",
            description="A target-level of confidentiality for the system, based on the sensitivity of information within the system.",
            regex="^\\S(.*\\S)?$",
            title="Security Objective: Confidentiality",
        ),
    ]
    security_objective_integrity: Annotated[
        str,
        Field(
            alias="security-objective-integrity",
            description="A target-level of integrity for the system, based on the sensitivity of information within the system.",
            regex="^\\S(.*\\S)?$",
            title="Security Objective: Integrity",
        ),
    ]
    security_objective_availability: Annotated[
        str,
        Field(
            alias="security-objective-availability",
            description="A target-level of availability for the system, based on the sensitivity of information within the system.",
            regex="^\\S(.*\\S)?$",
            title="Security Objective: Availability",
        ),
    ]


class State1(Enum):
    operational = "operational"
    under_development = "under-development"
    under_major_modification = "under-major-modification"
    disposition = "disposition"
    other = "other"


class Status1(BaseModel):
    class Config:
        extra = Extra.forbid

    state: Annotated[State1, Field(description="The current operating status.", title="State")]
    remarks: Optional[Remarks] = None


class SystemAuthorizationDate(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The date the system received its authorization.",
            regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))(Z|[+-][0-9]{2}:[0-9]{2})?$",
            title="System Authorization Date",
        ),
    ]


class ImportSystemSecurityPlan(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URL reference to the system security plan for the system being assessed.",
            title="System Security Plan Reference",
        ),
    ]
    remarks: Optional[Remarks] = None


class OnDateCondition(BaseModel):
    class Config:
        extra = Extra.forbid

    date: Annotated[
        datetime,
        Field(
            description="The task must occur on the specified date.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="On Date Condition",
        ),
    ]


class OnDateRangeCondition(BaseModel):
    class Config:
        extra = Extra.forbid

    start: Annotated[
        datetime,
        Field(
            description="The task must occur on or after the specified date.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Start Date Condition",
        ),
    ]
    end: Annotated[
        datetime,
        Field(
            description="The task must occur on or before the specified date.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="End Date Condition",
        ),
    ]


class TimeUnit(Enum):
    seconds = "seconds"
    minutes = "minutes"
    hours = "hours"
    days = "days"
    months = "months"
    years = "years"


class FrequencyCondition(BaseModel):
    class Config:
        extra = Extra.forbid

    period: Annotated[
        int,
        Field(
            description="The task must occur after the specified period has elapsed.",
            ge=1,
            multiple_of=1.0,
            title="Period",
        ),
    ]
    unit: Annotated[
        TimeUnit,
        Field(description="The unit of time for the period.", title="Time Unit"),
    ]


class EventTiming(BaseModel):
    class Config:
        extra = Extra.forbid

    on_date: Annotated[
        Optional[OnDateCondition],
        Field(
            alias="on-date",
            description="The task is intended to occur on the specified date.",
            title="On Date Condition",
        ),
    ] = None
    within_date_range: Annotated[
        Optional[OnDateRangeCondition],
        Field(
            alias="within-date-range",
            description="The task is intended to occur within the specified date range.",
            title="On Date Range Condition",
        ),
    ] = None
    at_frequency: Annotated[
        Optional[FrequencyCondition],
        Field(
            alias="at-frequency",
            description="The task is intended to occur at the specified frequency.",
            title="Frequency Condition",
        ),
    ] = None


class TaskDependency(BaseModel):
    class Config:
        extra = Extra.forbid

    task_uuid: Annotated[
        str,
        Field(
            alias="task-uuid",
            description="A machine-oriented identifier reference to a unique task.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Task Universally Unique Identifier Reference",
        ),
    ]
    remarks: Optional[Remarks] = None


class IncludeSpecificStatements(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Used to constrain the selection to only specificity identified statements.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Include Specific Statements",
        ),
    ]


class SelectControl(BaseModel):
    class Config:
        extra = Extra.forbid

    control_id: Annotated[
        str,
        Field(
            alias="control-id",
            description="A human-oriented identifier reference to a control with a corresponding id value. When referencing an externally defined control, the Control Identifier Reference must be used in the context of the external / imported OSCAL instance (e.g., uri-reference).",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Identifier Reference",
        ),
    ]
    statement_ids: Annotated[
        Optional[List[IncludeSpecificStatements]],
        Field(alias="statement-ids", min_items=1),
    ] = None


class SelectObjective(BaseModel):
    class Config:
        extra = Extra.forbid

    objective_id: Annotated[
        str,
        Field(
            alias="objective-id",
            description="Points to an assessment objective.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Objective ID",
        ),
    ]


class AssessmentSubjectSource(BaseModel):
    class Config:
        extra = Extra.forbid

    task_uuid: Annotated[
        str,
        Field(
            alias="task-uuid",
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference (in this or other OSCAL instances) an assessment activity to be performed as part of the event. The locally defined UUID of the task can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Task Universally Unique Identifier",
        ),
    ]


class FindingTargetType(Enum):
    statement_id = "statement-id"
    objective_id = "objective-id"


class ObjectiveStatusState(Enum):
    satisfied = "satisfied"
    not_satisfied = "not-satisfied"


class ObjectiveStatus1(BaseModel):
    class Config:
        extra = Extra.forbid

    state: Annotated[
        ObjectiveStatusState,
        Field(
            description="An indication as to whether the objective is satisfied or not.",
            title="Objective Status State",
        ),
    ]
    reason: Annotated[
        Optional[str],
        Field(
            description="The reason the objective was given it's status.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Objective Status Reason",
        ),
    ] = None
    remarks: Optional[Remarks] = None


class ObservationMethod(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Identifies how the observation was made.",
            regex="^\\S(.*\\S)?$",
            title="Observation Method",
        ),
    ]


class ObservationType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Identifies the nature of the observation. More than one may be used to further qualify and enable filtering.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Observation Type",
        ),
    ]


class ActorType(Enum):
    tool = "tool"
    assessment_platform = "assessment-platform"
    party = "party"


class ThreatID(BaseModel):
    class Config:
        extra = Extra.forbid

    system: Annotated[
        AnyUrl,
        Field(
            description="Specifies the source of the threat information.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Threat Type Identification System",
        ),
    ]
    href: Annotated[
        Optional[str],
        Field(
            description="An optional location for the threat data, from which this ID originates.",
            title="Threat Information Resource Reference",
        ),
    ] = None
    id: str


class RelatedObservation(BaseModel):
    class Config:
        extra = Extra.forbid

    observation_uuid: Annotated[
        str,
        Field(
            alias="observation-uuid",
            description="A machine-oriented identifier reference to an observation defined in the list of observations.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Observation Universally Unique Identifier Reference",
        ),
    ]


class LoggedBy(BaseModel):
    class Config:
        extra = Extra.forbid

    party_uuid: Annotated[
        str,
        Field(
            alias="party-uuid",
            description="A machine-oriented identifier reference to the party who is making the log entry.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Party UUID Reference",
        ),
    ]
    role_id: Annotated[
        Optional[str],
        Field(
            alias="role-id",
            description="A point to the role-id of the role in which the party is making the log entry.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Actor Role",
        ),
    ] = None


class RiskStatus(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Describes the status of the associated risk.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Risk Status",
        ),
    ]


class AssociatedRisk(BaseModel):
    class Config:
        extra = Extra.forbid

    risk_uuid: Annotated[
        str,
        Field(
            alias="risk-uuid",
            description="A machine-oriented identifier reference to a risk defined in the list of risks.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Risk Universally Unique Identifier Reference",
        ),
    ]


class ImportAssessmentPlan(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URL reference to the assessment plan governing the assessment activities.",
            title="Assessment Plan Reference",
        ),
    ]
    remarks: Optional[Remarks] = None


class ConstraintTest(BaseModel):
    class Config:
        extra = Extra.forbid

    expression: Annotated[
        str,
        Field(
            description="A formal (executable) expression of a constraint",
            regex="^\\S(.*\\S)?$",
            title="Constraint test",
        ),
    ]
    remarks: Optional[Remarks] = None


class Constraint(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        Optional[str],
        Field(
            description="A textual summary of the constraint to be applied.",
            title="Constraint Description",
        ),
    ] = None
    tests: Annotated[Optional[List[ConstraintTest]], Field(min_items=1)] = None


class ResourceLink(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URI reference to a resource.",
            title="Hypertext Reference",
        ),
    ]
    media_type: Annotated[
        Optional[str],
        Field(
            alias="media-type",
            description="Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.",
            regex="^\\S(.*\\S)?$",
            title="Media Type",
        ),
    ] = None
    hashes: Annotated[Optional[List[Hash]], Field(min_items=1)] = None


class Property(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Annotated[
        str,
        Field(
            description="A textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Property Name",
        ),
    ]
    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined property elsewhere in this or other OSCAL instances. This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Property Universally Unique Identifier",
        ),
    ] = None
    ns: Annotated[
        Optional[AnyUrl],
        Field(
            description="A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Property Namespace",
        ),
    ] = None
    value: Annotated[
        str,
        Field(
            description="Indicates the value of the attribute, characteristic, or quality.",
            regex="^\\S(.*\\S)?$",
            title="Property Value",
        ),
    ]
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Property Class",
        ),
    ] = None
    remarks: Optional[Remarks] = None


class ResponsibleParty(BaseModel):
    class Config:
        extra = Extra.forbid

    role_id: Annotated[
        str,
        Field(
            alias="role-id",
            description="A human-oriented identifier reference to roles served by the user.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Responsible Role",
        ),
    ]
    party_uuids: Annotated[List[PartyReference], Field(alias="party-uuids", min_items=1)]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class ResponsibleRole(BaseModel):
    class Config:
        extra = Extra.forbid

    role_id: Annotated[
        str,
        Field(
            alias="role-id",
            description="A human-oriented identifier reference to roles responsible for the business function.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Responsible Role ID",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    party_uuids: Annotated[
        Optional[List[PartyReference]], Field(alias="party-uuids", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Address(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Annotated[
        Optional[str],
        Field(
            description="Indicates the type of address.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Address Type",
        ),
    ] = None
    addr_lines: Annotated[
        Optional[List[AddressLine]], Field(alias="addr-lines", min_items=1)
    ] = None
    city: Annotated[
        Optional[str],
        Field(
            description="City, town or geographical region for the mailing address.",
            regex="^\\S(.*\\S)?$",
            title="City",
        ),
    ] = None
    state: Annotated[
        Optional[str],
        Field(
            description="State, province or analogous geographical region for mailing address",
            regex="^\\S(.*\\S)?$",
            title="State",
        ),
    ] = None
    postal_code: Annotated[
        Optional[str],
        Field(
            alias="postal-code",
            description="Postal or ZIP code for mailing address",
            regex="^\\S(.*\\S)?$",
            title="Postal Code",
        ),
    ] = None
    country: Annotated[
        Optional[str],
        Field(
            description="The ISO 3166-1 alpha-2 country code for the mailing address.",
            regex="^\\S(.*\\S)?$",
            title="Country Code",
        ),
    ] = None


class ImportResource(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URL reference to the base catalog or profile that this profile is tailoring.",
            title="Catalog or Profile Reference",
        ),
    ]
    include_all: Annotated[Optional[IncludeAll], Field(alias="include-all")] = None
    include_controls: Annotated[
        Optional[List[Call]], Field(alias="include-controls", min_items=1)
    ] = None
    exclude_controls: Annotated[
        Optional[List[Call]], Field(alias="exclude-controls", min_items=1)
    ] = None


class ParameterSetting(BaseModel):
    class Config:
        extra = Extra.forbid

    param_id: Annotated[
        str,
        Field(
            alias="param-id",
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined parameter elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, this identifier must be referenced in the context of the containing resource (e.g., import-profile). This id should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter ID",
        ),
    ]
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a characterization of the parameter.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter Class",
        ),
    ] = None
    depends_on: Annotated[
        Optional[str],
        Field(
            alias="depends-on",
            description="**(deprecated)** Another parameter invoking this one. This construct has been deprecated and should not be used.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Depends on",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    label: Annotated[
        Optional[str],
        Field(
            description="A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.",
            title="Parameter Label",
        ),
    ] = None
    usage: Annotated[
        Optional[str],
        Field(
            description="Describes the purpose and use of a parameter",
            title="Parameter Usage Description",
        ),
    ] = None
    constraints: Annotated[Optional[List[Constraint]], Field(min_items=1)] = None
    guidelines: Annotated[Optional[List[Guideline]], Field(min_items=1)] = None
    values: Annotated[Optional[List[ParameterValue]], Field(min_items=1)] = None
    select: Optional[Selection] = None


class SelectControls(BaseModel):
    class Config:
        extra = Extra.forbid

    order: Annotated[
        Optional[Order],
        Field(
            description="A designation of how a selection of controls in a profile is to be ordered.",
            title="Order",
        ),
    ] = None
    include_all: Annotated[Optional[IncludeAll], Field(alias="include-all")] = None
    include_controls: Annotated[
        Optional[List[Call]], Field(alias="include-controls", min_items=1)
    ] = None
    exclude_controls: Annotated[
        Optional[List[Call]], Field(alias="exclude-controls", min_items=1)
    ] = None


class ControlStatementImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    statement_id: Annotated[
        str,
        Field(
            alias="statement-id",
            description="A human-oriented identifier reference to a control statement.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Statement Reference",
        ),
    ]
    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this control statement elsewhere in this or other OSCAL instances. The UUID of the control statement in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Control Statement Reference Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A summary of how the containing control statement is implemented by the component or capability.",
            title="Statement Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ServiceProtocolInformation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this service protocol information elsewhere in this or other OSCAL instances. The locally defined UUID of the service protocol can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Service Protocol Information Universally Unique Identifier",
        ),
    ] = None
    name: Annotated[
        str,
        Field(
            description='The common name of the protocol, which should be the appropriate "service name" from the IANA Service Name and Transport Protocol Port Number Registry.',
            regex="^\\S(.*\\S)?$",
            title="Protocol Name",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A human readable name for the protocol (e.g., Transport Layer Security).",
            title="Protocol Title",
        ),
    ] = None
    port_ranges: Annotated[
        Optional[List[PortRange]], Field(alias="port-ranges", min_items=1)
    ] = None


class Privilege(BaseModel):
    class Config:
        extra = Extra.forbid

    title: Annotated[
        str,
        Field(
            description="A human readable name for the privilege.",
            title="Privilege Title",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(
            description="A summary of the privilege's purpose within the system.",
            title="Privilege Description",
        ),
    ] = None
    functions_performed: Annotated[
        List[FunctionsPerformed], Field(alias="functions-performed", min_items=1)
    ]


class ImplementedComponent(BaseModel):
    class Config:
        extra = Extra.forbid

    component_uuid: Annotated[
        str,
        Field(
            alias="component-uuid",
            description="A machine-oriented identifier reference to a component that is implemented as part of an inventory item.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Universally Unique Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class InventoryItem(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this inventory item elsewhere in this or other OSCAL instances. The locally defined UUID of the inventory item can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Inventory Item Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A summary of the inventory item stating its purpose within the system.",
            title="Inventory Item Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    implemented_components: Annotated[
        Optional[List[ImplementedComponent]],
        Field(alias="implemented-components", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class ConfidentialityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    base: BaseLevelConfidentialityIntegrityOrAvailability
    selected: Optional[SelectedLevelConfidentialityIntegrityOrAvailability] = None
    adjustment_justification: Annotated[
        Optional[AdjustmentJustification], Field(alias="adjustment-justification")
    ] = None


class IntegrityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    base: BaseLevelConfidentialityIntegrityOrAvailability
    selected: Optional[SelectedLevelConfidentialityIntegrityOrAvailability] = None
    adjustment_justification: Annotated[
        Optional[AdjustmentJustification], Field(alias="adjustment-justification")
    ] = None


class AvailabilityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    base: BaseLevelConfidentialityIntegrityOrAvailability
    selected: Optional[SelectedLevelConfidentialityIntegrityOrAvailability] = None
    adjustment_justification: Annotated[
        Optional[AdjustmentJustification], Field(alias="adjustment-justification")
    ] = None


class InformationType(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this information type elsewhere in this or other OSCAL instances. The locally defined UUID of the information type can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Information Type Universally Unique Identifier",
        ),
    ] = None
    title: Annotated[
        str,
        Field(
            description="A human readable name for the information type. This title should be meaningful within the context of the system.",
            title="title field",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A summary of how this information type is used within the system.",
            title="Information Type Description",
        ),
    ]
    categorizations: Annotated[
        Optional[List[InformationTypeCategorization]], Field(min_items=1)
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    confidentiality_impact: Annotated[
        ConfidentialityImpactLevel,
        Field(
            alias="confidentiality-impact",
            description="The expected level of impact resulting from the unauthorized disclosure of the described information.",
            title="Confidentiality Impact Level",
        ),
    ]
    integrity_impact: Annotated[
        IntegrityImpactLevel,
        Field(
            alias="integrity-impact",
            description="The expected level of impact resulting from the unauthorized modification of the described information.",
            title="Integrity Impact Level",
        ),
    ]
    availability_impact: Annotated[
        AvailabilityImpactLevel,
        Field(
            alias="availability-impact",
            description="The expected level of impact resulting from the disruption of access to or use of the described information or the information system.",
            title="Availability Impact Level",
        ),
    ]


class SystemInformation(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    information_types: Annotated[
        List[InformationType], Field(alias="information-types", min_items=1)
    ]


class Diagram(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this diagram elsewhere in this or other OSCAL instances. The locally defined UUID of the diagram can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Diagram ID",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(description="A summary of the diagram.", title="Diagram Description"),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    caption: Annotated[
        Optional[str],
        Field(description="A brief caption to annotate the diagram.", title="Caption"),
    ] = None
    remarks: Optional[Remarks] = None


class NetworkArchitecture(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A summary of the system's network architecture.",
            title="Network Architecture Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    diagrams: Annotated[Optional[List[Diagram]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class DataFlow(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A summary of the system's data flow.",
            title="Data Flow Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    diagrams: Annotated[Optional[List[Diagram]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class LeveragedAuthorization(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope and can be used to reference this leveraged authorization elsewhere in this or other OSCAL instances. The locally defined UUID of the leveraged authorization can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Leveraged Authorization Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        str,
        Field(
            description="A human readable name for the leveraged authorization in the context of the system.",
            title="title field",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    party_uuid: Annotated[
        str,
        Field(
            alias="party-uuid",
            description="A machine-oriented identifier reference to the party that manages the leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="party-uuid field",
        ),
    ]
    date_authorized: Annotated[SystemAuthorizationDate, Field(alias="date-authorized")]
    remarks: Optional[Remarks] = None


class ProvidedControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this provided entry elsewhere in this or other OSCAL instances. The locally defined UUID of the provided entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Provided Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of the control or control statement implementation that can be provided to another system leveraging this system.",
            title="Provided Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ControlImplementationResponsibility(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this responsibility elsewhere in this or other OSCAL instances. The locally defined UUID of the responsibility can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Responsibility Universally Unique Identifier",
        ),
    ]
    provided_uuid: Annotated[
        Optional[str],
        Field(
            alias="provided-uuid",
            description="A machine-oriented identifier reference to an inherited control implementation that a leveraging system is inheriting from a leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Provided UUID",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of the control or control statement implementation that a leveraging system must implement to satisfy the control provided by a leveraged system.",
            title="Control Implementation Responsibility Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Export(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        Optional[str],
        Field(
            description="An implementation statement that describes the aspects of the control or control statement implementation that can be available to another system leveraging this system.",
            title="Control Implementation Export Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    provided: Annotated[Optional[List[ProvidedControlImplementation]], Field(min_items=1)] = None
    responsibilities: Annotated[
        Optional[List[ControlImplementationResponsibility]], Field(min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class InheritedControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this inherited entry elsewhere in this or other OSCAL instances. The locally defined UUID of the inherited control implementation can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Inherited Universally Unique Identifier",
        ),
    ]
    provided_uuid: Annotated[
        Optional[str],
        Field(
            alias="provided-uuid",
            description="A machine-oriented identifier reference to an inherited control implementation that a leveraging system is inheriting from a leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Provided UUID",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is inheriting from a leveraged system.",
            title="Inherited Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None


class SatisfiedControlImplementationResponsibility(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this satisfied control implementation entry elsewhere in this or other OSCAL instances. The locally defined UUID of the control implementation can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Satisfied Universally Unique Identifier",
        ),
    ]
    responsibility_uuid: Annotated[
        Optional[str],
        Field(
            alias="responsibility-uuid",
            description="A machine-oriented identifier reference to a control implementation that satisfies a responsibility imposed by a leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Responsibility UUID",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is implementing based on a requirement from a leveraged system.",
            title="Satisfied Control Implementation Responsibility Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ComponentControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    component_uuid: Annotated[
        str,
        Field(
            alias="component-uuid",
            description="A machine-oriented identifier reference to the component that is implemeting a given control.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Universally Unique Identifier Reference",
        ),
    ]
    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this by-component entry elsewhere in this or other OSCAL instances. The locally defined UUID of the by-component entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="By-Component Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes how a control or a control statement is implemented within the referenced system component.",
            title="Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    implementation_status: Annotated[
        Optional[ImplementationStatus], Field(alias="implementation-status")
    ] = None
    export: Annotated[
        Optional[Export],
        Field(
            description="Identifies content intended for external consumption, such as with leveraged organizations.",
            title="Export",
        ),
    ] = None
    inherited: Annotated[Optional[List[InheritedControlImplementation]], Field(min_items=1)] = None
    satisfied: Annotated[
        Optional[List[SatisfiedControlImplementationResponsibility]], Field(min_items=1)
    ] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class AssessedControls(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of in-scope controls specified for assessment.",
            title="Assessed Controls Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    include_all: Annotated[Optional[IncludeAll], Field(alias="include-all")] = None
    include_controls: Annotated[
        Optional[List[SelectControl]], Field(alias="include-controls", min_items=1)
    ] = None
    exclude_controls: Annotated[
        Optional[List[SelectControl]], Field(alias="exclude-controls", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ReferencedControlObjectives(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of this collection of control objectives.",
            title="Control Objectives Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    include_all: Annotated[Optional[IncludeAll], Field(alias="include-all")] = None
    include_objectives: Annotated[
        Optional[List[SelectObjective]], Field(alias="include-objectives", min_items=1)
    ] = None
    exclude_objectives: Annotated[
        Optional[List[SelectObjective]], Field(alias="exclude-objectives", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ReviewedControlsAndControlObjectives(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of control objectives.",
            title="Control Objective Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    control_selections: Annotated[
        List[AssessedControls], Field(alias="control-selections", min_items=1)
    ]
    control_objective_selections: Annotated[
        Optional[List[ReferencedControlObjectives]],
        Field(alias="control-objective-selections", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class AssessmentSubjectPlaceholder(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier for a set of assessment subjects that will be identified by a task or an activity that is part of a task. The locally defined UUID of the assessment subject placeholder can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Subject Placeholder Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of intent of this assessment subject placeholder.",
            title="Assessment Subject Placeholder Description",
        ),
    ] = None
    sources: Annotated[List[AssessmentSubjectSource], Field(min_items=1)]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class SelectAssessmentSubject(BaseModel):
    class Config:
        extra = Extra.forbid

    subject_uuid: Annotated[
        str,
        Field(
            alias="subject-uuid",
            description="A machine-oriented identifier reference to a component, inventory-item, location, party, user, or resource using it's UUID.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Subject Universally Unique Identifier Reference",
        ),
    ]
    type: Annotated[
        str,
        Field(
            description="Used to indicate the type of object pointed to by the uuid-ref within a subject.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Subject Universally Unique Identifier Reference Type",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class IdentifiesTheSubject(BaseModel):
    class Config:
        extra = Extra.forbid

    subject_uuid: Annotated[
        str,
        Field(
            alias="subject-uuid",
            description="A machine-oriented identifier reference to a component, inventory-item, location, party, user, or resource using it's UUID.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Subject Universally Unique Identifier Reference",
        ),
    ]
    type: Annotated[
        str,
        Field(
            description="Used to indicate the type of object pointed to by the uuid-ref within a subject.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Subject Universally Unique Identifier Reference Type",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="The title or name for the referenced subject.",
            title="Subject Reference Title",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class UsesComponent(BaseModel):
    class Config:
        extra = Extra.forbid

    component_uuid: Annotated[
        str,
        Field(
            alias="component-uuid",
            description="A machine-oriented identifier reference to a component that is implemented as part of an inventory item.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Universally Unique Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class AssessmentPlatform(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this assessment platform elsewhere in this or other OSCAL instances. The locally defined UUID of the assessment platform can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Platform Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="The title or name for the assessment platform.",
            title="Assessment Platform Title",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    uses_components: Annotated[
        Optional[List[UsesComponent]], Field(alias="uses-components", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ObjectiveStatus(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Annotated[
        FindingTargetType,
        Field(
            description="Identifies the type of the target.",
            title="Finding Target Type",
        ),
    ]
    target_id: Annotated[
        str,
        Field(
            alias="target-id",
            description="A machine-oriented identifier reference for a specific target qualified by the type.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Finding Target Identifier Reference",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="The title for this objective status.",
            title="Objective Status Title",
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of the assessor's conclusions regarding the degree to which an objective is satisfied.",
            title="Objective Status Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    status: Annotated[
        ObjectiveStatus1,
        Field(
            description="A determination of if the objective is satisfied or not within a given system.",
            title="Objective Status",
        ),
    ]
    implementation_status: Annotated[
        Optional[ImplementationStatus], Field(alias="implementation-status")
    ] = None
    remarks: Optional[Remarks] = None


class RelevantEvidence(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        Optional[str],
        Field(
            description="A resolvable URL reference to relevant evidence.",
            title="Relevant Evidence Reference",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this evidence.",
            title="Relevant Evidence Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class OriginatingActor(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Annotated[ActorType, Field(description="The kind of actor.", title="Actor Type")]
    actor_uuid: Annotated[
        str,
        Field(
            alias="actor-uuid",
            description="A machine-oriented identifier reference to the tool or person based on the associated type.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Actor Universally Unique Identifier Reference",
        ),
    ]
    role_id: Annotated[
        Optional[str],
        Field(
            alias="role-id",
            description="For a party, this can optionally be used to specify the role the actor was performing.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Actor Role",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None


class MitigatingFactor(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this mitigating factor elsewhere in this or other OSCAL instances. The locally defined UUID of the mitigating factor can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Mitigating Factor Universally Unique Identifier",
        ),
    ]
    implementation_uuid: Annotated[
        Optional[str],
        Field(
            alias="implementation-uuid",
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this implementation statement elsewhere in this or other OSCAL instancess. The locally defined UUID of the implementation statement can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Implementation UUID",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this mitigating factor.",
            title="Mitigating Factor Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    subjects: Annotated[Optional[List[IdentifiesTheSubject]], Field(min_items=1)] = None


class Facet(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Annotated[
        str,
        Field(
            description="The name of the risk metric within the specified system.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Facet Name",
        ),
    ]
    system: Annotated[
        AnyUrl,
        Field(
            description="Specifies the naming system under which this risk metric is organized, which allows for the same names to be used in different systems controlled by different parties. This avoids the potential of a name clash.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Naming System",
        ),
    ]
    value: Annotated[
        str,
        Field(
            description="Indicates the value of the facet.",
            regex="^\\S(.*\\S)?$",
            title="Facet Value",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class RequiredAsset(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this required asset elsewhere in this or other OSCAL instances. The locally defined UUID of the asset can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Required Universally Unique Identifier",
        ),
    ]
    subjects: Annotated[Optional[List[IdentifiesTheSubject]], Field(min_items=1)] = None
    title: Annotated[
        Optional[str],
        Field(
            description="The title for this required asset.",
            title="Title for Required Asset",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this required asset.",
            title="Description of Required Asset",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class AssessmentPart(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this part elsewhere in this or other OSCAL instances. The locally defined UUID of the part can be used to reference the data item locally or globally (e.g., in an ported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Part Identifier",
        ),
    ] = None
    name: Annotated[
        str,
        Field(
            description="A textual label that uniquely identifies the part's semantic type.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Name",
        ),
    ]
    ns: Annotated[
        Optional[AnyUrl],
        Field(
            description="A namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Part Namespace",
        ),
    ] = None
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the part's name. This can be used to further distinguish or discriminate between the semantics of multiple parts of the same control with the same name and ns.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Class",
        ),
    ] = None
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the part, which may be used by a tool for display and navigation.",
            title="Part Title",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    prose: Annotated[
        Optional[str],
        Field(
            description="Permits multiple paragraphs, lists, tables etc.",
            title="Part Text",
        ),
    ] = None
    parts: Optional[List[AssessmentPart]] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None


class AttestationStatements(BaseModel):
    class Config:
        extra = Extra.forbid

    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    parts: Annotated[List[AssessmentPart], Field(min_items=1)]


class Origin1(BaseModel):
    class Config:
        extra = Extra.forbid

    actors: Annotated[List[OriginatingActor], Field(min_items=1)]


class POAMItem(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with instance scope that can be used to reference this POA&M item entry in this OSCAL instance. This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="POA&M Item Universally Unique Identifier",
        ),
    ] = None
    title: Annotated[
        str,
        Field(
            description="The title or name for this POA&M item .",
            title="POA&M Item Title",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A human-readable description of POA&M item.",
            title="POA&M Item Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    origins: Annotated[Optional[List[Origin1]], Field(min_items=1)] = None
    related_observations: Annotated[
        Optional[List[RelatedObservation]],
        Field(alias="related-observations", min_items=1),
    ] = None
    related_risks: Annotated[
        Optional[List[AssociatedRisk]], Field(alias="related-risks", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Part(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        Optional[str],
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined part elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, this identifier must be referenced in the context of the containing resource (e.g., import-profile). This id should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Identifier",
        ),
    ] = None
    name: Annotated[
        str,
        Field(
            description="A textual label that uniquely identifies the part's semantic type.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Name",
        ),
    ]
    ns: Annotated[
        Optional[AnyUrl],
        Field(
            description="A namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Part Namespace",
        ),
    ] = None
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the part's name. This can be used to further distinguish or discriminate between the semantics of multiple parts of the same control with the same name and ns.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Class",
        ),
    ] = None
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the part, which may be used by a tool for display and navigation.",
            title="Part Title",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    prose: Annotated[
        Optional[str],
        Field(
            description="Permits multiple paragraphs, lists, tables etc.",
            title="Part Text",
        ),
    ] = None
    parts: Optional[List[Part]] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None


class Parameter(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        str,
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined parameter elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, this identifier must be referenced in the context of the containing resource (e.g., import-profile). This id should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter Identifier",
        ),
    ]
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a characterization of the parameter.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter Class",
        ),
    ] = None
    depends_on: Annotated[
        Optional[str],
        Field(
            alias="depends-on",
            description="**(deprecated)** Another parameter invoking this one. This construct has been deprecated and should not be used.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Depends on",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    label: Annotated[
        Optional[str],
        Field(
            description="A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.",
            title="Parameter Label",
        ),
    ] = None
    usage: Annotated[
        Optional[str],
        Field(
            description="Describes the purpose and use of a parameter",
            title="Parameter Usage Description",
        ),
    ] = None
    constraints: Annotated[Optional[List[Constraint]], Field(min_items=1)] = None
    guidelines: Annotated[Optional[List[Guideline]], Field(min_items=1)] = None
    values: Annotated[Optional[List[ParameterValue]], Field(min_items=1)] = None
    select: Optional[Selection] = None
    remarks: Optional[Remarks] = None


class RevisionHistoryEntry(BaseModel):
    class Config:
        extra = Extra.forbid

    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the document revision, which may be used by a tool for display and navigation.",
            title="Document Title",
        ),
    ] = None
    published: Optional[PublicationTimestamp] = None
    last_modified: Annotated[Optional[LastModifiedTimestamp], Field(alias="last-modified")] = None
    version: DocumentVersion
    oscal_version: Annotated[Optional[OSCALVersion], Field(alias="oscal-version")] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class Location(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined location elsewhere in this or other OSCAL instances. The locally defined UUID of the location can be used to reference the data item locally or globally (e.g., from an importing OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Location Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the location, which may be used by a tool for display and navigation.",
            title="Location Title",
        ),
    ] = None
    address: Address
    email_addresses: Annotated[
        Optional[List[EmailAddress]], Field(alias="email-addresses", min_items=1)
    ] = None
    telephone_numbers: Annotated[
        Optional[List[TelephoneNumber]], Field(alias="telephone-numbers", min_items=1)
    ] = None
    urls: Annotated[Optional[List[LocationURL]], Field(min_items=1)] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class PartyOrganizationOrPerson(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined party elsewhere in this or other OSCAL instances. The locally defined UUID of the party can be used to reference the data item locally or globally (e.g., from an importing OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Party Universally Unique Identifier",
        ),
    ]
    type: Annotated[
        PartyType,
        Field(
            description="A category describing the kind of party the object describes.",
            title="Party Type",
        ),
    ]
    name: Annotated[
        Optional[str],
        Field(
            description="The full name of the party. This is typically the legal name associated with the party.",
            regex="^\\S(.*\\S)?$",
            title="Party Name",
        ),
    ] = None
    short_name: Annotated[
        Optional[str],
        Field(
            alias="short-name",
            description="A short common name, abbreviation, or acronym for the party.",
            regex="^\\S(.*\\S)?$",
            title="Party Short Name",
        ),
    ] = None
    external_ids: Annotated[
        Optional[List[PartyExternalIdentifier]],
        Field(alias="external-ids", min_items=1),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    email_addresses: Annotated[
        Optional[List[EmailAddress]], Field(alias="email-addresses", min_items=1)
    ] = None
    telephone_numbers: Annotated[
        Optional[List[TelephoneNumber]], Field(alias="telephone-numbers", min_items=1)
    ] = None
    addresses: Annotated[Optional[List[Address]], Field(min_items=1)] = None
    location_uuids: Annotated[
        Optional[List[LocationReference]], Field(alias="location-uuids", min_items=1)
    ] = None
    member_of_organizations: Annotated[
        Optional[List[OrganizationalAffiliation]],
        Field(alias="member-of-organizations", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class Role(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        str,
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined role elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, the locally defined ID of the Role from the imported OSCAL instance must be referenced in the context of the containing resource (e.g., import, import-component-definition, import-profile, import-ssp or import-ap). This ID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Role Identifier",
        ),
    ]
    title: Annotated[
        str,
        Field(
            description="A name given to the role, which may be used by a tool for display and navigation.",
            title="Role Title",
        ),
    ]
    short_name: Annotated[
        Optional[str],
        Field(
            alias="short-name",
            description="A short common name, abbreviation, or acronym for the role.",
            regex="^\\S(.*\\S)?$",
            title="Role Short Name",
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A summary of the role's purpose and associated responsibilities.",
            title="Role Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class Citation(BaseModel):
    class Config:
        extra = Extra.forbid

    text: Annotated[str, Field(description="A line of citation text.", title="Citation Text")]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None


class Resource(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined resource elsewhere in this or other OSCAL instances. This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Resource Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the resource, which may be used by a tool for display and navigation.",
            title="Resource Title",
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A short summary of the resource used to indicate the purpose of the resource.",
            title="Resource Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    document_ids: Annotated[
        Optional[List[DocumentIdentifier]], Field(alias="document-ids", min_items=1)
    ] = None
    citation: Annotated[
        Optional[Citation],
        Field(
            description="A citation consisting of end note text and optional structured bibliographic data.",
            title="Citation",
        ),
    ] = None
    rlinks: Annotated[Optional[List[ResourceLink]], Field(min_items=1)] = None
    base64: Annotated[
        Optional[Base64],
        Field(
            description="The Base64 alphabet in RFC 2045 - aligned with XSD.",
            title="Base64",
        ),
    ] = None
    remarks: Optional[Remarks] = None


class BackMatter(BaseModel):
    class Config:
        extra = Extra.forbid

    resources: Annotated[Optional[List[Resource]], Field(min_items=1)] = None


class ControlGroup1(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        Optional[str],
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined group elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, this identifier must be referenced in the context of the containing resource (e.g., import-profile). This id should be assigned per-subject, which means it should be consistently used to identify the same group across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Group Identifier",
        ),
    ] = None
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the group.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Group Class",
        ),
    ] = None
    title: Annotated[
        str,
        Field(
            description="A name given to the group, which may be used by a tool for display and navigation.",
            title="Group Title",
        ),
    ]
    params: Annotated[Optional[List[Parameter]], Field(min_items=1)] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    parts: Annotated[Optional[List[Part]], Field(min_items=1)] = None
    groups: Optional[List[ControlGroup1]] = None
    insert_controls: Annotated[
        Optional[List[SelectControls]], Field(alias="insert-controls", min_items=1)
    ] = None


class Addition(BaseModel):
    class Config:
        extra = Extra.forbid

    position: Annotated[
        Optional[Position],
        Field(
            description="Where to add the new content with respect to the targeted element (beside it or inside it)",
            title="Position",
        ),
    ] = None
    by_id: Annotated[
        Optional[str],
        Field(
            alias="by-id",
            description="Target location of the addition.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Reference by ID",
        ),
    ] = None
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the control, which may be used by a tool for display and navigation.",
            title="Title Change",
        ),
    ] = None
    params: Annotated[Optional[List[Parameter]], Field(min_items=1)] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    parts: Annotated[Optional[List[Part]], Field(min_items=1)] = None


class ControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference a specific control implementation elsewhere in this or other OSCAL instances. The locally defined UUID of the control implementation can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance).This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Control Implementation Identifier",
        ),
    ]
    control_id: Annotated[
        str,
        Field(
            alias="control-id",
            description="A human-oriented identifier reference to a control with a corresponding id value. When referencing an externally defined control, the Control Identifier Reference must be used in the context of the external / imported OSCAL instance (e.g., uri-reference).",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Identifier Reference",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A suggestion for how the specified control may be implemented if the containing component or capability is instantiated in a system security plan.",
            title="Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    statements: Annotated[Optional[List[ControlStatementImplementation]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class Component1(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this component elsewhere in this or other OSCAL instances. The locally defined UUID of the component can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Identifier",
        ),
    ]
    type: Annotated[
        str,
        Field(
            description="A category describing the purpose of the component.",
            regex="^\\S(.*\\S)?$",
            title="Component Type",
        ),
    ]
    title: Annotated[
        str,
        Field(
            description="A human readable name for the system component.",
            title="Component Title",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A description of the component, including information about its function.",
            title="Component Description",
        ),
    ]
    purpose: Annotated[
        Optional[str],
        Field(
            description="A summary of the technological or business purpose of the component.",
            title="Purpose",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    status: Annotated[
        Status,
        Field(
            description="Describes the operational status of the system component.",
            title="Status",
        ),
    ]
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    protocols: Annotated[Optional[List[ServiceProtocolInformation]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class SystemUser(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this user class elsewhere in this or other OSCAL instances. The locally defined UUID of the system user can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="User Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the user, which may be used by a tool for display and navigation.",
            title="User Title",
        ),
    ] = None
    short_name: Annotated[
        Optional[str],
        Field(
            alias="short-name",
            description="A short common name, abbreviation, or acronym for the user.",
            regex="^\\S(.*\\S)?$",
            title="User Short Name",
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A summary of the user's purpose within the system.",
            title="User Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    role_ids: Annotated[
        Optional[List[RoleIdentifierReference]], Field(alias="role-ids", min_items=1)
    ] = None
    authorized_privileges: Annotated[
        Optional[List[Privilege]], Field(alias="authorized-privileges", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class AuthorizationBoundary(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A summary of the system's authorization boundary.",
            title="Authorization Boundary Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    diagrams: Annotated[Optional[List[Diagram]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class SystemImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    leveraged_authorizations: Annotated[
        Optional[List[LeveragedAuthorization]],
        Field(alias="leveraged-authorizations", min_items=1),
    ] = None
    users: Annotated[List[SystemUser], Field(min_items=1)]
    components: Annotated[List[Component1], Field(min_items=1)]
    inventory_items: Annotated[
        Optional[List[InventoryItem]], Field(alias="inventory-items", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class SpecificControlStatement(BaseModel):
    class Config:
        extra = Extra.forbid

    statement_id: Annotated[
        str,
        Field(
            alias="statement-id",
            description="A human-oriented identifier reference to a control statement.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Statement Reference",
        ),
    ]
    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this control statement elsewhere in this or other OSCAL instances. The UUID of the control statement in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Control Statement Reference Universally Unique Identifier",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    by_components: Annotated[
        Optional[List[ComponentControlImplementation]],
        Field(alias="by-components", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class AssessmentPlanTermsAndConditions(BaseModel):
    class Config:
        extra = Extra.forbid

    parts: Annotated[Optional[List[AssessmentPart]], Field(min_items=1)] = None


class AssessmentSpecificControlObjective(BaseModel):
    class Config:
        extra = Extra.forbid

    control_id: Annotated[
        str,
        Field(
            alias="control-id",
            description="A human-oriented identifier reference to a control with a corresponding id value. When referencing an externally defined control, the Control Identifier Reference must be used in the context of the external / imported OSCAL instance (e.g., uri-reference).",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Identifier Reference",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of this control objective.",
            title="Objective Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    parts: Annotated[List[Part], Field(min_items=1)]
    remarks: Optional[Remarks] = None


class AssessmentMethod(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this assessment method elsewhere in this or other OSCAL instances. The locally defined UUID of the assessment method can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Method Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of this assessment method.",
            title="Assessment Method Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    part: AssessmentPart
    remarks: Optional[Remarks] = None


class Step(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this step elsewhere in this or other OSCAL instances. The locally defined UUID of the step (in a series of steps) can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Step Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str], Field(description="The title for this step.", title="Step Title")
    ] = None
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this step.",
            title="Step Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    reviewed_controls: Annotated[
        Optional[ReviewedControlsAndControlObjectives], Field(alias="reviewed-controls")
    ] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Activity(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this assessment activity elsewhere in this or other OSCAL instances. The locally defined UUID of the activity can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Activity Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="The title for this included activity.",
            title="Included Activity Title",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this included activity.",
            title="Included Activity Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    steps: Annotated[Optional[List[Step]], Field(min_items=1)] = None
    related_controls: Annotated[
        Optional[ReviewedControlsAndControlObjectives], Field(alias="related-controls")
    ] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class SubjectOfAssessment(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Annotated[
        str,
        Field(
            description="Indicates the type of assessment subject, such as a component, inventory, item, location, or party represented by this selection statement.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Subject Type",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of the collection of subjects being included in this assessment.",
            title="Include Subjects Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    include_all: Annotated[Optional[IncludeAll], Field(alias="include-all")] = None
    include_subjects: Annotated[
        Optional[List[SelectAssessmentSubject]],
        Field(alias="include-subjects", min_items=1),
    ] = None
    exclude_subjects: Annotated[
        Optional[List[SelectAssessmentSubject]],
        Field(alias="exclude-subjects", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class AssessmentAssets(BaseModel):
    class Config:
        extra = Extra.forbid

    components: Annotated[Optional[List[Component1]], Field(min_items=1)] = None
    assessment_platforms: Annotated[
        List[AssessmentPlatform], Field(alias="assessment-platforms", min_items=1)
    ]


class IdentifiedSubject(BaseModel):
    class Config:
        extra = Extra.forbid

    subject_placeholder_uuid: Annotated[
        str,
        Field(
            alias="subject-placeholder-uuid",
            description="A machine-oriented identifier reference to a unique assessment subject placeholder defined by this task.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Subject Placeholder Universally Unique Identifier Reference",
        ),
    ]
    subjects: Annotated[List[SubjectOfAssessment], Field(min_items=1)]


class TaskReference(BaseModel):
    class Config:
        extra = Extra.forbid

    task_uuid: Annotated[
        str,
        Field(
            alias="task-uuid",
            description="A machine-oriented identifier reference to a unique task.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Task Universally Unique Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    subjects: Annotated[Optional[List[SubjectOfAssessment]], Field(min_items=1)] = None
    identified_subject: Annotated[
        Optional[IdentifiedSubject],
        Field(
            alias="identified-subject",
            description="Used to detail assessment subjects that were identfied by this task.",
            title="Identified Subject",
        ),
    ] = None
    remarks: Optional[Remarks] = None


class RiskResponseReference(BaseModel):
    class Config:
        extra = Extra.forbid

    response_uuid: Annotated[
        str,
        Field(
            alias="response-uuid",
            description="A machine-oriented identifier reference to a unique risk response.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Response Universally Unique Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    related_tasks: Annotated[
        Optional[List[TaskReference]], Field(alias="related-tasks", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class RiskLogEntry(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this risk log entry elsewhere in this or other OSCAL instances. The locally defined UUID of the risk log entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Risk Log Entry Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(description="The title for this risk log entry.", title="Title"),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of what was done regarding the risk.",
            title="Risk Task Description",
        ),
    ] = None
    start: Annotated[
        datetime,
        Field(
            description="Identifies the start date and time of the event.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Start",
        ),
    ]
    end: Annotated[
        Optional[datetime],
        Field(
            description="Identifies the end date and time of the event. If the event is a point in time, the start and end will be the same date and time.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="End",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    logged_by: Annotated[Optional[List[LoggedBy]], Field(alias="logged-by", min_items=1)] = None
    status_change: Annotated[Optional[RiskStatus], Field(alias="status-change")] = None
    related_responses: Annotated[
        Optional[List[RiskResponseReference]],
        Field(alias="related-responses", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class RiskLog(BaseModel):
    class Config:
        extra = Extra.forbid

    entries: Annotated[List[RiskLogEntry], Field(min_items=1)]


class LocalDefinitions1(BaseModel):
    class Config:
        extra = Extra.forbid

    objectives_and_methods: Annotated[
        Optional[List[AssessmentSpecificControlObjective]],
        Field(alias="objectives-and-methods", min_items=1),
    ] = None
    activities: Annotated[Optional[List[Activity]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class AssessmentLogEntry(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference an assessment event in this or other OSCAL instances. The locally defined UUID of the assessment log entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Log Entry Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(description="The title for this event.", title="Action Title"),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of this event.",
            title="Action Description",
        ),
    ] = None
    start: Annotated[
        datetime,
        Field(
            description="Identifies the start date and time of an event.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Start",
        ),
    ]
    end: Annotated[
        Optional[datetime],
        Field(
            description="Identifies the end date and time of an event. If the event is a point in time, the start and end will be the same date and time.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="End",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    logged_by: Annotated[Optional[List[LoggedBy]], Field(alias="logged-by", min_items=1)] = None
    related_tasks: Annotated[
        Optional[List[TaskReference]], Field(alias="related-tasks", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class AssessmentLog(BaseModel):
    class Config:
        extra = Extra.forbid

    entries: Annotated[List[AssessmentLogEntry], Field(min_items=1)]


class LocalDefinitions3(BaseModel):
    class Config:
        extra = Extra.forbid

    components: Annotated[Optional[List[Component1]], Field(min_items=1)] = None
    inventory_items: Annotated[
        Optional[List[InventoryItem]], Field(alias="inventory-items", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Control(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        str,
        Field(
            description="A human-oriented, locally unique identifier with instance scope that can be used to reference this control elsewhere in this and other OSCAL instances (e.g., profiles). This id should be assigned per-subject, which means it should be consistently used to identify the same control across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Identifier",
        ),
    ]
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the control.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Class",
        ),
    ] = None
    title: Annotated[
        str,
        Field(
            description="A name given to the control, which may be used by a tool for display and navigation.",
            title="Control Title",
        ),
    ]
    params: Annotated[Optional[List[Parameter]], Field(min_items=1)] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    parts: Annotated[Optional[List[Part]], Field(min_items=1)] = None
    controls: Optional[List[Control]] = None


class PublicationMetadata(BaseModel):
    class Config:
        extra = Extra.forbid

    title: Annotated[
        str,
        Field(
            description="A name given to the document, which may be used by a tool for display and navigation.",
            title="Document Title",
        ),
    ]
    published: Optional[PublicationTimestamp] = None
    last_modified: Annotated[LastModifiedTimestamp, Field(alias="last-modified")]
    version: DocumentVersion
    oscal_version: Annotated[OSCALVersion, Field(alias="oscal-version")]
    revisions: Annotated[Optional[List[RevisionHistoryEntry]], Field(min_items=1)] = None
    document_ids: Annotated[
        Optional[List[DocumentIdentifier]], Field(alias="document-ids", min_items=1)
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    roles: Annotated[Optional[List[Role]], Field(min_items=1)] = None
    locations: Annotated[Optional[List[Location]], Field(min_items=1)] = None
    parties: Annotated[Optional[List[PartyOrganizationOrPerson]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class CustomGrouping(BaseModel):
    class Config:
        extra = Extra.forbid

    groups: Annotated[Optional[List[ControlGroup1]], Field(min_items=1)] = None
    insert_controls: Annotated[
        Optional[List[SelectControls]], Field(alias="insert-controls", min_items=1)
    ] = None


class MergeControls(BaseModel):
    class Config:
        extra = Extra.forbid

    combine: Annotated[
        Optional[CombinationRule],
        Field(
            description="A Combine element defines how to combine multiple (competing) versions of the same control.",
            title="Combination rule",
        ),
    ] = None
    flat: Annotated[
        Optional[Dict[str, Any]],
        Field(description="Use the flat structuring method.", title="Flat"),
    ] = None
    as_is: Annotated[
        Optional[bool],
        Field(
            alias="as-is",
            description="An As-is element indicates that the controls should be structured in resolution as they are structured in their source catalogs. It does not contain any elements or attributes.",
            title="As-Is Structuring Directive",
        ),
    ] = None
    custom: Annotated[
        Optional[CustomGrouping],
        Field(
            description="A Custom element frames a structure for embedding represented controls in resolution.",
            title="Custom grouping",
        ),
    ] = None


class Alteration(BaseModel):
    class Config:
        extra = Extra.forbid

    control_id: Annotated[
        str,
        Field(
            alias="control-id",
            description="A human-oriented identifier reference to a control with a corresponding id value. When referencing an externally defined control, the Control Identifier Reference must be used in the context of the external / imported OSCAL instance (e.g., uri-reference).",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Identifier Reference",
        ),
    ]
    removes: Annotated[Optional[List[Removal]], Field(min_items=1)] = None
    adds: Annotated[Optional[List[Addition]], Field(min_items=1)] = None


class ControlImplementationSet(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference a set of implemented controls elsewhere in this or other OSCAL instances. The locally defined UUID of the control implementation set can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Control Implementation Set Identifier",
        ),
    ]
    source: Annotated[
        str,
        Field(
            description="A reference to an OSCAL catalog or profile providing the referenced control or subcontrol definition.",
            title="Source Resource Reference",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A description of how the specified set of controls are implemented for the containing component or capability.",
            title="Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    implemented_requirements: Annotated[
        List[ControlImplementation],
        Field(alias="implemented-requirements", min_items=1),
    ]


class SystemCharacteristics(BaseModel):
    class Config:
        extra = Extra.forbid

    system_ids: Annotated[List[SystemIdentification], Field(alias="system-ids", min_items=1)]
    system_name: Annotated[
        str,
        Field(
            alias="system-name",
            description="The full name of the system.",
            regex="^\\S(.*\\S)?$",
            title="System Name - Full",
        ),
    ]
    system_name_short: Annotated[
        Optional[str],
        Field(
            alias="system-name-short",
            description="A short name for the system, such as an acronym, that is suitable for display in a data table or summary list.",
            regex="^\\S(.*\\S)?$",
            title="System Name - Short",
        ),
    ] = None
    description: Annotated[
        str, Field(description="A summary of the system.", title="System Description")
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    date_authorized: Annotated[
        Optional[SystemAuthorizationDate], Field(alias="date-authorized")
    ] = None
    security_sensitivity_level: Annotated[
        str,
        Field(
            alias="security-sensitivity-level",
            description="The overall information system sensitivity categorization, such as defined by FIPS-199.",
            regex="^\\S(.*\\S)?$",
            title="Security Sensitivity Level",
        ),
    ]
    system_information: Annotated[SystemInformation, Field(alias="system-information")]
    security_impact_level: Annotated[SecurityImpactLevel, Field(alias="security-impact-level")]
    status: Status1
    authorization_boundary: Annotated[AuthorizationBoundary, Field(alias="authorization-boundary")]
    network_architecture: Annotated[
        Optional[NetworkArchitecture], Field(alias="network-architecture")
    ] = None
    data_flow: Annotated[Optional[DataFlow], Field(alias="data-flow")] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class ControlBasedRequirement(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this control requirement elsewhere in this or other OSCAL instances. The locally defined UUID of the control requirement can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Control Requirement Universally Unique Identifier",
        ),
    ]
    control_id: Annotated[
        str,
        Field(
            alias="control-id",
            description="A human-oriented identifier reference to a control with a corresponding id value. When referencing an externally defined control, the Control Identifier Reference must be used in the context of the external / imported OSCAL instance (e.g., uri-reference).",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    statements: Annotated[Optional[List[SpecificControlStatement]], Field(min_items=1)] = None
    by_components: Annotated[
        Optional[List[ComponentControlImplementation]],
        Field(alias="by-components", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class LocalDefinitions(BaseModel):
    class Config:
        extra = Extra.forbid

    components: Annotated[Optional[List[Component1]], Field(min_items=1)] = None
    inventory_items: Annotated[
        Optional[List[InventoryItem]], Field(alias="inventory-items", min_items=1)
    ] = None
    users: Annotated[Optional[List[SystemUser]], Field(min_items=1)] = None
    objectives_and_methods: Annotated[
        Optional[List[AssessmentSpecificControlObjective]],
        Field(alias="objectives-and-methods", min_items=1),
    ] = None
    activities: Annotated[Optional[List[Activity]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class AssociatedActivity(BaseModel):
    class Config:
        extra = Extra.forbid

    activity_uuid: Annotated[
        str,
        Field(
            alias="activity-uuid",
            description="A machine-oriented identifier reference to an activity defined in the list of activities.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Activity Universally Unique Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    subjects: Annotated[List[SubjectOfAssessment], Field(min_items=1)]
    remarks: Optional[Remarks] = None


class Task(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this task elsewhere in this or other OSCAL instances. The locally defined UUID of the task can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Task Universally Unique Identifier",
        ),
    ]
    type: Annotated[
        str,
        Field(
            description="The type of task.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Task Type",
        ),
    ]
    title: Annotated[str, Field(description="The title for this task.", title="Task Title")]
    description: Annotated[
        Optional[str],
        Field(
            description="A human-readable description of this task.",
            title="Task Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    timing: Annotated[
        Optional[EventTiming],
        Field(
            description="The timing under which the task is intended to occur.",
            title="Event Timing",
        ),
    ] = None
    dependencies: Annotated[Optional[List[TaskDependency]], Field(min_items=1)] = None
    tasks: Optional[List[Task]] = None
    associated_activities: Annotated[
        Optional[List[AssociatedActivity]],
        Field(alias="associated-activities", min_items=1),
    ] = None
    subjects: Annotated[Optional[List[SubjectOfAssessment]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Origin(BaseModel):
    class Config:
        extra = Extra.forbid

    actors: Annotated[List[OriginatingActor], Field(min_items=1)]
    related_tasks: Annotated[
        Optional[List[TaskReference]], Field(alias="related-tasks", min_items=1)
    ] = None


class Characterization(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    origin: Origin
    facets: Annotated[List[Facet], Field(min_items=1)]


class RiskResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this remediation elsewhere in this or other OSCAL instances. The locally defined UUID of the risk response can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Remediation Universally Unique Identifier",
        ),
    ]
    lifecycle: Annotated[
        str,
        Field(
            description="Identifies whether this is a recommendation, such as from an assessor or tool, or an actual plan accepted by the system owner.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Remediation Intent",
        ),
    ]
    title: Annotated[
        str,
        Field(description="The title for this response activity.", title="Response Title"),
    ]
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this response plan.",
            title="Response Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    origins: Annotated[Optional[List[Origin]], Field(min_items=1)] = None
    required_assets: Annotated[
        Optional[List[RequiredAsset]], Field(alias="required-assets", min_items=1)
    ] = None
    tasks: Annotated[Optional[List[Task]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class LocalDefinitions2(BaseModel):
    class Config:
        extra = Extra.forbid

    components: Annotated[Optional[List[Component1]], Field(min_items=1)] = None
    inventory_items: Annotated[
        Optional[List[InventoryItem]], Field(alias="inventory-items", min_items=1)
    ] = None
    users: Annotated[Optional[List[SystemUser]], Field(min_items=1)] = None
    assessment_assets: Annotated[
        Optional[AssessmentAssets], Field(alias="assessment-assets")
    ] = None
    tasks: Annotated[Optional[List[Task]], Field(min_items=1)] = None


class Finding(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this finding in this or other OSCAL instances. The locally defined UUID of the finding can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Finding Universally Unique Identifier",
        ),
    ]
    title: Annotated[str, Field(description="The title for this finding.", title="Finding Title")]
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this finding.",
            title="Finding Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    origins: Annotated[Optional[List[Origin]], Field(min_items=1)] = None
    target: ObjectiveStatus
    implementation_statement_uuid: Annotated[
        Optional[str],
        Field(
            alias="implementation-statement-uuid",
            description="A machine-oriented identifier reference to the implementation statement in the SSP to which this finding is related.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Implementation Statement UUID",
        ),
    ] = None
    related_observations: Annotated[
        Optional[List[RelatedObservation]],
        Field(alias="related-observations", min_items=1),
    ] = None
    related_risks: Annotated[
        Optional[List[AssociatedRisk]], Field(alias="related-risks", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ControlGroup(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        Optional[str],
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined group elsewhere in in this and other OSCAL instances (e.g., profiles). This id should be assigned per-subject, which means it should be consistently used to identify the same group across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Group Identifier",
        ),
    ] = None
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the group.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Group Class",
        ),
    ] = None
    title: Annotated[
        str,
        Field(
            description="A name given to the group, which may be used by a tool for display and navigation.",
            title="Group Title",
        ),
    ]
    params: Annotated[Optional[List[Parameter]], Field(min_items=1)] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    parts: Annotated[Optional[List[Part]], Field(min_items=1)] = None
    groups: Optional[List[ControlGroup]] = None
    controls: Annotated[Optional[List[Control]], Field(min_items=1)] = None


class ModifyControls(BaseModel):
    class Config:
        extra = Extra.forbid

    set_parameters: Annotated[
        Optional[List[ParameterSetting]], Field(alias="set-parameters", min_items=1)
    ] = None
    alters: Annotated[Optional[List[Alteration]], Field(min_items=1)] = None


class Component(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this component elsewhere in this or other OSCAL instances. The locally defined UUID of the component can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Identifier",
        ),
    ]
    type: Annotated[
        str,
        Field(
            description="A category describing the purpose of the component.",
            regex="^\\S(.*\\S)?$",
            title="Component Type",
        ),
    ]
    title: Annotated[
        str,
        Field(
            description="A human readable name for the component.",
            title="Component Title",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A description of the component, including information about its function.",
            title="Component Description",
        ),
    ]
    purpose: Annotated[
        Optional[str],
        Field(
            description="A summary of the technological or business purpose of the component.",
            title="Purpose",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    protocols: Annotated[Optional[List[ServiceProtocolInformation]], Field(min_items=1)] = None
    control_implementations: Annotated[
        Optional[List[ControlImplementationSet]],
        Field(alias="control-implementations", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class Capability(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this capability elsewhere in this or other OSCAL instances. The locally defined UUID of the capability can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance).This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Capability Identifier",
        ),
    ]
    name: Annotated[
        str,
        Field(
            description="The capability's human-readable name.",
            regex="^\\S(.*\\S)?$",
            title="Capability Name",
        ),
    ]
    description: Annotated[
        str,
        Field(description="A summary of the capability.", title="Capability Description"),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    incorporates_components: Annotated[
        Optional[List[IncorporatesComponent]],
        Field(alias="incorporates-components", min_items=1),
    ] = None
    control_implementations: Annotated[
        Optional[List[ControlImplementationSet]],
        Field(alias="control-implementations", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class ControlImplementation1(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A statement describing important things to know about how this set of control satisfaction documentation is approached.",
            title="Control Implementation Description",
        ),
    ]
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    implemented_requirements: Annotated[
        List[ControlBasedRequirement],
        Field(alias="implemented-requirements", min_items=1),
    ]


class SecurityAssessmentPlanSAP(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this assessment plan in this or other OSCAL instances. The locally defined UUID of the assessment plan can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Plan Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    import_ssp: Annotated[ImportSystemSecurityPlan, Field(alias="import-ssp")]
    local_definitions: Annotated[
        Optional[LocalDefinitions],
        Field(
            alias="local-definitions",
            description="Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.",
            title="Local Definitions",
        ),
    ] = None
    terms_and_conditions: Annotated[
        Optional[AssessmentPlanTermsAndConditions],
        Field(
            alias="terms-and-conditions",
            description="Used to define various terms and conditions under which an assessment, described by the plan, can be performed. Each child part defines a different type of term or condition.",
            title="Assessment Plan Terms and Conditions",
        ),
    ] = None
    reviewed_controls: Annotated[
        ReviewedControlsAndControlObjectives, Field(alias="reviewed-controls")
    ]
    assessment_subjects: Annotated[
        Optional[List[SubjectOfAssessment]],
        Field(alias="assessment-subjects", min_items=1),
    ] = None
    assessment_assets: Annotated[
        Optional[AssessmentAssets], Field(alias="assessment-assets")
    ] = None
    tasks: Annotated[Optional[List[Task]], Field(min_items=1)] = None
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class Observation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this observation elsewhere in this or other OSCAL instances. The locally defined UUID of the observation can be used to reference the data item locally or globally (e.g., in an imorted OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Observation Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(description="The title for this observation.", title="Observation Title"),
    ] = None
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this assessment observation.",
            title="Observation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    methods: Annotated[List[ObservationMethod], Field(min_items=1)]
    types: Annotated[Optional[List[ObservationType]], Field(min_items=1)] = None
    origins: Annotated[Optional[List[Origin]], Field(min_items=1)] = None
    subjects: Annotated[Optional[List[IdentifiesTheSubject]], Field(min_items=1)] = None
    relevant_evidence: Annotated[
        Optional[List[RelevantEvidence]], Field(alias="relevant-evidence", min_items=1)
    ] = None
    collected: Annotated[
        datetime,
        Field(
            description="Date/time stamp identifying when the finding information was collected.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Collected Field",
        ),
    ]
    expires: Annotated[
        Optional[datetime],
        Field(
            description="Date/time identifying when the finding information is out-of-date and no longer valid. Typically used with continuous assessment scenarios.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Expires Field",
        ),
    ] = None
    remarks: Optional[Remarks] = None


class IdentifiedRisk(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this risk elsewhere in this or other OSCAL instances. The locally defined UUID of the risk can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Risk Universally Unique Identifier",
        ),
    ]
    title: Annotated[str, Field(description="The title for this risk.", title="Risk Title")]
    description: Annotated[
        str,
        Field(
            description="A human-readable summary of the identified risk, to include a statement of how the risk impacts the system.",
            title="Risk Description",
        ),
    ]
    statement: Annotated[
        str,
        Field(
            description="An summary of impact for how the risk affects the system.",
            title="Risk Statement",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    status: RiskStatus
    origins: Annotated[Optional[List[Origin]], Field(min_items=1)] = None
    threat_ids: Annotated[Optional[List[ThreatID]], Field(alias="threat-ids", min_items=1)] = None
    characterizations: Annotated[Optional[List[Characterization]], Field(min_items=1)] = None
    mitigating_factors: Annotated[
        Optional[List[MitigatingFactor]], Field(alias="mitigating-factors", min_items=1)
    ] = None
    deadline: Annotated[
        Optional[datetime],
        Field(
            description="The date/time by which the risk must be resolved.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Risk Resolution Deadline",
        ),
    ] = None
    remediations: Annotated[Optional[List[RiskResponse]], Field(min_items=1)] = None
    risk_log: Annotated[
        Optional[RiskLog],
        Field(
            alias="risk-log",
            description="A log of all risk-related tasks taken.",
            title="Risk Log",
        ),
    ] = None
    related_observations: Annotated[
        Optional[List[RelatedObservation]],
        Field(alias="related-observations", min_items=1),
    ] = None


class AssessmentResult(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this set of results in this or other OSCAL instances. The locally defined UUID of the assessment result can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Results Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        str,
        Field(description="The title for this set of results.", title="Results Title"),
    ]
    description: Annotated[
        str,
        Field(
            description="A human-readable description of this set of test results.",
            title="Results Description",
        ),
    ]
    start: Annotated[
        datetime,
        Field(
            description="Date/time stamp identifying the start of the evidence collection reflected in these results.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="start field",
        ),
    ]
    end: Annotated[
        Optional[datetime],
        Field(
            description="Date/time stamp identifying the end of the evidence collection reflected in these results. In a continuous motoring scenario, this may contain the same value as start if appropriate.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="end field",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    local_definitions: Annotated[
        Optional[LocalDefinitions2],
        Field(
            alias="local-definitions",
            description="Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.",
            title="Local Definitions",
        ),
    ] = None
    reviewed_controls: Annotated[
        ReviewedControlsAndControlObjectives, Field(alias="reviewed-controls")
    ]
    attestations: Annotated[Optional[List[AttestationStatements]], Field(min_items=1)] = None
    assessment_log: Annotated[
        Optional[AssessmentLog],
        Field(
            alias="assessment-log",
            description="A log of all assessment-related actions taken.",
            title="Assessment Log",
        ),
    ] = None
    observations: Annotated[Optional[List[Observation]], Field(min_items=1)] = None
    risks: Annotated[Optional[List[IdentifiedRisk]], Field(min_items=1)] = None
    findings: Annotated[Optional[List[Finding]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class PlanOfActionAndMilestonesPOAM(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with instancescope that can be used to reference this POA&M instance in this OSCAL instance. This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="POA&M Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    import_ssp: Annotated[Optional[ImportSystemSecurityPlan], Field(alias="import-ssp")] = None
    system_id: Annotated[Optional[SystemIdentification], Field(alias="system-id")] = None
    local_definitions: Annotated[
        Optional[LocalDefinitions3], Field(alias="local-definitions")
    ] = None
    observations: Annotated[Optional[List[Observation]], Field(min_items=1)] = None
    risks: Annotated[Optional[List[IdentifiedRisk]], Field(min_items=1)] = None
    poam_items: Annotated[List[POAMItem], Field(alias="poam-items", min_items=1)]
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class ModelItem4(BaseModel):
    class Config:
        extra = Extra.forbid

    assessment_plan: Annotated[SecurityAssessmentPlanSAP, Field(alias="assessment-plan")]


class ModelItem6(BaseModel):
    class Config:
        extra = Extra.forbid

    plan_of_action_and_milestones: Annotated[
        PlanOfActionAndMilestonesPOAM, Field(alias="plan-of-action-and-milestones")
    ]


class Catalog(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A globally unique identifier with cross-instance scope for this catalog instance. This UUID should be changed when this document is revised.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Catalog Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    params: Annotated[Optional[List[Parameter]], Field(min_items=1)] = None
    controls: Annotated[Optional[List[Control]], Field(min_items=1)] = None
    groups: Annotated[Optional[List[ControlGroup]], Field(min_items=1)] = None
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class Profile(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this profile elsewhere in this or other OSCAL instances. The locally defined UUID of the profile can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance).This identifier should be assigned per-subject, which means it should be consistently used to identify the same profile across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Profile Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    imports: Annotated[List[ImportResource], Field(min_items=1)]
    merge: Optional[MergeControls] = None
    modify: Optional[ModifyControls] = None
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class ComponentDefinition(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this component definition elsewhere in this or other OSCAL instances. The locally defined UUID of the component definition can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Definition Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    import_component_definitions: Annotated[
        Optional[List[ImportComponentDefinition]],
        Field(alias="import-component-definitions", min_items=1),
    ] = None
    components: Annotated[Optional[List[Component]], Field(min_items=1)] = None
    capabilities: Annotated[Optional[List[Capability]], Field(min_items=1)] = None
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class SystemSecurityPlanSSP(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this system security plan (SSP) elsewhere in this or other OSCAL instances. The locally defined UUID of the SSP can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance).This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="System Security Plan Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    import_profile: Annotated[ImportProfile, Field(alias="import-profile")]
    system_characteristics: Annotated[SystemCharacteristics, Field(alias="system-characteristics")]
    system_implementation: Annotated[SystemImplementation, Field(alias="system-implementation")]
    control_implementation: Annotated[ControlImplementation1, Field(alias="control-implementation")]
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class SecurityAssessmentResultsSAR(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this assessment results instance in this or other OSCAL instances. The locally defined UUID of the assessment result can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Assessment Results Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    import_ap: Annotated[ImportAssessmentPlan, Field(alias="import-ap")]
    local_definitions: Annotated[
        Optional[LocalDefinitions1],
        Field(
            alias="local-definitions",
            description="Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.",
            title="Local Definitions",
        ),
    ] = None
    results: Annotated[List[AssessmentResult], Field(min_items=1)]
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class ModelItem(BaseModel):
    class Config:
        extra = Extra.forbid

    catalog: Catalog


class ModelItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    profile: Profile


class ModelItem2(BaseModel):
    class Config:
        extra = Extra.forbid

    component_definition: Annotated[ComponentDefinition, Field(alias="component-definition")]


class ModelItem3(BaseModel):
    class Config:
        extra = Extra.forbid

    system_security_plan: Annotated[SystemSecurityPlanSSP, Field(alias="system-security-plan")]


class ModelItem5(BaseModel):
    class Config:
        extra = Extra.forbid

    assessment_results: Annotated[SecurityAssessmentResultsSAR, Field(alias="assessment-results")]


class Model(BaseModel):
    __root__: Union[
        ModelItem,
        ModelItem1,
        ModelItem2,
        ModelItem3,
        ModelItem4,
        ModelItem5,
        ModelItem6,
    ]


AssessmentPart.update_forward_refs()
Part.update_forward_refs()
ControlGroup1.update_forward_refs()
Control.update_forward_refs()
Task.update_forward_refs()
ControlGroup.update_forward_refs()
