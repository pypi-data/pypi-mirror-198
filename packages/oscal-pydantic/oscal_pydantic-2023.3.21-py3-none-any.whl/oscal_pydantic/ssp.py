# generated by datamodel-codegen:
#   filename:  oscal_ssp_schema.json
#   timestamp: 2023-03-16T10:34:01+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, List, Optional

from pydantic import AnyUrl, EmailStr, Extra, Field
from pydantic import BaseModel as PydanticBaseModel


class BaseModel(PydanticBaseModel):
    class Config:
        allow_population_by_field_name = True


class InformationTypeSystematizedIdentifier(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A human-oriented, globally unique identifier qualified by the given identification system used, such as NIST SP 800-60. This identifier has cross-instance scope and can be used to reference this system elsewhere in this or other OSCAL instances. This id should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^\\S(.*\\S)?$",
            title="Information Type Systematized Identifier",
        ),
    ]


class InformationTypeCategorization(BaseModel):
    class Config:
        extra = Extra.forbid

    system: Annotated[
        AnyUrl,
        Field(
            description="Specifies the information type identification system used.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Information Type Identification System",
        ),
    ]
    information_type_ids: Annotated[
        Optional[List[InformationTypeSystematizedIdentifier]],
        Field(alias="information-type-ids", min_items=1),
    ] = None


class BaseLevelConfidentialityIntegrityOrAvailability(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The prescribed base (Confidentiality, Integrity, or Availability) security impact level.",
            regex="^\\S(.*\\S)?$",
            title="Base Level (Confidentiality, Integrity, or Availability)",
        ),
    ]


class SelectedLevelConfidentialityIntegrityOrAvailability(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The selected (Confidentiality, Integrity, or Availability) security impact level.",
            regex="^\\S(.*\\S)?$",
            title="Selected Level (Confidentiality, Integrity, or Availability)",
        ),
    ]


class AdjustmentJustification(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="If the selected security level is different from the base security level, this contains the justification for the change.",
            title="Adjustment Justification",
        ),
    ]


class SecurityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    security_objective_confidentiality: Annotated[
        str,
        Field(
            alias="security-objective-confidentiality",
            description="A target-level of confidentiality for the system, based on the sensitivity of information within the system.",
            regex="^\\S(.*\\S)?$",
            title="Security Objective: Confidentiality",
        ),
    ]
    security_objective_integrity: Annotated[
        str,
        Field(
            alias="security-objective-integrity",
            description="A target-level of integrity for the system, based on the sensitivity of information within the system.",
            regex="^\\S(.*\\S)?$",
            title="Security Objective: Integrity",
        ),
    ]
    security_objective_availability: Annotated[
        str,
        Field(
            alias="security-objective-availability",
            description="A target-level of availability for the system, based on the sensitivity of information within the system.",
            regex="^\\S(.*\\S)?$",
            title="Security Objective: Availability",
        ),
    ]


class State(Enum):
    operational = "operational"
    under_development = "under-development"
    under_major_modification = "under-major-modification"
    disposition = "disposition"
    other = "other"


class SystemAuthorizationDate(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The date the system received its authorization.",
            regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))(Z|[+-][0-9]{2}:[0-9]{2})?$",
            title="System Authorization Date",
        ),
    ]


class LocationURL(BaseModel):
    __root__: Annotated[
        AnyUrl,
        Field(
            description="The uniform resource locator (URL) for a web site or Internet presence associated with the location.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Location URL",
        ),
    ]


class LocationReference(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A machine-oriented identifier reference to a location defined in the metadata section of this or another OSCAL instance. The UUID of the location in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Location Reference",
        ),
    ]


class PartyType(Enum):
    person = "person"
    organization = "organization"


class PartyExternalIdentifier(BaseModel):
    class Config:
        extra = Extra.forbid

    scheme: Annotated[
        AnyUrl,
        Field(
            description="Indicates the type of external identifier.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="External Identifier Schema",
        ),
    ]
    id: str


class OrganizationalAffiliation(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A machine-oriented identifier reference to another party (person or organization) that this subject is associated with. The UUID of the party in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Organizational Affiliation",
        ),
    ]


class PartyReference(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A machine-oriented identifier reference to another party defined in metadata. The UUID of the party in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Party Reference",
        ),
    ]


class RoleIdentifierReference(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A human-oriented identifier reference to roles served by the user.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Role Identifier Reference",
        ),
    ]


class Base64(BaseModel):
    class Config:
        extra = Extra.forbid

    filename: Annotated[
        Optional[str],
        Field(
            description="Name of the file before it was encoded as Base64 to be embedded in a resource. This is the name that will be assigned to the file when the file is decoded.",
            title="File Name",
        ),
    ] = None
    media_type: Annotated[
        Optional[str],
        Field(
            alias="media-type",
            description="Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.",
            regex="^\\S(.*\\S)?$",
            title="Media Type",
        ),
    ] = None
    value: str


class Link(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URL reference to a resource.",
            title="Hypertext Reference",
        ),
    ]
    rel: Annotated[
        Optional[str],
        Field(
            description="Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Relation",
        ),
    ] = None
    media_type: Annotated[
        Optional[str],
        Field(
            alias="media-type",
            description="Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.",
            regex="^\\S(.*\\S)?$",
            title="Media Type",
        ),
    ] = None
    text: Annotated[
        Optional[str],
        Field(
            description="A textual label to associate with the link, which may be used for presentation in a tool.",
            title="Link Text",
        ),
    ] = None


class Hash(BaseModel):
    class Config:
        extra = Extra.forbid

    algorithm: Annotated[
        str,
        Field(
            description="Method by which a hash is derived",
            regex="^\\S(.*\\S)?$",
            title="Hash algorithm",
        ),
    ]
    value: str


class Remarks(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Additional commentary on the containing object.",
            title="Remarks",
        ),
    ]


class PublicationTimestamp(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description="The date and time the document was published. The date-time value must be formatted according to RFC 3339 with full time and time zone included.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Publication Timestamp",
        ),
    ]


class LastModifiedTimestamp(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description="The date and time the document was last modified. The date-time value must be formatted according to RFC 3339 with full time and time zone included.",
            # regex="^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})$",
            title="Last Modified Timestamp",
        ),
    ]


class DocumentVersion(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A string used to distinguish the current version of the document from other previous (and future) versions.",
            regex="^\\S(.*\\S)?$",
            title="Document Version",
        ),
    ]


class OSCALVersion(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="The OSCAL model version the document was authored against.",
            regex="^\\S(.*\\S)?$",
            title="OSCAL version",
        ),
    ]


class EmailAddress(BaseModel):
    __root__: Annotated[
        EmailStr,
        Field(
            description="An email address as defined by RFC 5322 Section 3.4.1.",
            # regex="^.+@.+$",
            title="Email Address",
        ),
    ]


class TelephoneNumber(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Annotated[
        Optional[str],
        Field(
            description="Indicates the type of phone number.",
            regex="^\\S(.*\\S)?$",
            title="type flag",
        ),
    ] = None
    number: str


class AddressLine(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A single line of an address.",
            regex="^\\S(.*\\S)?$",
            title="Address line",
        ),
    ]


class DocumentIdentifier(BaseModel):
    class Config:
        extra = Extra.forbid

    scheme: Annotated[
        Optional[AnyUrl],
        Field(
            description="Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Document Identification Scheme",
        ),
    ] = None
    identifier: str


class State1(Enum):
    under_development = "under-development"
    operational = "operational"
    disposition = "disposition"
    other = "other"


class Status1(BaseModel):
    class Config:
        extra = Extra.forbid

    state: Annotated[State1, Field(description="The operational status.", title="State")]
    remarks: Optional[Remarks] = None


class Transport(Enum):
    TCP = "TCP"
    UDP = "UDP"


class PortRange(BaseModel):
    class Config:
        extra = Extra.forbid

    start: Annotated[
        Optional[int],
        Field(
            description="Indicates the starting port number in a port range",
            ge=0,
            multiple_of=1.0,
            title="Start",
        ),
    ] = None
    end: Annotated[
        Optional[int],
        Field(
            description="Indicates the ending port number in a port range",
            ge=0,
            multiple_of=1.0,
            title="End",
        ),
    ] = None
    transport: Annotated[
        Optional[Transport],
        Field(description="Indicates the transport type.", title="Transport"),
    ] = None


class ImplementationStatus(BaseModel):
    class Config:
        extra = Extra.forbid

    state: Annotated[
        str,
        Field(
            description="Identifies the implementation status of the control or control objective.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Implementation State",
        ),
    ]
    remarks: Optional[Remarks] = None


class FunctionsPerformed(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="Describes a function performed for a given authorized privilege by this user class.",
            regex="^\\S(.*\\S)?$",
            title="Functions Performed",
        ),
    ]


class ParameterValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A parameter value or set of values.",
            regex="^\\S(.*\\S)?$",
            title="Parameter Value",
        ),
    ]


class SetParameterValue(BaseModel):
    class Config:
        extra = Extra.forbid

    param_id: Annotated[
        str,
        Field(
            alias="param-id",
            description="A human-oriented reference to a parameter within a control, who's catalog has been imported into the current implementation context.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter ID",
        ),
    ]
    values: Annotated[List[ParameterValue], Field(min_items=1)]
    remarks: Optional[Remarks] = None


class SystemIdentification(BaseModel):
    class Config:
        extra = Extra.forbid

    identifier_type: Annotated[
        Optional[AnyUrl],
        Field(
            alias="identifier-type",
            description="Identifies the identification system from which the provided identifier was assigned.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Identification System Type",
        ),
    ] = None
    id: str


class ConstraintTest(BaseModel):
    class Config:
        extra = Extra.forbid

    expression: Annotated[
        str,
        Field(
            description="A formal (executable) expression of a constraint",
            regex="^\\S(.*\\S)?$",
            title="Constraint test",
        ),
    ]
    remarks: Optional[Remarks] = None


class Constraint(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        Optional[str],
        Field(
            description="A textual summary of the constraint to be applied.",
            title="Constraint Description",
        ),
    ] = None
    tests: Annotated[Optional[List[ConstraintTest]], Field(min_items=1)] = None


class Guideline(BaseModel):
    class Config:
        extra = Extra.forbid

    prose: Annotated[
        str,
        Field(
            description="Prose permits multiple paragraphs, lists, tables etc.",
            title="Guideline Text",
        ),
    ]


class ParameterCardinality(Enum):
    one = "one"
    one_or_more = "one-or-more"


class Selection(BaseModel):
    class Config:
        extra = Extra.forbid

    how_many: Annotated[
        Optional[ParameterCardinality],
        Field(
            alias="how-many",
            description="Describes the number of selections that must occur. Without this setting, only one value should be assumed to be permitted.",
            title="Parameter Cardinality",
        ),
    ] = None
    choice: Annotated[Optional[List[str]], Field(min_items=1)] = None


class IncludeAll(BaseModel):
    pass

    class Config:
        extra = Extra.forbid


class ImportProfile(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URL reference to the profile or catalog to use as the system's control baseline.",
            title="Profile Reference",
        ),
    ]
    remarks: Optional[Remarks] = None


class Status(BaseModel):
    class Config:
        extra = Extra.forbid

    state: Annotated[State, Field(description="The current operating status.", title="State")]
    remarks: Optional[Remarks] = None


class ResourceLink(BaseModel):
    class Config:
        extra = Extra.forbid

    href: Annotated[
        str,
        Field(
            description="A resolvable URI reference to a resource.",
            title="Hypertext Reference",
        ),
    ]
    media_type: Annotated[
        Optional[str],
        Field(
            alias="media-type",
            description="Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.",
            regex="^\\S(.*\\S)?$",
            title="Media Type",
        ),
    ] = None
    hashes: Annotated[Optional[List[Hash]], Field(min_items=1)] = None


class Property(BaseModel):
    class Config:
        extra = Extra.forbid

    name: Annotated[
        str,
        Field(
            description="A textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Property Name",
        ),
    ]
    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined property elsewhere in this or other OSCAL instances. This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Property Universally Unique Identifier",
        ),
    ] = None
    ns: Annotated[
        Optional[AnyUrl],
        Field(
            description="A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Property Namespace",
        ),
    ] = None
    value: Annotated[
        str,
        Field(
            description="Indicates the value of the attribute, characteristic, or quality.",
            regex="^\\S(.*\\S)?$",
            title="Property Value",
        ),
    ]
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Property Class",
        ),
    ] = None
    remarks: Optional[Remarks] = None


class ResponsibleParty(BaseModel):
    class Config:
        extra = Extra.forbid

    role_id: Annotated[
        str,
        Field(
            alias="role-id",
            description="A human-oriented identifier reference to roles served by the user.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Responsible Role",
        ),
    ]
    party_uuids: Annotated[List[PartyReference], Field(alias="party-uuids", min_items=1)]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class ResponsibleRole(BaseModel):
    class Config:
        extra = Extra.forbid

    role_id: Annotated[
        str,
        Field(
            alias="role-id",
            description="A human-oriented identifier reference to roles responsible for the business function.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Responsible Role ID",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    party_uuids: Annotated[
        Optional[List[PartyReference]], Field(alias="party-uuids", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Address(BaseModel):
    class Config:
        extra = Extra.forbid

    type: Annotated[
        Optional[str],
        Field(
            description="Indicates the type of address.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Address Type",
        ),
    ] = None
    addr_lines: Annotated[
        Optional[List[AddressLine]], Field(alias="addr-lines", min_items=1)
    ] = None
    city: Annotated[
        Optional[str],
        Field(
            description="City, town or geographical region for the mailing address.",
            regex="^\\S(.*\\S)?$",
            title="City",
        ),
    ] = None
    state: Annotated[
        Optional[str],
        Field(
            description="State, province or analogous geographical region for mailing address",
            regex="^\\S(.*\\S)?$",
            title="State",
        ),
    ] = None
    postal_code: Annotated[
        Optional[str],
        Field(
            alias="postal-code",
            description="Postal or ZIP code for mailing address",
            regex="^\\S(.*\\S)?$",
            title="Postal Code",
        ),
    ] = None
    country: Annotated[
        Optional[str],
        Field(
            description="The ISO 3166-1 alpha-2 country code for the mailing address.",
            regex="^\\S(.*\\S)?$",
            title="Country Code",
        ),
    ] = None


class ServiceProtocolInformation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this service protocol information elsewhere in this or other OSCAL instances. The locally defined UUID of the service protocol can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Service Protocol Information Universally Unique Identifier",
        ),
    ] = None
    name: Annotated[
        str,
        Field(
            description='The common name of the protocol, which should be the appropriate "service name" from the IANA Service Name and Transport Protocol Port Number Registry.',
            regex="^\\S(.*\\S)?$",
            title="Protocol Name",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A human readable name for the protocol (e.g., Transport Layer Security).",
            title="Protocol Title",
        ),
    ] = None
    port_ranges: Annotated[
        Optional[List[PortRange]], Field(alias="port-ranges", min_items=1)
    ] = None


class Privilege(BaseModel):
    class Config:
        extra = Extra.forbid

    title: Annotated[
        str,
        Field(
            description="A human readable name for the privilege.",
            title="Privilege Title",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(
            description="A summary of the privilege's purpose within the system.",
            title="Privilege Description",
        ),
    ] = None
    functions_performed: Annotated[
        List[FunctionsPerformed], Field(alias="functions-performed", min_items=1)
    ]


class ImplementedComponent(BaseModel):
    class Config:
        extra = Extra.forbid

    component_uuid: Annotated[
        str,
        Field(
            alias="component-uuid",
            description="A machine-oriented identifier reference to a component that is implemented as part of an inventory item.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Universally Unique Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class InventoryItem(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this inventory item elsewhere in this or other OSCAL instances. The locally defined UUID of the inventory item can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Inventory Item Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A summary of the inventory item stating its purpose within the system.",
            title="Inventory Item Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    implemented_components: Annotated[
        Optional[List[ImplementedComponent]],
        Field(alias="implemented-components", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class Part(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        Optional[str],
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined part elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, this identifier must be referenced in the context of the containing resource (e.g., import-profile). This id should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Identifier",
        ),
    ] = None
    name: Annotated[
        str,
        Field(
            description="A textual label that uniquely identifies the part's semantic type.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Name",
        ),
    ]
    ns: Annotated[
        Optional[AnyUrl],
        Field(
            description="A namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.",
            # regex="^[a-zA-Z][a-zA-Z0-9+\\-.]+:.+$",
            title="Part Namespace",
        ),
    ] = None
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a sub-type or characterization of the part's name. This can be used to further distinguish or discriminate between the semantics of multiple parts of the same control with the same name and ns.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Part Class",
        ),
    ] = None
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the part, which may be used by a tool for display and navigation.",
            title="Part Title",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    prose: Annotated[
        Optional[str],
        Field(
            description="Permits multiple paragraphs, lists, tables etc.",
            title="Part Text",
        ),
    ] = None
    parts: Optional[List[Part]] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None


class Parameter(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        str,
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined parameter elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, this identifier must be referenced in the context of the containing resource (e.g., import-profile). This id should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter Identifier",
        ),
    ]
    class_: Annotated[
        Optional[str],
        Field(
            alias="class",
            description="A textual label that provides a characterization of the parameter.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Parameter Class",
        ),
    ] = None
    depends_on: Annotated[
        Optional[str],
        Field(
            alias="depends-on",
            description="**(deprecated)** Another parameter invoking this one. This construct has been deprecated and should not be used.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Depends on",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    label: Annotated[
        Optional[str],
        Field(
            description="A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.",
            title="Parameter Label",
        ),
    ] = None
    usage: Annotated[
        Optional[str],
        Field(
            description="Describes the purpose and use of a parameter",
            title="Parameter Usage Description",
        ),
    ] = None
    constraints: Annotated[Optional[List[Constraint]], Field(min_items=1)] = None
    guidelines: Annotated[Optional[List[Guideline]], Field(min_items=1)] = None
    values: Annotated[Optional[List[ParameterValue]], Field(min_items=1)] = None
    select: Optional[Selection] = None
    remarks: Optional[Remarks] = None


class ConfidentialityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    base: BaseLevelConfidentialityIntegrityOrAvailability
    selected: Optional[SelectedLevelConfidentialityIntegrityOrAvailability] = None
    adjustment_justification: Annotated[
        Optional[AdjustmentJustification], Field(alias="adjustment-justification")
    ] = None


class IntegrityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    base: BaseLevelConfidentialityIntegrityOrAvailability
    selected: Optional[SelectedLevelConfidentialityIntegrityOrAvailability] = None
    adjustment_justification: Annotated[
        Optional[AdjustmentJustification], Field(alias="adjustment-justification")
    ] = None


class AvailabilityImpactLevel(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    base: BaseLevelConfidentialityIntegrityOrAvailability
    selected: Optional[SelectedLevelConfidentialityIntegrityOrAvailability] = None
    adjustment_justification: Annotated[
        Optional[AdjustmentJustification], Field(alias="adjustment-justification")
    ] = None


class InformationType(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        Optional[str],
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this information type elsewhere in this or other OSCAL instances. The locally defined UUID of the information type can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Information Type Universally Unique Identifier",
        ),
    ] = None
    title: Annotated[
        str,
        Field(
            description="A human readable name for the information type. This title should be meaningful within the context of the system.",
            title="title field",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A summary of how this information type is used within the system.",
            title="Information Type Description",
        ),
    ]
    categorizations: Annotated[
        Optional[List[InformationTypeCategorization]], Field(min_items=1)
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    confidentiality_impact: Annotated[
        ConfidentialityImpactLevel,
        Field(
            alias="confidentiality-impact",
            description="The expected level of impact resulting from the unauthorized disclosure of the described information.",
            title="Confidentiality Impact Level",
        ),
    ]
    integrity_impact: Annotated[
        IntegrityImpactLevel,
        Field(
            alias="integrity-impact",
            description="The expected level of impact resulting from the unauthorized modification of the described information.",
            title="Integrity Impact Level",
        ),
    ]
    availability_impact: Annotated[
        AvailabilityImpactLevel,
        Field(
            alias="availability-impact",
            description="The expected level of impact resulting from the disruption of access to or use of the described information or the information system.",
            title="Availability Impact Level",
        ),
    ]


class SystemInformation(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    information_types: Annotated[
        List[InformationType], Field(alias="information-types", min_items=1)
    ]


class Diagram(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this diagram elsewhere in this or other OSCAL instances. The locally defined UUID of the diagram can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Diagram ID",
        ),
    ]
    description: Annotated[
        Optional[str],
        Field(description="A summary of the diagram.", title="Diagram Description"),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    caption: Annotated[
        Optional[str],
        Field(description="A brief caption to annotate the diagram.", title="Caption"),
    ] = None
    remarks: Optional[Remarks] = None


class NetworkArchitecture(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A summary of the system's network architecture.",
            title="Network Architecture Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    diagrams: Annotated[Optional[List[Diagram]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class DataFlow(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A summary of the system's data flow.",
            title="Data Flow Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    diagrams: Annotated[Optional[List[Diagram]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class LeveragedAuthorization(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope and can be used to reference this leveraged authorization elsewhere in this or other OSCAL instances. The locally defined UUID of the leveraged authorization can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Leveraged Authorization Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        str,
        Field(
            description="A human readable name for the leveraged authorization in the context of the system.",
            title="title field",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    party_uuid: Annotated[
        str,
        Field(
            alias="party-uuid",
            description="A machine-oriented identifier reference to the party that manages the leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="party-uuid field",
        ),
    ]
    date_authorized: Annotated[SystemAuthorizationDate, Field(alias="date-authorized")]
    remarks: Optional[Remarks] = None


class ProvidedControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this provided entry elsewhere in this or other OSCAL instances. The locally defined UUID of the provided entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Provided Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of the control or control statement implementation that can be provided to another system leveraging this system.",
            title="Provided Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ControlImplementationResponsibility(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this responsibility elsewhere in this or other OSCAL instances. The locally defined UUID of the responsibility can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Responsibility Universally Unique Identifier",
        ),
    ]
    provided_uuid: Annotated[
        Optional[str],
        Field(
            alias="provided-uuid",
            description="A machine-oriented identifier reference to an inherited control implementation that a leveraging system is inheriting from a leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Provided UUID",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of the control or control statement implementation that a leveraging system must implement to satisfy the control provided by a leveraged system.",
            title="Control Implementation Responsibility Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class Export(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        Optional[str],
        Field(
            description="An implementation statement that describes the aspects of the control or control statement implementation that can be available to another system leveraging this system.",
            title="Control Implementation Export Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    provided: Annotated[Optional[List[ProvidedControlImplementation]], Field(min_items=1)] = None
    responsibilities: Annotated[
        Optional[List[ControlImplementationResponsibility]], Field(min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class InheritedControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this inherited entry elsewhere in this or other OSCAL instances. The locally defined UUID of the inherited control implementation can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Inherited Universally Unique Identifier",
        ),
    ]
    provided_uuid: Annotated[
        Optional[str],
        Field(
            alias="provided-uuid",
            description="A machine-oriented identifier reference to an inherited control implementation that a leveraging system is inheriting from a leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Provided UUID",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is inheriting from a leveraged system.",
            title="Inherited Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None


class SatisfiedControlImplementationResponsibility(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this satisfied control implementation entry elsewhere in this or other OSCAL instances. The locally defined UUID of the control implementation can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Satisfied Universally Unique Identifier",
        ),
    ]
    responsibility_uuid: Annotated[
        Optional[str],
        Field(
            alias="responsibility-uuid",
            description="A machine-oriented identifier reference to a control implementation that satisfies a responsibility imposed by a leveraged system.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Responsibility UUID",
        ),
    ] = None
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is implementing based on a requirement from a leveraged system.",
            title="Satisfied Control Implementation Responsibility Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class ComponentControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    component_uuid: Annotated[
        str,
        Field(
            alias="component-uuid",
            description="A machine-oriented identifier reference to the component that is implemeting a given control.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Universally Unique Identifier Reference",
        ),
    ]
    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this by-component entry elsewhere in this or other OSCAL instances. The locally defined UUID of the by-component entry can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="By-Component Universally Unique Identifier",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="An implementation statement that describes how a control or a control statement is implemented within the referenced system component.",
            title="Control Implementation Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    implementation_status: Annotated[
        Optional[ImplementationStatus], Field(alias="implementation-status")
    ] = None
    export: Annotated[
        Optional[Export],
        Field(
            description="Identifies content intended for external consumption, such as with leveraged organizations.",
            title="Export",
        ),
    ] = None
    inherited: Annotated[Optional[List[InheritedControlImplementation]], Field(min_items=1)] = None
    satisfied: Annotated[
        Optional[List[SatisfiedControlImplementationResponsibility]], Field(min_items=1)
    ] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class RevisionHistoryEntry(BaseModel):
    class Config:
        extra = Extra.forbid

    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the document revision, which may be used by a tool for display and navigation.",
            title="Document Title",
        ),
    ] = None
    published: Optional[PublicationTimestamp] = None
    last_modified: Annotated[Optional[LastModifiedTimestamp], Field(alias="last-modified")] = None
    version: DocumentVersion
    oscal_version: Annotated[Optional[OSCALVersion], Field(alias="oscal-version")] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class Location(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined location elsewhere in this or other OSCAL instances. The locally defined UUID of the location can be used to reference the data item locally or globally (e.g., from an importing OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Location Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the location, which may be used by a tool for display and navigation.",
            title="Location Title",
        ),
    ] = None
    address: Address
    email_addresses: Annotated[
        Optional[List[EmailAddress]], Field(alias="email-addresses", min_items=1)
    ] = None
    telephone_numbers: Annotated[
        Optional[List[TelephoneNumber]], Field(alias="telephone-numbers", min_items=1)
    ] = None
    urls: Annotated[Optional[List[LocationURL]], Field(min_items=1)] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class PartyOrganizationOrPerson(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined party elsewhere in this or other OSCAL instances. The locally defined UUID of the party can be used to reference the data item locally or globally (e.g., from an importing OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Party Universally Unique Identifier",
        ),
    ]
    type: Annotated[
        PartyType,
        Field(
            description="A category describing the kind of party the object describes.",
            title="Party Type",
        ),
    ]
    name: Annotated[
        Optional[str],
        Field(
            description="The full name of the party. This is typically the legal name associated with the party.",
            regex="^\\S(.*\\S)?$",
            title="Party Name",
        ),
    ] = None
    short_name: Annotated[
        Optional[str],
        Field(
            alias="short-name",
            description="A short common name, abbreviation, or acronym for the party.",
            regex="^\\S(.*\\S)?$",
            title="Party Short Name",
        ),
    ] = None
    external_ids: Annotated[
        Optional[List[PartyExternalIdentifier]],
        Field(alias="external-ids", min_items=1),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    email_addresses: Annotated[
        Optional[List[EmailAddress]], Field(alias="email-addresses", min_items=1)
    ] = None
    telephone_numbers: Annotated[
        Optional[List[TelephoneNumber]], Field(alias="telephone-numbers", min_items=1)
    ] = None
    addresses: Annotated[Optional[List[Address]], Field(min_items=1)] = None
    location_uuids: Annotated[
        Optional[List[LocationReference]], Field(alias="location-uuids", min_items=1)
    ] = None
    member_of_organizations: Annotated[
        Optional[List[OrganizationalAffiliation]],
        Field(alias="member-of-organizations", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class Role(BaseModel):
    class Config:
        extra = Extra.forbid

    id: Annotated[
        str,
        Field(
            description="A human-oriented, locally unique identifier with cross-instance scope that can be used to reference this defined role elsewhere in this or other OSCAL instances. When referenced from another OSCAL instance, the locally defined ID of the Role from the imported OSCAL instance must be referenced in the context of the containing resource (e.g., import, import-component-definition, import-profile, import-ssp or import-ap). This ID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Role Identifier",
        ),
    ]
    title: Annotated[
        str,
        Field(
            description="A name given to the role, which may be used by a tool for display and navigation.",
            title="Role Title",
        ),
    ]
    short_name: Annotated[
        Optional[str],
        Field(
            alias="short-name",
            description="A short common name, abbreviation, or acronym for the role.",
            regex="^\\S(.*\\S)?$",
            title="Role Short Name",
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A summary of the role's purpose and associated responsibilities.",
            title="Role Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class Citation(BaseModel):
    class Config:
        extra = Extra.forbid

    text: Annotated[str, Field(description="A line of citation text.", title="Citation Text")]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None


class Resource(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this defined resource elsewhere in this or other OSCAL instances. This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Resource Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the resource, which may be used by a tool for display and navigation.",
            title="Resource Title",
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A short summary of the resource used to indicate the purpose of the resource.",
            title="Resource Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    document_ids: Annotated[
        Optional[List[DocumentIdentifier]], Field(alias="document-ids", min_items=1)
    ] = None
    citation: Annotated[
        Optional[Citation],
        Field(
            description="A citation consisting of end note text and optional structured bibliographic data.",
            title="Citation",
        ),
    ] = None
    rlinks: Annotated[Optional[List[ResourceLink]], Field(min_items=1)] = None
    base64: Annotated[
        Optional[Base64],
        Field(
            description="The Base64 alphabet in RFC 2045 - aligned with XSD.",
            title="Base64",
        ),
    ] = None
    remarks: Optional[Remarks] = None


class BackMatter(BaseModel):
    class Config:
        extra = Extra.forbid

    resources: Annotated[Optional[List[Resource]], Field(min_items=1)] = None


class Component(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this component elsewhere in this or other OSCAL instances. The locally defined UUID of the component can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Component Identifier",
        ),
    ]
    type: Annotated[
        str,
        Field(
            description="A category describing the purpose of the component.",
            regex="^\\S(.*\\S)?$",
            title="Component Type",
        ),
    ]
    title: Annotated[
        str,
        Field(
            description="A human readable name for the system component.",
            title="Component Title",
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A description of the component, including information about its function.",
            title="Component Description",
        ),
    ]
    purpose: Annotated[
        Optional[str],
        Field(
            description="A summary of the technological or business purpose of the component.",
            title="Purpose",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    status: Annotated[
        Status1,
        Field(
            description="Describes the operational status of the system component.",
            title="Status",
        ),
    ]
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    protocols: Annotated[Optional[List[ServiceProtocolInformation]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class SystemUser(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this user class elsewhere in this or other OSCAL instances. The locally defined UUID of the system user can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="User Universally Unique Identifier",
        ),
    ]
    title: Annotated[
        Optional[str],
        Field(
            description="A name given to the user, which may be used by a tool for display and navigation.",
            title="User Title",
        ),
    ] = None
    short_name: Annotated[
        Optional[str],
        Field(
            alias="short-name",
            description="A short common name, abbreviation, or acronym for the user.",
            regex="^\\S(.*\\S)?$",
            title="User Short Name",
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description="A summary of the user's purpose within the system.",
            title="User Description",
        ),
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    role_ids: Annotated[
        Optional[List[RoleIdentifierReference]], Field(alias="role-ids", min_items=1)
    ] = None
    authorized_privileges: Annotated[
        Optional[List[Privilege]], Field(alias="authorized-privileges", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class AuthorizationBoundary(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A summary of the system's authorization boundary.",
            title="Authorization Boundary Description",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    diagrams: Annotated[Optional[List[Diagram]], Field(min_items=1)] = None
    remarks: Optional[Remarks] = None


class SystemImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    leveraged_authorizations: Annotated[
        Optional[List[LeveragedAuthorization]],
        Field(alias="leveraged-authorizations", min_items=1),
    ] = None
    users: Annotated[List[SystemUser], Field(min_items=1)]
    components: Annotated[List[Component], Field(min_items=1)]
    inventory_items: Annotated[
        Optional[List[InventoryItem]], Field(alias="inventory-items", min_items=1)
    ] = None
    remarks: Optional[Remarks] = None


class SpecificControlStatement(BaseModel):
    class Config:
        extra = Extra.forbid

    statement_id: Annotated[
        str,
        Field(
            alias="statement-id",
            description="A human-oriented identifier reference to a control statement.",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Statement Reference",
        ),
    ]
    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this control statement elsewhere in this or other OSCAL instances. The UUID of the control statement in the source OSCAL instance is sufficient to reference the data item locally or globally (e.g., in an imported OSCAL instance).",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Control Statement Reference Universally Unique Identifier",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    by_components: Annotated[
        Optional[List[ComponentControlImplementation]],
        Field(alias="by-components", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class PublicationMetadata(BaseModel):
    class Config:
        extra = Extra.forbid

    title: Annotated[
        str,
        Field(
            description="A name given to the document, which may be used by a tool for display and navigation.",
            title="Document Title",
        ),
    ]
    published: Optional[PublicationTimestamp] = None
    last_modified: Annotated[LastModifiedTimestamp, Field(alias="last-modified")]
    version: DocumentVersion
    oscal_version: Annotated[OSCALVersion, Field(alias="oscal-version")]
    revisions: Annotated[Optional[List[RevisionHistoryEntry]], Field(min_items=1)] = None
    document_ids: Annotated[
        Optional[List[DocumentIdentifier]], Field(alias="document-ids", min_items=1)
    ] = None
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    roles: Annotated[Optional[List[Role]], Field(min_items=1)] = None
    locations: Annotated[Optional[List[Location]], Field(min_items=1)] = None
    parties: Annotated[Optional[List[PartyOrganizationOrPerson]], Field(min_items=1)] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class SystemCharacteristics(BaseModel):
    class Config:
        extra = Extra.forbid

    system_ids: Annotated[List[SystemIdentification], Field(alias="system-ids", min_items=1)]
    system_name: Annotated[
        str,
        Field(
            alias="system-name",
            description="The full name of the system.",
            regex="^\\S(.*\\S)?$",
            title="System Name - Full",
        ),
    ]
    system_name_short: Annotated[
        Optional[str],
        Field(
            alias="system-name-short",
            description="A short name for the system, such as an acronym, that is suitable for display in a data table or summary list.",
            regex="^\\S(.*\\S)?$",
            title="System Name - Short",
        ),
    ] = None
    description: Annotated[
        str, Field(description="A summary of the system.", title="System Description")
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    date_authorized: Annotated[
        Optional[SystemAuthorizationDate], Field(alias="date-authorized")
    ] = None
    security_sensitivity_level: Annotated[
        str,
        Field(
            alias="security-sensitivity-level",
            description="The overall information system sensitivity categorization, such as defined by FIPS-199.",
            regex="^\\S(.*\\S)?$",
            title="Security Sensitivity Level",
        ),
    ]
    system_information: Annotated[SystemInformation, Field(alias="system-information")]
    security_impact_level: Annotated[SecurityImpactLevel, Field(alias="security-impact-level")]
    status: Status
    authorization_boundary: Annotated[AuthorizationBoundary, Field(alias="authorization-boundary")]
    network_architecture: Annotated[
        Optional[NetworkArchitecture], Field(alias="network-architecture")
    ] = None
    data_flow: Annotated[Optional[DataFlow], Field(alias="data-flow")] = None
    responsible_parties: Annotated[
        Optional[List[ResponsibleParty]],
        Field(alias="responsible-parties", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class ControlBasedRequirement(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this control requirement elsewhere in this or other OSCAL instances. The locally defined UUID of the control requirement can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance). This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="Control Requirement Universally Unique Identifier",
        ),
    ]
    control_id: Annotated[
        str,
        Field(
            alias="control-id",
            description="A human-oriented identifier reference to a control with a corresponding id value. When referencing an externally defined control, the Control Identifier Reference must be used in the context of the external / imported OSCAL instance (e.g., uri-reference).",
            regex="^(\\w|_)(\\w|\\d|[.\\--_])*$",
            title="Control Identifier Reference",
        ),
    ]
    props: Annotated[Optional[List[Property]], Field(min_items=1)] = None
    links: Annotated[Optional[List[Link]], Field(min_items=1)] = None
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    responsible_roles: Annotated[
        Optional[List[ResponsibleRole]], Field(alias="responsible-roles", min_items=1)
    ] = None
    statements: Annotated[Optional[List[SpecificControlStatement]], Field(min_items=1)] = None
    by_components: Annotated[
        Optional[List[ComponentControlImplementation]],
        Field(alias="by-components", min_items=1),
    ] = None
    remarks: Optional[Remarks] = None


class ControlImplementation(BaseModel):
    class Config:
        extra = Extra.forbid

    description: Annotated[
        str,
        Field(
            description="A statement describing important things to know about how this set of control satisfaction documentation is approached.",
            title="Control Implementation Description",
        ),
    ]
    set_parameters: Annotated[
        Optional[List[SetParameterValue]], Field(alias="set-parameters", min_items=1)
    ] = None
    implemented_requirements: Annotated[
        List[ControlBasedRequirement],
        Field(alias="implemented-requirements", min_items=1),
    ]


class SystemSecurityPlanSSP(BaseModel):
    class Config:
        extra = Extra.forbid

    uuid: Annotated[
        str,
        Field(
            description="A machine-oriented, globally unique identifier with cross-instance scope that can be used to reference this system security plan (SSP) elsewhere in this or other OSCAL instances. The locally defined UUID of the SSP can be used to reference the data item locally or globally (e.g., in an imported OSCAL instance).This UUID should be assigned per-subject, which means it should be consistently used to identify the same subject across revisions of the document.",
            regex="^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[45][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            title="System Security Plan Universally Unique Identifier",
        ),
    ]
    metadata: PublicationMetadata
    import_profile: Annotated[ImportProfile, Field(alias="import-profile")]
    system_characteristics: Annotated[SystemCharacteristics, Field(alias="system-characteristics")]
    system_implementation: Annotated[SystemImplementation, Field(alias="system-implementation")]
    control_implementation: Annotated[ControlImplementation, Field(alias="control-implementation")]
    back_matter: Annotated[Optional[BackMatter], Field(alias="back-matter")] = None


class Model(BaseModel):
    class Config:
        extra = Extra.forbid

    system_security_plan: Annotated[SystemSecurityPlanSSP, Field(alias="system-security-plan")]


Part.update_forward_refs()
