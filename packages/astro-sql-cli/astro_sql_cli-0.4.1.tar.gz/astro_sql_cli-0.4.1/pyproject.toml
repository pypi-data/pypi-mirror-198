[tool.poetry]
name = "astro-sql-cli"
version = "0.4.1"
description = "Empower analysts to build workflows to transform data using SQL"
authors = [
    "Astronomer <humans@astronomer.io>",
]
readme = "README.md"
license = "Apache-2.0"
keywords = ["sql", "transform", "analyst", "workflow", "airflow", "astronomer"]
packages = [{include = "sql_cli"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Database",
    "Framework :: Apache Airflow",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[project.urls]
Home = "https://astronomer.io/"
Source = "https://github.com/astronomer/astro-sdk/sql-cli"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
typer = {extras = ["all"], version = "^0.6.1"}
networkx = [
    {version = "^2.6.3", python = "<3.8"},
    {version = "^2.8.7", python = ">=3.8"}
]
Jinja2 = ">=2.10.1, <=3.1"
black = { version = "*", allow-prereleases = true }
python-frontmatter = "^1.0.0"
PyYAML = ">=5.4.1"
python-dotenv = "^0.21.0"
# Set the minimum version to v1.3.1 to include a fix for https://github.com/astronomer/astro-sdk/issues/1351
astro-sdk-python = {extras = ["all"], version = ">=1.3.1,<1.5"}
apache-airflow = ">2.1"

[tool.poetry.scripts]
flow = "sql_cli.__main__:app"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
mypy = "^0.982"
types-pyyaml = ">5.4.1"
freezegun = "^1.2.2"

[tool.poetry.group.type_check]
optional = true

[tool.poetry.group.type_check.dependencies]
mypy = "^0.982"
types-pyyaml = ">5.4.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
src_paths = ["sql_cli", "tests"]

[tool.mypy]
color_output = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
files = ["sql_cli"]
follow_imports = "skip"
no_implicit_optional = true
pretty = true
strict_equality = true
show_error_codes = true
show_error_context = true
warn_redundant_casts = true
#warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-s --cov=sql_cli --cov-report term-missing"
testpaths = [
    "tests",
]
