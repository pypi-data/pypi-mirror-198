{
  "type": "record",
  "name": "DataHubViewInfo",
  "namespace": "com.linkedin.pegasus2avro.view",
  "doc": "Information about a DataHub View. -- TODO: Understand whether an entity type filter is required.",
  "fields": [
    {
      "name": "name",
      "type": "string",
      "doc": "The name of the View",
      "Searchable": {
        "fieldType": "TEXT_PARTIAL"
      }
    },
    {
      "name": "description",
      "type": [
        "null",
        "string"
      ],
      "doc": "Description of the view",
      "default": null
    },
    {
      "name": "type",
      "type": {
        "type": "enum",
        "name": "DataHubViewType",
        "symbols": [
          "PERSONAL",
          "GLOBAL"
        ],
        "symbolDocs": {
          "GLOBAL": "A global view, which all users can see and use.",
          "PERSONAL": "A view private for a specific person."
        }
      },
      "doc": "The type of View",
      "Searchable": {}
    },
    {
      "name": "definition",
      "type": {
        "type": "record",
        "name": "DataHubViewDefinition",
        "doc": "A View definition.",
        "fields": [
          {
            "name": "entityTypes",
            "type": {
              "type": "array",
              "items": "string"
            },
            "doc": "The Entity Types in the scope of the View."
          },
          {
            "name": "filter",
            "type": {
              "type": "record",
              "name": "Filter",
              "namespace": "com.linkedin.pegasus2avro.metadata.query.filter",
              "doc": "The filter for finding a record or a collection of records",
              "fields": [
                {
                  "name": "or",
                  "type": [
                    "null",
                    {
                      "type": "array",
                      "items": {
                        "type": "record",
                        "name": "ConjunctiveCriterion",
                        "doc": "A list of criterion and'd together.",
                        "fields": [
                          {
                            "name": "and",
                            "type": {
                              "type": "array",
                              "items": {
                                "type": "record",
                                "name": "Criterion",
                                "doc": "A criterion for matching a field with given value",
                                "fields": [
                                  {
                                    "name": "field",
                                    "type": "string",
                                    "doc": "The name of the field that the criterion refers to"
                                  },
                                  {
                                    "name": "value",
                                    "type": "string",
                                    "doc": "The value of the intended field"
                                  },
                                  {
                                    "name": "values",
                                    "type": {
                                      "type": "array",
                                      "items": "string"
                                    },
                                    "doc": "Values. one of which the intended field should match\nNote, if values is set, the above \"value\" field will be ignored",
                                    "default": []
                                  },
                                  {
                                    "name": "condition",
                                    "type": {
                                      "type": "enum",
                                      "name": "Condition",
                                      "doc": "The matching condition in a filter criterion",
                                      "symbols": [
                                        "CONTAIN",
                                        "END_WITH",
                                        "EQUAL",
                                        "IS_NULL",
                                        "GREATER_THAN",
                                        "GREATER_THAN_OR_EQUAL_TO",
                                        "IN",
                                        "LESS_THAN",
                                        "LESS_THAN_OR_EQUAL_TO",
                                        "START_WITH"
                                      ],
                                      "symbolDocs": {
                                        "CONTAIN": "Represent the relation: String field contains value, e.g. name contains Profile",
                                        "END_WITH": "Represent the relation: String field ends with value, e.g. name ends with Event",
                                        "EQUAL": "Represent the relation: field = value, e.g. platform = hdfs",
                                        "GREATER_THAN": "Represent the relation greater than, e.g. ownerCount > 5",
                                        "GREATER_THAN_OR_EQUAL_TO": "Represent the relation greater than or equal to, e.g. ownerCount >= 5",
                                        "IN": "Represent the relation: String field is one of the array values to, e.g. name in [\"Profile\", \"Event\"]",
                                        "IS_NULL": "Represent the relation: field is null, e.g. platform is null",
                                        "LESS_THAN": "Represent the relation less than, e.g. ownerCount < 3",
                                        "LESS_THAN_OR_EQUAL_TO": "Represent the relation less than or equal to, e.g. ownerCount <= 3",
                                        "START_WITH": "Represent the relation: String field starts with value, e.g. name starts with PageView"
                                      }
                                    },
                                    "doc": "The condition for the criterion, e.g. EQUAL, START_WITH",
                                    "default": "EQUAL"
                                  },
                                  {
                                    "name": "negated",
                                    "type": "boolean",
                                    "doc": "Whether the condition should be negated",
                                    "default": false
                                  }
                                ]
                              }
                            },
                            "doc": "A list of and criteria the filter applies to the query"
                          }
                        ]
                      }
                    }
                  ],
                  "doc": "A list of disjunctive criterion for the filter. (or operation to combine filters)",
                  "default": null
                },
                {
                  "name": "criteria",
                  "type": [
                    "null",
                    {
                      "type": "array",
                      "items": "Criterion"
                    }
                  ],
                  "doc": "Deprecated! A list of conjunctive criterion for the filter. If \"or\" field is provided, then this field is ignored.",
                  "default": null
                }
              ]
            },
            "doc": "The filter criteria, which represents the view itself"
          }
        ]
      },
      "doc": "The view itself"
    },
    {
      "name": "created",
      "type": {
        "type": "record",
        "name": "AuditStamp",
        "namespace": "com.linkedin.pegasus2avro.common",
        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
        "fields": [
          {
            "name": "time",
            "type": "long",
            "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
          },
          {
            "name": "actor",
            "type": "string",
            "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
            "java": {
              "class": "com.linkedin.pegasus2avro.common.urn.Urn"
            }
          },
          {
            "name": "impersonator",
            "type": [
              "null",
              "string"
            ],
            "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
            "default": null,
            "java": {
              "class": "com.linkedin.pegasus2avro.common.urn.Urn"
            }
          },
          {
            "name": "message",
            "type": [
              "null",
              "string"
            ],
            "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.",
            "default": null
          }
        ]
      },
      "doc": "Audit stamp capturing the time and actor who created the View.",
      "Searchable": {
        "/actor": {
          "fieldName": "createdBy",
          "fieldType": "URN"
        },
        "/time": {
          "fieldName": "createdAt",
          "fieldType": "DATETIME"
        }
      }
    },
    {
      "name": "lastModified",
      "type": "com.linkedin.pegasus2avro.common.AuditStamp",
      "doc": "Audit stamp capturing the time and actor who last modified the View.",
      "Searchable": {
        "/time": {
          "fieldName": "lastModifiedAt",
          "fieldType": "DATETIME"
        }
      }
    }
  ],
  "Aspect": {
    "name": "dataHubViewInfo"
  }
}