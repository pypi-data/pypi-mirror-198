{
  "type": "record",
  "name": "DashboardInfo",
  "namespace": "com.linkedin.pegasus2avro.dashboard",
  "doc": "Information about a dashboard",
  "fields": [
    {
      "name": "customProperties",
      "type": {
        "type": "map",
        "values": "string"
      },
      "doc": "Custom property bag.",
      "default": {},
      "Searchable": {
        "/*": {
          "queryByDefault": true
        }
      }
    },
    {
      "name": "externalUrl",
      "type": [
        "null",
        "string"
      ],
      "doc": "URL where the reference exist",
      "default": null,
      "java": {
        "class": "com.linkedin.pegasus2avro.common.url.Url",
        "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
      }
    },
    {
      "name": "title",
      "type": "string",
      "doc": "Title of the dashboard",
      "Searchable": {
        "boostScore": 10.0,
        "enableAutocomplete": true,
        "fieldType": "TEXT_PARTIAL"
      }
    },
    {
      "name": "description",
      "type": "string",
      "doc": "Detailed description about the dashboard",
      "Searchable": {
        "fieldType": "TEXT",
        "hasValuesFieldName": "hasDescription"
      }
    },
    {
      "name": "charts",
      "type": {
        "type": "array",
        "items": "string"
      },
      "doc": "Charts in a dashboard\nDeprecated! Use chartEdges instead.",
      "default": [],
      "Relationship": {
        "/*": {
          "entityTypes": [
            "chart"
          ],
          "isLineage": true,
          "name": "Contains"
        }
      },
      "deprecated": true
    },
    {
      "name": "chartEdges",
      "type": [
        "null",
        {
          "type": "array",
          "items": {
            "type": "record",
            "name": "Edge",
            "namespace": "com.linkedin.pegasus2avro.common",
            "doc": "Information about a relatonship edge.",
            "fields": [
              {
                "name": "sourceUrn",
                "type": "string",
                "doc": "Urn of the source of this relationship edge.",
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                }
              },
              {
                "name": "destinationUrn",
                "type": "string",
                "doc": "Urn of the destination of this relationship edge.",
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                }
              },
              {
                "name": "created",
                "type": {
                  "type": "record",
                  "name": "AuditStamp",
                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
                  "fields": [
                    {
                      "name": "time",
                      "type": "long",
                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
                    },
                    {
                      "name": "actor",
                      "type": "string",
                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
                      "java": {
                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                      }
                    },
                    {
                      "name": "impersonator",
                      "type": [
                        "null",
                        "string"
                      ],
                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
                      "default": null,
                      "java": {
                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                      }
                    },
                    {
                      "name": "message",
                      "type": [
                        "null",
                        "string"
                      ],
                      "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.",
                      "default": null
                    }
                  ]
                },
                "doc": "Audit stamp containing who created this relationship edge and when"
              },
              {
                "name": "lastModified",
                "type": "AuditStamp",
                "doc": "Audit stamp containing who last modified this relationship edge and when"
              },
              {
                "name": "properties",
                "type": [
                  "null",
                  {
                    "type": "map",
                    "values": "string"
                  }
                ],
                "doc": "A generic properties bag that allows us to store specific information on this graph edge.",
                "default": null
              }
            ]
          }
        }
      ],
      "doc": "Charts in a dashboard",
      "default": null,
      "Relationship": {
        "/*/destinationUrn": {
          "createdActor": "chartEdges/*/created/actor",
          "createdOn": "chartEdges/*/created/time",
          "entityTypes": [
            "chart"
          ],
          "isLineage": true,
          "name": "Contains",
          "properties": "chartEdges/*/properties",
          "updatedActor": "chartEdges/*/lastModified/actor",
          "updatedOn": "chartEdges/*/lastModified/time"
        }
      }
    },
    {
      "name": "datasets",
      "type": {
        "type": "array",
        "items": "string"
      },
      "doc": "Datasets consumed by a dashboard\nDeprecated! Use datasetEdges instead.",
      "default": [],
      "Relationship": {
        "/*": {
          "entityTypes": [
            "dataset"
          ],
          "isLineage": true,
          "name": "Consumes"
        }
      },
      "deprecated": true
    },
    {
      "name": "datasetEdges",
      "type": [
        "null",
        {
          "type": "array",
          "items": "com.linkedin.pegasus2avro.common.Edge"
        }
      ],
      "doc": "Datasets consumed by a dashboard",
      "default": null,
      "Relationship": {
        "/*/destinationUrn": {
          "createdActor": "datasetEdges/*/created/actor",
          "createdOn": "datasetEdges/*/created/time",
          "entityTypes": [
            "dataset"
          ],
          "isLineage": true,
          "name": "Consumes",
          "properties": "datasetEdges/*/properties",
          "updatedActor": "datasetEdges/*/lastModified/actor",
          "updatedOn": "datasetEdges/*/lastModified/time"
        }
      }
    },
    {
      "name": "lastModified",
      "type": {
        "type": "record",
        "name": "ChangeAuditStamps",
        "namespace": "com.linkedin.pegasus2avro.common",
        "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into various lifecycle stages, and who acted to move it into those lifecycle stages. The recommended best practice is to include this record in your record schema, and annotate its fields as @readOnly in your resource. See https://github.com/linkedin/rest.li/wiki/Validation-in-Rest.li#restli-validation-annotations",
        "fields": [
          {
            "name": "created",
            "type": "AuditStamp",
            "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
            "default": {
              "actor": "urn:li:corpuser:unknown",
              "impersonator": null,
              "time": 0,
              "message": null
            }
          },
          {
            "name": "lastModified",
            "type": "AuditStamp",
            "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
            "default": {
              "actor": "urn:li:corpuser:unknown",
              "impersonator": null,
              "time": 0,
              "message": null
            }
          },
          {
            "name": "deleted",
            "type": [
              "null",
              "AuditStamp"
            ],
            "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
            "default": null
          }
        ]
      },
      "doc": "Captures information about who created/last modified/deleted this dashboard and when"
    },
    {
      "name": "dashboardUrl",
      "type": [
        "null",
        "string"
      ],
      "doc": "URL for the dashboard. This could be used as an external link on DataHub to allow users access/view the dashboard",
      "default": null,
      "java": {
        "class": "com.linkedin.pegasus2avro.common.url.Url",
        "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
      }
    },
    {
      "name": "access",
      "type": [
        "null",
        {
          "type": "enum",
          "name": "AccessLevel",
          "namespace": "com.linkedin.pegasus2avro.common",
          "doc": "The various access levels",
          "symbols": [
            "PUBLIC",
            "PRIVATE"
          ],
          "symbolDocs": {
            "PRIVATE": "Private availability to certain set of users",
            "PUBLIC": "Publicly available access level"
          }
        }
      ],
      "doc": "Access level for the dashboard",
      "default": null,
      "Searchable": {
        "addToFilters": true,
        "fieldType": "KEYWORD",
        "filterNameOverride": "Access Level"
      }
    },
    {
      "name": "lastRefreshed",
      "type": [
        "null",
        "long"
      ],
      "doc": "The time when this dashboard last refreshed",
      "default": null
    }
  ],
  "Aspect": {
    "name": "dashboardInfo"
  }
}